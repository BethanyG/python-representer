# BEGIN TREE BEFORE
Module(
  [
    ImportFrom(
      'functools',
      [
        alias(
          'reduce',
          lineno=1,
          col_offset=22,
          end_lineno=1,
          end_col_offset=28)],
      0,
      lineno=1,
      col_offset=0,
      end_lineno=1,
      end_col_offset=28),
    ImportFrom(
      'operator',
      [
        alias(
          'mul',
          lineno=2,
          col_offset=21,
          end_lineno=2,
          end_col_offset=24)],
      0,
      lineno=2,
      col_offset=0,
      end_lineno=2,
      end_col_offset=24),
    FunctionDef(
      'slices',
      arguments(
        [],
        [
          arg(
            'series',
            lineno=5,
            col_offset=11,
            end_lineno=5,
            end_col_offset=17),
          arg(
            'size',
            lineno=5,
            col_offset=19,
            end_lineno=5,
            end_col_offset=23)],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      [
        If(
          UnaryOp(
            Not(),
            Compare(
              Name(
                'size',
                Load(),
                lineno=7,
                col_offset=11,
                end_lineno=7,
                end_col_offset=15),
              [
                LtE()],
              [
                Call(
                  Name(
                    'len',
                    Load(),
                    lineno=7,
                    col_offset=19,
                    end_lineno=7,
                    end_col_offset=22),
                  [
                    Name(
                      'series',
                      Load(),
                      lineno=7,
                      col_offset=23,
                      end_lineno=7,
                      end_col_offset=29)],
                  [],
                  lineno=7,
                  col_offset=19,
                  end_lineno=7,
                  end_col_offset=30)],
              lineno=7,
              col_offset=11,
              end_lineno=7,
              end_col_offset=30),
            lineno=7,
            col_offset=7,
            end_lineno=7,
            end_col_offset=30),
          [
            Raise(
              Call(
                Name(
                  'ValueError',
                  Load(),
                  lineno=8,
                  col_offset=14,
                  end_lineno=8,
                  end_col_offset=24),
                [
                  Constant(
                    'span must be smaller than string length',
                    lineno=8,
                    col_offset=25,
                    end_lineno=8,
                    end_col_offset=66)],
                [],
                lineno=8,
                col_offset=14,
                end_lineno=8,
                end_col_offset=67),
              lineno=8,
              col_offset=8,
              end_lineno=8,
              end_col_offset=67)],
          [
            If(
              UnaryOp(
                Not(),
                Compare(
                  Constant(
                    0,
                    lineno=9,
                    col_offset=13,
                    end_lineno=9,
                    end_col_offset=14),
                  [
                    Lt()],
                  [
                    Name(
                      'size',
                      Load(),
                      lineno=9,
                      col_offset=17,
                      end_lineno=9,
                      end_col_offset=21)],
                  lineno=9,
                  col_offset=13,
                  end_lineno=9,
                  end_col_offset=21),
                lineno=9,
                col_offset=9,
                end_lineno=9,
                end_col_offset=21),
              [
                Raise(
                  Call(
                    Name(
                      'ValueError',
                      Load(),
                      lineno=10,
                      col_offset=14,
                      end_lineno=10,
                      end_col_offset=24),
                    [
                      Constant(
                        'span must not be negative',
                        lineno=10,
                        col_offset=25,
                        end_lineno=10,
                        end_col_offset=52)],
                    [],
                    lineno=10,
                    col_offset=14,
                    end_lineno=10,
                    end_col_offset=53),
                  lineno=10,
                  col_offset=8,
                  end_lineno=10,
                  end_col_offset=53)],
              [
                If(
                  UnaryOp(
                    Not(),
                    Call(
                      Name(
                        'all',
                        Load(),
                        lineno=11,
                        col_offset=13,
                        end_lineno=11,
                        end_col_offset=16),
                      [
                        GeneratorExp(
                          Call(
                            Attribute(
                              Name(
                                'item',
                                Load(),
                                lineno=11,
                                col_offset=17,
                                end_lineno=11,
                                end_col_offset=21),
                              'isdigit',
                              Load(),
                              lineno=11,
                              col_offset=17,
                              end_lineno=11,
                              end_col_offset=29),
                            [],
                            [],
                            lineno=11,
                            col_offset=17,
                            end_lineno=11,
                            end_col_offset=31),
                          [
                            comprehension(
                              Name(
                                'item',
                                Store(),
                                lineno=11,
                                col_offset=36,
                                end_lineno=11,
                                end_col_offset=40),
                              Name(
                                'series',
                                Load(),
                                lineno=11,
                                col_offset=44,
                                end_lineno=11,
                                end_col_offset=50),
                              [],
                              0)],
                          lineno=11,
                          col_offset=16,
                          end_lineno=11,
                          end_col_offset=51)],
                      [],
                      lineno=11,
                      col_offset=13,
                      end_lineno=11,
                      end_col_offset=51),
                    lineno=11,
                    col_offset=9,
                    end_lineno=11,
                    end_col_offset=51),
                  [
                    Raise(
                      Call(
                        Name(
                          'ValueError',
                          Load(),
                          lineno=12,
                          col_offset=14,
                          end_lineno=12,
                          end_col_offset=24),
                        [
                          Constant(
                            'digits input must only contain digits',
                            lineno=12,
                            col_offset=25,
                            end_lineno=12,
                            end_col_offset=64)],
                        [],
                        lineno=12,
                        col_offset=14,
                        end_lineno=12,
                        end_col_offset=65),
                      lineno=12,
                      col_offset=8,
                      end_lineno=12,
                      end_col_offset=65)],
                  [],
                  lineno=11,
                  col_offset=4,
                  end_lineno=12,
                  end_col_offset=65)],
              lineno=9,
              col_offset=4,
              end_lineno=12,
              end_col_offset=65)],
          lineno=7,
          col_offset=4,
          end_lineno=12,
          end_col_offset=65),
        Assign(
          [
            Name(
              'numbers',
              Store(),
              lineno=14,
              col_offset=4,
              end_lineno=14,
              end_col_offset=11)],
          ListComp(
            Call(
              Name(
                'int',
                Load(),
                lineno=14,
                col_offset=15,
                end_lineno=14,
                end_col_offset=18),
              [
                Name(
                  'digit',
                  Load(),
                  lineno=14,
                  col_offset=19,
                  end_lineno=14,
                  end_col_offset=24)],
              [],
              lineno=14,
              col_offset=15,
              end_lineno=14,
              end_col_offset=25),
            [
              comprehension(
                Name(
                  'digit',
                  Store(),
                  lineno=14,
                  col_offset=30,
                  end_lineno=14,
                  end_col_offset=35),
                Name(
                  'series',
                  Load(),
                  lineno=14,
                  col_offset=39,
                  end_lineno=14,
                  end_col_offset=45),
                [],
                0)],
            lineno=14,
            col_offset=14,
            end_lineno=14,
            end_col_offset=46),
          lineno=14,
          col_offset=4,
          end_lineno=14,
          end_col_offset=46),
        Return(
          ListComp(
            Subscript(
              Name(
                'numbers',
                Load(),
                lineno=16,
                col_offset=12,
                end_lineno=16,
                end_col_offset=19),
              Slice(
                Name(
                  'idx',
                  Load(),
                  lineno=16,
                  col_offset=20,
                  end_lineno=16,
                  end_col_offset=23),
                BinOp(
                  Name(
                    'idx',
                    Load(),
                    lineno=16,
                    col_offset=24,
                    end_lineno=16,
                    end_col_offset=27),
                  Add(),
                  Name(
                    'size',
                    Load(),
                    lineno=16,
                    col_offset=30,
                    end_lineno=16,
                    end_col_offset=34),
                  lineno=16,
                  col_offset=24,
                  end_lineno=16,
                  end_col_offset=34),
                lineno=16,
                col_offset=20,
                end_lineno=16,
                end_col_offset=34),
              Load(),
              lineno=16,
              col_offset=12,
              end_lineno=16,
              end_col_offset=35),
            [
              comprehension(
                Name(
                  'idx',
                  Store(),
                  lineno=17,
                  col_offset=16,
                  end_lineno=17,
                  end_col_offset=19),
                Call(
                  Name(
                    'range',
                    Load(),
                    lineno=17,
                    col_offset=23,
                    end_lineno=17,
                    end_col_offset=28),
                  [
                    BinOp(
                      BinOp(
                        Call(
                          Name(
                            'len',
                            Load(),
                            lineno=17,
                            col_offset=29,
                            end_lineno=17,
                            end_col_offset=32),
                          [
                            Name(
                              'numbers',
                              Load(),
                              lineno=17,
                              col_offset=33,
                              end_lineno=17,
                              end_col_offset=40)],
                          [],
                          lineno=17,
                          col_offset=29,
                          end_lineno=17,
                          end_col_offset=41),
                        Sub(),
                        Name(
                          'size',
                          Load(),
                          lineno=17,
                          col_offset=44,
                          end_lineno=17,
                          end_col_offset=48),
                        lineno=17,
                        col_offset=29,
                        end_lineno=17,
                        end_col_offset=48),
                      Add(),
                      Constant(
                        1,
                        lineno=17,
                        col_offset=51,
                        end_lineno=17,
                        end_col_offset=52),
                      lineno=17,
                      col_offset=29,
                      end_lineno=17,
                      end_col_offset=52)],
                  [],
                  lineno=17,
                  col_offset=23,
                  end_lineno=17,
                  end_col_offset=53),
                [],
                0)],
            lineno=16,
            col_offset=11,
            end_lineno=17,
            end_col_offset=54),
          lineno=16,
          col_offset=4,
          end_lineno=17,
          end_col_offset=54)],
      [],
      lineno=5,
      col_offset=0,
      end_lineno=17,
      end_col_offset=54),
    FunctionDef(
      'largest_product',
      arguments(
        [],
        [
          arg(
            'series',
            lineno=20,
            col_offset=20,
            end_lineno=20,
            end_col_offset=26),
          arg(
            'size',
            lineno=20,
            col_offset=28,
            end_lineno=20,
            end_col_offset=32)],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      [
        If(
          Compare(
            Name(
              'size',
              Load(),
              lineno=21,
              col_offset=7,
              end_lineno=21,
              end_col_offset=11),
            [
              Eq()],
            [
              Constant(
                0,
                lineno=21,
                col_offset=15,
                end_lineno=21,
                end_col_offset=16)],
            lineno=21,
            col_offset=7,
            end_lineno=21,
            end_col_offset=16),
          [
            Return(
              Constant(
                1,
                lineno=22,
                col_offset=15,
                end_lineno=22,
                end_col_offset=16),
              lineno=22,
              col_offset=8,
              end_lineno=22,
              end_col_offset=16)],
          [],
          lineno=21,
          col_offset=4,
          end_lineno=22,
          end_col_offset=16),
        Return(
          Call(
            Name(
              'max',
              Load(),
              lineno=23,
              col_offset=11,
              end_lineno=23,
              end_col_offset=14),
            [
              GeneratorExp(
                Call(
                  Name(
                    'reduce',
                    Load(),
                    lineno=23,
                    col_offset=15,
                    end_lineno=23,
                    end_col_offset=21),
                  [
                    Name(
                      'mul',
                      Load(),
                      lineno=23,
                      col_offset=22,
                      end_lineno=23,
                      end_col_offset=25),
                    Name(
                      'slice',
                      Load(),
                      lineno=23,
                      col_offset=27,
                      end_lineno=23,
                      end_col_offset=32)],
                  [],
                  lineno=23,
                  col_offset=15,
                  end_lineno=23,
                  end_col_offset=33),
                [
                  comprehension(
                    Name(
                      'slice',
                      Store(),
                      lineno=23,
                      col_offset=38,
                      end_lineno=23,
                      end_col_offset=43),
                    Call(
                      Name(
                        'slices',
                        Load(),
                        lineno=23,
                        col_offset=47,
                        end_lineno=23,
                        end_col_offset=53),
                      [
                        Name(
                          'series',
                          Load(),
                          lineno=23,
                          col_offset=54,
                          end_lineno=23,
                          end_col_offset=60),
                        Name(
                          'size',
                          Load(),
                          lineno=23,
                          col_offset=62,
                          end_lineno=23,
                          end_col_offset=66)],
                      [],
                      lineno=23,
                      col_offset=47,
                      end_lineno=23,
                      end_col_offset=67),
                    [],
                    0)],
                lineno=23,
                col_offset=14,
                end_lineno=23,
                end_col_offset=68)],
            [],
            lineno=23,
            col_offset=11,
            end_lineno=23,
            end_col_offset=68),
          lineno=23,
          col_offset=4,
          end_lineno=23,
          end_col_offset=68)],
      [],
      lineno=20,
      col_offset=0,
      end_lineno=23,
      end_col_offset=68)],
  [])

# BEGIN TREE AFTER
Module(
  [
    ImportFrom(
      'functools',
      [
        alias(
          'reduce',
          lineno=1,
          col_offset=22,
          end_lineno=1,
          end_col_offset=28)],
      0,
      lineno=1,
      col_offset=0,
      end_lineno=1,
      end_col_offset=28),
    ImportFrom(
      'operator',
      [
        alias(
          'mul',
          lineno=2,
          col_offset=21,
          end_lineno=2,
          end_col_offset=24)],
      0,
      lineno=2,
      col_offset=0,
      end_lineno=2,
      end_col_offset=24),
    FunctionDef(
      'placeholder_0',
      arguments(
        [],
        [
          arg(
            'placeholder_1',
            lineno=5,
            col_offset=11,
            end_lineno=5,
            end_col_offset=17),
          arg(
            'placeholder_2',
            lineno=5,
            col_offset=19,
            end_lineno=5,
            end_col_offset=23)],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      [
        If(
          UnaryOp(
            Not(),
            Compare(
              Name(
                'placeholder_2',
                Load(),
                lineno=7,
                col_offset=11,
                end_lineno=7,
                end_col_offset=15),
              [
                LtE()],
              [
                Call(
                  Name(
                    'len',
                    Load(),
                    lineno=7,
                    col_offset=19,
                    end_lineno=7,
                    end_col_offset=22),
                  [
                    Name(
                      'placeholder_1',
                      Load(),
                      lineno=7,
                      col_offset=23,
                      end_lineno=7,
                      end_col_offset=29)],
                  [],
                  lineno=7,
                  col_offset=19,
                  end_lineno=7,
                  end_col_offset=30)],
              lineno=7,
              col_offset=11,
              end_lineno=7,
              end_col_offset=30),
            lineno=7,
            col_offset=7,
            end_lineno=7,
            end_col_offset=30),
          [
            Raise(
              Call(
                Name(
                  'ValueError',
                  Load(),
                  lineno=8,
                  col_offset=14,
                  end_lineno=8,
                  end_col_offset=24),
                [
                  Constant(
                    'span must be smaller than string length',
                    lineno=8,
                    col_offset=25,
                    end_lineno=8,
                    end_col_offset=66)],
                [],
                lineno=8,
                col_offset=14,
                end_lineno=8,
                end_col_offset=67),
              lineno=8,
              col_offset=8,
              end_lineno=8,
              end_col_offset=67)],
          [
            If(
              UnaryOp(
                Not(),
                Compare(
                  Constant(
                    0,
                    lineno=9,
                    col_offset=13,
                    end_lineno=9,
                    end_col_offset=14),
                  [
                    Lt()],
                  [
                    Name(
                      'placeholder_2',
                      Load(),
                      lineno=9,
                      col_offset=17,
                      end_lineno=9,
                      end_col_offset=21)],
                  lineno=9,
                  col_offset=13,
                  end_lineno=9,
                  end_col_offset=21),
                lineno=9,
                col_offset=9,
                end_lineno=9,
                end_col_offset=21),
              [
                Raise(
                  Call(
                    Name(
                      'ValueError',
                      Load(),
                      lineno=10,
                      col_offset=14,
                      end_lineno=10,
                      end_col_offset=24),
                    [
                      Constant(
                        'span must not be negative',
                        lineno=10,
                        col_offset=25,
                        end_lineno=10,
                        end_col_offset=52)],
                    [],
                    lineno=10,
                    col_offset=14,
                    end_lineno=10,
                    end_col_offset=53),
                  lineno=10,
                  col_offset=8,
                  end_lineno=10,
                  end_col_offset=53)],
              [
                If(
                  UnaryOp(
                    Not(),
                    Call(
                      Name(
                        'all',
                        Load(),
                        lineno=11,
                        col_offset=13,
                        end_lineno=11,
                        end_col_offset=16),
                      [
                        GeneratorExp(
                          Call(
                            Attribute(
                              Name(
                                'placeholder_3',
                                Load(),
                                lineno=11,
                                col_offset=17,
                                end_lineno=11,
                                end_col_offset=21),
                              'isdigit',
                              Load(),
                              lineno=11,
                              col_offset=17,
                              end_lineno=11,
                              end_col_offset=29),
                            [],
                            [],
                            lineno=11,
                            col_offset=17,
                            end_lineno=11,
                            end_col_offset=31),
                          [
                            comprehension(
                              Name(
                                'placeholder_3',
                                Store(),
                                lineno=11,
                                col_offset=36,
                                end_lineno=11,
                                end_col_offset=40),
                              Name(
                                'placeholder_1',
                                Load(),
                                lineno=11,
                                col_offset=44,
                                end_lineno=11,
                                end_col_offset=50),
                              [],
                              0)],
                          lineno=11,
                          col_offset=16,
                          end_lineno=11,
                          end_col_offset=51)],
                      [],
                      lineno=11,
                      col_offset=13,
                      end_lineno=11,
                      end_col_offset=51),
                    lineno=11,
                    col_offset=9,
                    end_lineno=11,
                    end_col_offset=51),
                  [
                    Raise(
                      Call(
                        Name(
                          'ValueError',
                          Load(),
                          lineno=12,
                          col_offset=14,
                          end_lineno=12,
                          end_col_offset=24),
                        [
                          Constant(
                            'digits input must only contain digits',
                            lineno=12,
                            col_offset=25,
                            end_lineno=12,
                            end_col_offset=64)],
                        [],
                        lineno=12,
                        col_offset=14,
                        end_lineno=12,
                        end_col_offset=65),
                      lineno=12,
                      col_offset=8,
                      end_lineno=12,
                      end_col_offset=65)],
                  [],
                  lineno=11,
                  col_offset=4,
                  end_lineno=12,
                  end_col_offset=65)],
              lineno=9,
              col_offset=4,
              end_lineno=12,
              end_col_offset=65)],
          lineno=7,
          col_offset=4,
          end_lineno=12,
          end_col_offset=65),
        Assign(
          [
            Name(
              'placeholder_4',
              Store(),
              lineno=14,
              col_offset=4,
              end_lineno=14,
              end_col_offset=11)],
          ListComp(
            Call(
              Name(
                'int',
                Load(),
                lineno=14,
                col_offset=15,
                end_lineno=14,
                end_col_offset=18),
              [
                Name(
                  'placeholder_5',
                  Load(),
                  lineno=14,
                  col_offset=19,
                  end_lineno=14,
                  end_col_offset=24)],
              [],
              lineno=14,
              col_offset=15,
              end_lineno=14,
              end_col_offset=25),
            [
              comprehension(
                Name(
                  'placeholder_5',
                  Store(),
                  lineno=14,
                  col_offset=30,
                  end_lineno=14,
                  end_col_offset=35),
                Name(
                  'placeholder_1',
                  Load(),
                  lineno=14,
                  col_offset=39,
                  end_lineno=14,
                  end_col_offset=45),
                [],
                0)],
            lineno=14,
            col_offset=14,
            end_lineno=14,
            end_col_offset=46),
          lineno=14,
          col_offset=4,
          end_lineno=14,
          end_col_offset=46),
        Return(
          ListComp(
            Subscript(
              Name(
                'placeholder_4',
                Load(),
                lineno=16,
                col_offset=12,
                end_lineno=16,
                end_col_offset=19),
              Slice(
                Name(
                  'placeholder_6',
                  Load(),
                  lineno=16,
                  col_offset=20,
                  end_lineno=16,
                  end_col_offset=23),
                BinOp(
                  Name(
                    'placeholder_6',
                    Load(),
                    lineno=16,
                    col_offset=24,
                    end_lineno=16,
                    end_col_offset=27),
                  Add(),
                  Name(
                    'placeholder_2',
                    Load(),
                    lineno=16,
                    col_offset=30,
                    end_lineno=16,
                    end_col_offset=34),
                  lineno=16,
                  col_offset=24,
                  end_lineno=16,
                  end_col_offset=34),
                lineno=16,
                col_offset=20,
                end_lineno=16,
                end_col_offset=34),
              Load(),
              lineno=16,
              col_offset=12,
              end_lineno=16,
              end_col_offset=35),
            [
              comprehension(
                Name(
                  'placeholder_6',
                  Store(),
                  lineno=17,
                  col_offset=16,
                  end_lineno=17,
                  end_col_offset=19),
                Call(
                  Name(
                    'range',
                    Load(),
                    lineno=17,
                    col_offset=23,
                    end_lineno=17,
                    end_col_offset=28),
                  [
                    BinOp(
                      BinOp(
                        Call(
                          Name(
                            'len',
                            Load(),
                            lineno=17,
                            col_offset=29,
                            end_lineno=17,
                            end_col_offset=32),
                          [
                            Name(
                              'placeholder_4',
                              Load(),
                              lineno=17,
                              col_offset=33,
                              end_lineno=17,
                              end_col_offset=40)],
                          [],
                          lineno=17,
                          col_offset=29,
                          end_lineno=17,
                          end_col_offset=41),
                        Sub(),
                        Name(
                          'placeholder_2',
                          Load(),
                          lineno=17,
                          col_offset=44,
                          end_lineno=17,
                          end_col_offset=48),
                        lineno=17,
                        col_offset=29,
                        end_lineno=17,
                        end_col_offset=48),
                      Add(),
                      Constant(
                        1,
                        lineno=17,
                        col_offset=51,
                        end_lineno=17,
                        end_col_offset=52),
                      lineno=17,
                      col_offset=29,
                      end_lineno=17,
                      end_col_offset=52)],
                  [],
                  lineno=17,
                  col_offset=23,
                  end_lineno=17,
                  end_col_offset=53),
                [],
                0)],
            lineno=16,
            col_offset=11,
            end_lineno=17,
            end_col_offset=54),
          lineno=16,
          col_offset=4,
          end_lineno=17,
          end_col_offset=54)],
      [],
      lineno=5,
      col_offset=0,
      end_lineno=17,
      end_col_offset=54),
    FunctionDef(
      'placeholder_7',
      arguments(
        [],
        [
          arg(
            'placeholder_1',
            lineno=20,
            col_offset=20,
            end_lineno=20,
            end_col_offset=26),
          arg(
            'placeholder_2',
            lineno=20,
            col_offset=28,
            end_lineno=20,
            end_col_offset=32)],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      [
        If(
          Compare(
            Name(
              'placeholder_2',
              Load(),
              lineno=21,
              col_offset=7,
              end_lineno=21,
              end_col_offset=11),
            [
              Eq()],
            [
              Constant(
                0,
                lineno=21,
                col_offset=15,
                end_lineno=21,
                end_col_offset=16)],
            lineno=21,
            col_offset=7,
            end_lineno=21,
            end_col_offset=16),
          [
            Return(
              Constant(
                1,
                lineno=22,
                col_offset=15,
                end_lineno=22,
                end_col_offset=16),
              lineno=22,
              col_offset=8,
              end_lineno=22,
              end_col_offset=16)],
          [],
          lineno=21,
          col_offset=4,
          end_lineno=22,
          end_col_offset=16),
        Return(
          Call(
            Name(
              'max',
              Load(),
              lineno=23,
              col_offset=11,
              end_lineno=23,
              end_col_offset=14),
            [
              GeneratorExp(
                Call(
                  Name(
                    'reduce',
                    Load(),
                    lineno=23,
                    col_offset=15,
                    end_lineno=23,
                    end_col_offset=21),
                  [
                    Name(
                      'mul',
                      Load(),
                      lineno=23,
                      col_offset=22,
                      end_lineno=23,
                      end_col_offset=25),
                    Name(
                      'slice',
                      Load(),
                      lineno=23,
                      col_offset=27,
                      end_lineno=23,
                      end_col_offset=32)],
                  [],
                  lineno=23,
                  col_offset=15,
                  end_lineno=23,
                  end_col_offset=33),
                [
                  comprehension(
                    Name(
                      'slice',
                      Store(),
                      lineno=23,
                      col_offset=38,
                      end_lineno=23,
                      end_col_offset=43),
                    Call(
                      Name(
                        'placeholder_0',
                        Load(),
                        lineno=23,
                        col_offset=47,
                        end_lineno=23,
                        end_col_offset=53),
                      [
                        Name(
                          'placeholder_1',
                          Load(),
                          lineno=23,
                          col_offset=54,
                          end_lineno=23,
                          end_col_offset=60),
                        Name(
                          'placeholder_2',
                          Load(),
                          lineno=23,
                          col_offset=62,
                          end_lineno=23,
                          end_col_offset=66)],
                      [],
                      lineno=23,
                      col_offset=47,
                      end_lineno=23,
                      end_col_offset=67),
                    [],
                    0)],
                lineno=23,
                col_offset=14,
                end_lineno=23,
                end_col_offset=68)],
            [],
            lineno=23,
            col_offset=11,
            end_lineno=23,
            end_col_offset=68),
          lineno=23,
          col_offset=4,
          end_lineno=23,
          end_col_offset=68)],
      [],
      lineno=20,
      col_offset=0,
      end_lineno=23,
      end_col_offset=68)],
  [])

# BEGIN NORMALIZED CODE AFTER
from functools import reduce
from operator import mul


def placeholder_0(placeholder_1, placeholder_2):
    if not placeholder_2 <= len(placeholder_1):
        raise ValueError("span must be smaller than string length")
    elif not 0 < placeholder_2:
        raise ValueError("span must not be negative")
    elif not all((placeholder_3.isdigit() for placeholder_3 in placeholder_1)):
        raise ValueError("digits input must only contain digits")
    placeholder_4 = [int(placeholder_5) for placeholder_5 in placeholder_1]
    return [
        placeholder_4[placeholder_6 : placeholder_6 + placeholder_2]
        for placeholder_6 in range(len(placeholder_4) - placeholder_2 + 1)
    ]


def placeholder_7(placeholder_1, placeholder_2):
    if placeholder_2 == 0:
        return 1
    return max(
        (reduce(mul, slice) for slice in placeholder_0(placeholder_1, placeholder_2))
    )
