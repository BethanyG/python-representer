## BEGIN NORMALIZED CODE ##
from string import ascii_lowercase


def placeholder_0(placeholder_1):
    return all(
        (placeholder_2 in placeholder_1.lower() for placeholder_2 in ascii_lowercase)
    )

## END NORMALIZED CODE ##

## BEGIN TREE BEFORE ##
Module(
  [
    ImportFrom(
      'string',
      [
        alias(
          'ascii_lowercase',
          lineno=1,
          col_offset=19,
          end_lineno=1,
          end_col_offset=34)],
      0,
      lineno=1,
      col_offset=0,
      end_lineno=1,
      end_col_offset=34),
    FunctionDef(
      'is_pangram',
      arguments(
        [],
        [
          arg(
            'sentence',
            lineno=4,
            col_offset=15,
            end_lineno=4,
            end_col_offset=23)],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      [
        Return(
          Call(
            Name(
              'all',
              Load(),
              lineno=5,
              col_offset=11,
              end_lineno=5,
              end_col_offset=14),
            [
              GeneratorExp(
                Compare(
                  Name(
                    'char',
                    Load(),
                    lineno=5,
                    col_offset=15,
                    end_lineno=5,
                    end_col_offset=19),
                  [
                    In()],
                  [
                    Call(
                      Attribute(
                        Name(
                          'sentence',
                          Load(),
                          lineno=5,
                          col_offset=23,
                          end_lineno=5,
                          end_col_offset=31),
                        'lower',
                        Load(),
                        lineno=5,
                        col_offset=23,
                        end_lineno=5,
                        end_col_offset=37),
                      [],
                      [],
                      lineno=5,
                      col_offset=23,
                      end_lineno=5,
                      end_col_offset=39)],
                  lineno=5,
                  col_offset=15,
                  end_lineno=5,
                  end_col_offset=39),
                [
                  comprehension(
                    Name(
                      'char',
                      Store(),
                      lineno=5,
                      col_offset=44,
                      end_lineno=5,
                      end_col_offset=48),
                    Name(
                      'ascii_lowercase',
                      Load(),
                      lineno=5,
                      col_offset=52,
                      end_lineno=5,
                      end_col_offset=67),
                    [],
                    0)],
                lineno=5,
                col_offset=14,
                end_lineno=5,
                end_col_offset=68)],
            [],
            lineno=5,
            col_offset=11,
            end_lineno=5,
            end_col_offset=68),
          lineno=5,
          col_offset=4,
          end_lineno=5,
          end_col_offset=68)],
      [],
      lineno=4,
      col_offset=0,
      end_lineno=5,
      end_col_offset=68)],
  [])
## END TREE BEFORE ##

## BEGIN NORMALIZED TREE ##
Module(
  [
    ImportFrom(
      'string',
      [
        alias(
          'ascii_lowercase',
          lineno=1,
          col_offset=19,
          end_lineno=1,
          end_col_offset=34)],
      0,
      lineno=1,
      col_offset=0,
      end_lineno=1,
      end_col_offset=34),
    FunctionDef(
      'placeholder_0',
      arguments(
        [],
        [
          arg(
            'placeholder_1',
            lineno=4,
            col_offset=15,
            end_lineno=4,
            end_col_offset=23)],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      [
        Return(
          Call(
            Name(
              'all',
              Load(),
              lineno=5,
              col_offset=11,
              end_lineno=5,
              end_col_offset=14),
            [
              GeneratorExp(
                Compare(
                  Name(
                    'placeholder_2',
                    Load(),
                    lineno=5,
                    col_offset=15,
                    end_lineno=5,
                    end_col_offset=19),
                  [
                    In()],
                  [
                    Call(
                      Attribute(
                        Name(
                          'placeholder_1',
                          Load(),
                          lineno=5,
                          col_offset=23,
                          end_lineno=5,
                          end_col_offset=31),
                        'lower',
                        Load(),
                        lineno=5,
                        col_offset=23,
                        end_lineno=5,
                        end_col_offset=37),
                      [],
                      [],
                      lineno=5,
                      col_offset=23,
                      end_lineno=5,
                      end_col_offset=39)],
                  lineno=5,
                  col_offset=15,
                  end_lineno=5,
                  end_col_offset=39),
                [
                  comprehension(
                    Name(
                      'placeholder_2',
                      Store(),
                      lineno=5,
                      col_offset=44,
                      end_lineno=5,
                      end_col_offset=48),
                    Name(
                      'ascii_lowercase',
                      Load(),
                      lineno=5,
                      col_offset=52,
                      end_lineno=5,
                      end_col_offset=67),
                    [],
                    0)],
                lineno=5,
                col_offset=14,
                end_lineno=5,
                end_col_offset=68)],
            [],
            lineno=5,
            col_offset=11,
            end_lineno=5,
            end_col_offset=68),
          lineno=5,
          col_offset=4,
          end_lineno=5,
          end_col_offset=68)],
      [],
      lineno=4,
      col_offset=0,
      end_lineno=5,
      end_col_offset=68)],
  [])
## END NORMALIZED TREE ##