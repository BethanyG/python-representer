# BEGIN TREE BEFORE
Module(
  [
    Import(
      [
        alias(
          're',
          lineno=1,
          col_offset=7,
          end_lineno=1,
          end_col_offset=9)],
      lineno=1,
      col_offset=0,
      end_lineno=1,
      end_col_offset=9),
    Assign(
      [
        Name(
          're_cons',
          Store(),
          lineno=4,
          col_offset=0,
          end_lineno=4,
          end_col_offset=7)],
      Call(
        Attribute(
          Name(
            're',
            Load(),
            lineno=4,
            col_offset=10,
            end_lineno=4,
            end_col_offset=12),
          'compile',
          Load(),
          lineno=4,
          col_offset=10,
          end_lineno=4,
          end_col_offset=20),
        [
          Constant(
            '^([^aeiou]?qu|[^aeiouy]+|y(?=[aeiou]))([a-z]*)',
            lineno=4,
            col_offset=21,
            end_lineno=4,
            end_col_offset=69)],
        [],
        lineno=4,
        col_offset=10,
        end_lineno=4,
        end_col_offset=70),
      lineno=4,
      col_offset=0,
      end_lineno=4,
      end_col_offset=70),
    Assign(
      [
        Name(
          're_vowel',
          Store(),
          lineno=5,
          col_offset=0,
          end_lineno=5,
          end_col_offset=8)],
      Call(
        Attribute(
          Name(
            're',
            Load(),
            lineno=5,
            col_offset=11,
            end_lineno=5,
            end_col_offset=13),
          'compile',
          Load(),
          lineno=5,
          col_offset=11,
          end_lineno=5,
          end_col_offset=21),
        [
          Constant(
            '^([aeiou]|y[^aeiou]|xr)[a-z]*',
            lineno=5,
            col_offset=22,
            end_lineno=5,
            end_col_offset=53)],
        [],
        lineno=5,
        col_offset=11,
        end_lineno=5,
        end_col_offset=54),
      lineno=5,
      col_offset=0,
      end_lineno=5,
      end_col_offset=54),
    FunctionDef(
      'split_initial_consonant_sound',
      arguments(
        [],
        [
          arg(
            'word',
            lineno=8,
            col_offset=34,
            end_lineno=8,
            end_col_offset=38)],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      [
        Return(
          Call(
            Attribute(
              Call(
                Attribute(
                  Name(
                    're_cons',
                    Load(),
                    lineno=9,
                    col_offset=11,
                    end_lineno=9,
                    end_col_offset=18),
                  'match',
                  Load(),
                  lineno=9,
                  col_offset=11,
                  end_lineno=9,
                  end_col_offset=24),
                [
                  Name(
                    'word',
                    Load(),
                    lineno=9,
                    col_offset=25,
                    end_lineno=9,
                    end_col_offset=29)],
                [],
                lineno=9,
                col_offset=11,
                end_lineno=9,
                end_col_offset=30),
              'groups',
              Load(),
              lineno=9,
              col_offset=11,
              end_lineno=9,
              end_col_offset=37),
            [],
            [],
            lineno=9,
            col_offset=11,
            end_lineno=9,
            end_col_offset=39),
          lineno=9,
          col_offset=4,
          end_lineno=9,
          end_col_offset=39)],
      [],
      lineno=8,
      col_offset=0,
      end_lineno=9,
      end_col_offset=39),
    FunctionDef(
      'starts_with_vowel_sound',
      arguments(
        [],
        [
          arg(
            'word',
            lineno=12,
            col_offset=28,
            end_lineno=12,
            end_col_offset=32)],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      [
        Return(
          Compare(
            Call(
              Attribute(
                Name(
                  're_vowel',
                  Load(),
                  lineno=13,
                  col_offset=11,
                  end_lineno=13,
                  end_col_offset=19),
                'match',
                Load(),
                lineno=13,
                col_offset=11,
                end_lineno=13,
                end_col_offset=25),
              [
                Name(
                  'word',
                  Load(),
                  lineno=13,
                  col_offset=26,
                  end_lineno=13,
                  end_col_offset=30)],
              [],
              lineno=13,
              col_offset=11,
              end_lineno=13,
              end_col_offset=31),
            [
              IsNot()],
            [
              Constant(
                None,
                lineno=13,
                col_offset=39,
                end_lineno=13,
                end_col_offset=43)],
            lineno=13,
            col_offset=11,
            end_lineno=13,
            end_col_offset=43),
          lineno=13,
          col_offset=4,
          end_lineno=13,
          end_col_offset=43)],
      [],
      lineno=12,
      col_offset=0,
      end_lineno=13,
      end_col_offset=43),
    FunctionDef(
      'translate',
      arguments(
        [],
        [
          arg(
            'text',
            lineno=16,
            col_offset=14,
            end_lineno=16,
            end_col_offset=18)],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      [
        Assign(
          [
            Name(
              'words',
              Store(),
              lineno=17,
              col_offset=4,
              end_lineno=17,
              end_col_offset=9)],
          List(
            [],
            Load(),
            lineno=17,
            col_offset=12,
            end_lineno=17,
            end_col_offset=14),
          lineno=17,
          col_offset=4,
          end_lineno=17,
          end_col_offset=14),
        For(
          Name(
            'word',
            Store(),
            lineno=18,
            col_offset=8,
            end_lineno=18,
            end_col_offset=12),
          Call(
            Attribute(
              Name(
                'text',
                Load(),
                lineno=18,
                col_offset=16,
                end_lineno=18,
                end_col_offset=20),
              'split',
              Load(),
              lineno=18,
              col_offset=16,
              end_lineno=18,
              end_col_offset=26),
            [],
            [],
            lineno=18,
            col_offset=16,
            end_lineno=18,
            end_col_offset=28),
          [
            If(
              Call(
                Name(
                  'starts_with_vowel_sound',
                  Load(),
                  lineno=19,
                  col_offset=11,
                  end_lineno=19,
                  end_col_offset=34),
                [
                  Name(
                    'word',
                    Load(),
                    lineno=19,
                    col_offset=35,
                    end_lineno=19,
                    end_col_offset=39)],
                [],
                lineno=19,
                col_offset=11,
                end_lineno=19,
                end_col_offset=40),
              [
                Expr(
                  Call(
                    Attribute(
                      Name(
                        'words',
                        Load(),
                        lineno=20,
                        col_offset=12,
                        end_lineno=20,
                        end_col_offset=17),
                      'append',
                      Load(),
                      lineno=20,
                      col_offset=12,
                      end_lineno=20,
                      end_col_offset=24),
                    [
                      BinOp(
                        Name(
                          'word',
                          Load(),
                          lineno=20,
                          col_offset=25,
                          end_lineno=20,
                          end_col_offset=29),
                        Add(),
                        Constant(
                          'ay',
                          lineno=20,
                          col_offset=32,
                          end_lineno=20,
                          end_col_offset=36),
                        lineno=20,
                        col_offset=25,
                        end_lineno=20,
                        end_col_offset=36)],
                    [],
                    lineno=20,
                    col_offset=12,
                    end_lineno=20,
                    end_col_offset=37),
                  lineno=20,
                  col_offset=12,
                  end_lineno=20,
                  end_col_offset=37)],
              [
                Assign(
                  [
                    Tuple(
                      [
                        Name(
                          'head',
                          Store(),
                          lineno=22,
                          col_offset=12,
                          end_lineno=22,
                          end_col_offset=16),
                        Name(
                          'tail',
                          Store(),
                          lineno=22,
                          col_offset=18,
                          end_lineno=22,
                          end_col_offset=22)],
                      Store(),
                      lineno=22,
                      col_offset=12,
                      end_lineno=22,
                      end_col_offset=22)],
                  Call(
                    Name(
                      'split_initial_consonant_sound',
                      Load(),
                      lineno=22,
                      col_offset=25,
                      end_lineno=22,
                      end_col_offset=54),
                    [
                      Name(
                        'word',
                        Load(),
                        lineno=22,
                        col_offset=55,
                        end_lineno=22,
                        end_col_offset=59)],
                    [],
                    lineno=22,
                    col_offset=25,
                    end_lineno=22,
                    end_col_offset=60),
                  lineno=22,
                  col_offset=12,
                  end_lineno=22,
                  end_col_offset=60),
                Expr(
                  Call(
                    Attribute(
                      Name(
                        'words',
                        Load(),
                        lineno=23,
                        col_offset=12,
                        end_lineno=23,
                        end_col_offset=17),
                      'append',
                      Load(),
                      lineno=23,
                      col_offset=12,
                      end_lineno=23,
                      end_col_offset=24),
                    [
                      BinOp(
                        BinOp(
                          Name(
                            'tail',
                            Load(),
                            lineno=23,
                            col_offset=25,
                            end_lineno=23,
                            end_col_offset=29),
                          Add(),
                          Name(
                            'head',
                            Load(),
                            lineno=23,
                            col_offset=32,
                            end_lineno=23,
                            end_col_offset=36),
                          lineno=23,
                          col_offset=25,
                          end_lineno=23,
                          end_col_offset=36),
                        Add(),
                        Constant(
                          'ay',
                          lineno=23,
                          col_offset=39,
                          end_lineno=23,
                          end_col_offset=43),
                        lineno=23,
                        col_offset=25,
                        end_lineno=23,
                        end_col_offset=43)],
                    [],
                    lineno=23,
                    col_offset=12,
                    end_lineno=23,
                    end_col_offset=44),
                  lineno=23,
                  col_offset=12,
                  end_lineno=23,
                  end_col_offset=44)],
              lineno=19,
              col_offset=8,
              end_lineno=23,
              end_col_offset=44)],
          [],
          lineno=18,
          col_offset=4,
          end_lineno=23,
          end_col_offset=44),
        Return(
          Call(
            Attribute(
              Constant(
                ' ',
                lineno=24,
                col_offset=11,
                end_lineno=24,
                end_col_offset=14),
              'join',
              Load(),
              lineno=24,
              col_offset=11,
              end_lineno=24,
              end_col_offset=19),
            [
              Name(
                'words',
                Load(),
                lineno=24,
                col_offset=20,
                end_lineno=24,
                end_col_offset=25)],
            [],
            lineno=24,
            col_offset=11,
            end_lineno=24,
            end_col_offset=26),
          lineno=24,
          col_offset=4,
          end_lineno=24,
          end_col_offset=26)],
      [],
      lineno=16,
      col_offset=0,
      end_lineno=24,
      end_col_offset=26)],
  [])

# BEGIN TREE AFTER
Module(
  [
    Import(
      [
        alias(
          're',
          lineno=1,
          col_offset=7,
          end_lineno=1,
          end_col_offset=9)],
      lineno=1,
      col_offset=0,
      end_lineno=1,
      end_col_offset=9),
    Assign(
      [
        Name(
          'placeholder_0',
          Store(),
          lineno=4,
          col_offset=0,
          end_lineno=4,
          end_col_offset=7)],
      Call(
        Attribute(
          Name(
            're',
            Load(),
            lineno=4,
            col_offset=10,
            end_lineno=4,
            end_col_offset=12),
          'compile',
          Load(),
          lineno=4,
          col_offset=10,
          end_lineno=4,
          end_col_offset=20),
        [
          Constant(
            '^([^aeiou]?qu|[^aeiouy]+|y(?=[aeiou]))([a-z]*)',
            lineno=4,
            col_offset=21,
            end_lineno=4,
            end_col_offset=69)],
        [],
        lineno=4,
        col_offset=10,
        end_lineno=4,
        end_col_offset=70),
      lineno=4,
      col_offset=0,
      end_lineno=4,
      end_col_offset=70),
    Assign(
      [
        Name(
          'placeholder_1',
          Store(),
          lineno=5,
          col_offset=0,
          end_lineno=5,
          end_col_offset=8)],
      Call(
        Attribute(
          Name(
            're',
            Load(),
            lineno=5,
            col_offset=11,
            end_lineno=5,
            end_col_offset=13),
          'compile',
          Load(),
          lineno=5,
          col_offset=11,
          end_lineno=5,
          end_col_offset=21),
        [
          Constant(
            '^([aeiou]|y[^aeiou]|xr)[a-z]*',
            lineno=5,
            col_offset=22,
            end_lineno=5,
            end_col_offset=53)],
        [],
        lineno=5,
        col_offset=11,
        end_lineno=5,
        end_col_offset=54),
      lineno=5,
      col_offset=0,
      end_lineno=5,
      end_col_offset=54),
    FunctionDef(
      'placeholder_2',
      arguments(
        [],
        [
          arg(
            'placeholder_3',
            lineno=8,
            col_offset=34,
            end_lineno=8,
            end_col_offset=38)],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      [
        Return(
          Call(
            Attribute(
              Call(
                Attribute(
                  Name(
                    'placeholder_0',
                    Load(),
                    lineno=9,
                    col_offset=11,
                    end_lineno=9,
                    end_col_offset=18),
                  'match',
                  Load(),
                  lineno=9,
                  col_offset=11,
                  end_lineno=9,
                  end_col_offset=24),
                [
                  Name(
                    'placeholder_3',
                    Load(),
                    lineno=9,
                    col_offset=25,
                    end_lineno=9,
                    end_col_offset=29)],
                [],
                lineno=9,
                col_offset=11,
                end_lineno=9,
                end_col_offset=30),
              'groups',
              Load(),
              lineno=9,
              col_offset=11,
              end_lineno=9,
              end_col_offset=37),
            [],
            [],
            lineno=9,
            col_offset=11,
            end_lineno=9,
            end_col_offset=39),
          lineno=9,
          col_offset=4,
          end_lineno=9,
          end_col_offset=39)],
      [],
      lineno=8,
      col_offset=0,
      end_lineno=9,
      end_col_offset=39),
    FunctionDef(
      'placeholder_4',
      arguments(
        [],
        [
          arg(
            'placeholder_3',
            lineno=12,
            col_offset=28,
            end_lineno=12,
            end_col_offset=32)],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      [
        Return(
          Compare(
            Call(
              Attribute(
                Name(
                  'placeholder_1',
                  Load(),
                  lineno=13,
                  col_offset=11,
                  end_lineno=13,
                  end_col_offset=19),
                'match',
                Load(),
                lineno=13,
                col_offset=11,
                end_lineno=13,
                end_col_offset=25),
              [
                Name(
                  'placeholder_3',
                  Load(),
                  lineno=13,
                  col_offset=26,
                  end_lineno=13,
                  end_col_offset=30)],
              [],
              lineno=13,
              col_offset=11,
              end_lineno=13,
              end_col_offset=31),
            [
              IsNot()],
            [
              Constant(
                None,
                lineno=13,
                col_offset=39,
                end_lineno=13,
                end_col_offset=43)],
            lineno=13,
            col_offset=11,
            end_lineno=13,
            end_col_offset=43),
          lineno=13,
          col_offset=4,
          end_lineno=13,
          end_col_offset=43)],
      [],
      lineno=12,
      col_offset=0,
      end_lineno=13,
      end_col_offset=43),
    FunctionDef(
      'placeholder_5',
      arguments(
        [],
        [
          arg(
            'placeholder_6',
            lineno=16,
            col_offset=14,
            end_lineno=16,
            end_col_offset=18)],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      [
        Assign(
          [
            Name(
              'placeholder_7',
              Store(),
              lineno=17,
              col_offset=4,
              end_lineno=17,
              end_col_offset=9)],
          List(
            [],
            Load(),
            lineno=17,
            col_offset=12,
            end_lineno=17,
            end_col_offset=14),
          lineno=17,
          col_offset=4,
          end_lineno=17,
          end_col_offset=14),
        For(
          Name(
            'placeholder_3',
            Store(),
            lineno=18,
            col_offset=8,
            end_lineno=18,
            end_col_offset=12),
          Call(
            Attribute(
              Name(
                'placeholder_6',
                Load(),
                lineno=18,
                col_offset=16,
                end_lineno=18,
                end_col_offset=20),
              'split',
              Load(),
              lineno=18,
              col_offset=16,
              end_lineno=18,
              end_col_offset=26),
            [],
            [],
            lineno=18,
            col_offset=16,
            end_lineno=18,
            end_col_offset=28),
          [
            If(
              Call(
                Name(
                  'placeholder_4',
                  Load(),
                  lineno=19,
                  col_offset=11,
                  end_lineno=19,
                  end_col_offset=34),
                [
                  Name(
                    'placeholder_3',
                    Load(),
                    lineno=19,
                    col_offset=35,
                    end_lineno=19,
                    end_col_offset=39)],
                [],
                lineno=19,
                col_offset=11,
                end_lineno=19,
                end_col_offset=40),
              [
                Expr(
                  Call(
                    Attribute(
                      Name(
                        'placeholder_7',
                        Load(),
                        lineno=20,
                        col_offset=12,
                        end_lineno=20,
                        end_col_offset=17),
                      'append',
                      Load(),
                      lineno=20,
                      col_offset=12,
                      end_lineno=20,
                      end_col_offset=24),
                    [
                      BinOp(
                        Name(
                          'placeholder_3',
                          Load(),
                          lineno=20,
                          col_offset=25,
                          end_lineno=20,
                          end_col_offset=29),
                        Add(),
                        Constant(
                          'ay',
                          lineno=20,
                          col_offset=32,
                          end_lineno=20,
                          end_col_offset=36),
                        lineno=20,
                        col_offset=25,
                        end_lineno=20,
                        end_col_offset=36)],
                    [],
                    lineno=20,
                    col_offset=12,
                    end_lineno=20,
                    end_col_offset=37),
                  lineno=20,
                  col_offset=12,
                  end_lineno=20,
                  end_col_offset=37)],
              [
                Assign(
                  [
                    Tuple(
                      [
                        Name(
                          'placeholder_8',
                          Store(),
                          lineno=22,
                          col_offset=12,
                          end_lineno=22,
                          end_col_offset=16),
                        Name(
                          'placeholder_9',
                          Store(),
                          lineno=22,
                          col_offset=18,
                          end_lineno=22,
                          end_col_offset=22)],
                      Store(),
                      lineno=22,
                      col_offset=12,
                      end_lineno=22,
                      end_col_offset=22)],
                  Call(
                    Name(
                      'placeholder_2',
                      Load(),
                      lineno=22,
                      col_offset=25,
                      end_lineno=22,
                      end_col_offset=54),
                    [
                      Name(
                        'placeholder_3',
                        Load(),
                        lineno=22,
                        col_offset=55,
                        end_lineno=22,
                        end_col_offset=59)],
                    [],
                    lineno=22,
                    col_offset=25,
                    end_lineno=22,
                    end_col_offset=60),
                  lineno=22,
                  col_offset=12,
                  end_lineno=22,
                  end_col_offset=60),
                Expr(
                  Call(
                    Attribute(
                      Name(
                        'placeholder_7',
                        Load(),
                        lineno=23,
                        col_offset=12,
                        end_lineno=23,
                        end_col_offset=17),
                      'append',
                      Load(),
                      lineno=23,
                      col_offset=12,
                      end_lineno=23,
                      end_col_offset=24),
                    [
                      BinOp(
                        BinOp(
                          Name(
                            'placeholder_9',
                            Load(),
                            lineno=23,
                            col_offset=25,
                            end_lineno=23,
                            end_col_offset=29),
                          Add(),
                          Name(
                            'placeholder_8',
                            Load(),
                            lineno=23,
                            col_offset=32,
                            end_lineno=23,
                            end_col_offset=36),
                          lineno=23,
                          col_offset=25,
                          end_lineno=23,
                          end_col_offset=36),
                        Add(),
                        Constant(
                          'ay',
                          lineno=23,
                          col_offset=39,
                          end_lineno=23,
                          end_col_offset=43),
                        lineno=23,
                        col_offset=25,
                        end_lineno=23,
                        end_col_offset=43)],
                    [],
                    lineno=23,
                    col_offset=12,
                    end_lineno=23,
                    end_col_offset=44),
                  lineno=23,
                  col_offset=12,
                  end_lineno=23,
                  end_col_offset=44)],
              lineno=19,
              col_offset=8,
              end_lineno=23,
              end_col_offset=44)],
          [],
          lineno=18,
          col_offset=4,
          end_lineno=23,
          end_col_offset=44),
        Return(
          Call(
            Attribute(
              Constant(
                ' ',
                lineno=24,
                col_offset=11,
                end_lineno=24,
                end_col_offset=14),
              'join',
              Load(),
              lineno=24,
              col_offset=11,
              end_lineno=24,
              end_col_offset=19),
            [
              Name(
                'placeholder_7',
                Load(),
                lineno=24,
                col_offset=20,
                end_lineno=24,
                end_col_offset=25)],
            [],
            lineno=24,
            col_offset=11,
            end_lineno=24,
            end_col_offset=26),
          lineno=24,
          col_offset=4,
          end_lineno=24,
          end_col_offset=26)],
      [],
      lineno=16,
      col_offset=0,
      end_lineno=24,
      end_col_offset=26)],
  [])

# BEGIN NORMALIZED CODE AFTER
import re

placeholder_0 = re.compile("^([^aeiou]?qu|[^aeiouy]+|y(?=[aeiou]))([a-z]*)")
placeholder_1 = re.compile("^([aeiou]|y[^aeiou]|xr)[a-z]*")


def placeholder_2(placeholder_3):
    return placeholder_0.match(placeholder_3).groups()


def placeholder_4(placeholder_3):
    return placeholder_1.match(placeholder_3) is not None


def placeholder_5(placeholder_6):
    placeholder_7 = []
    for placeholder_3 in placeholder_6.split():
        if placeholder_4(placeholder_3):
            placeholder_7.append(placeholder_3 + "ay")
        else:
            placeholder_8, placeholder_9 = placeholder_2(placeholder_3)
            placeholder_7.append(placeholder_9 + placeholder_8 + "ay")
    return " ".join(placeholder_7)
