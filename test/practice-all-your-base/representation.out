# BEGIN TREE BEFORE
Module(
  [
    FunctionDef(
      'from_digits',
      arguments(
        [],
        [
          arg(
            'digits',
            lineno=1,
            col_offset=16,
            end_lineno=1,
            end_col_offset=22),
          arg(
            'base',
            lineno=1,
            col_offset=24,
            end_lineno=1,
            end_col_offset=28)],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      [
        Return(
          Call(
            Name(
              'sum',
              Load(),
              lineno=2,
              col_offset=11,
              end_lineno=2,
              end_col_offset=14),
            [
              GeneratorExp(
                BinOp(
                  Name(
                    'number',
                    Load(),
                    lineno=2,
                    col_offset=15,
                    end_lineno=2,
                    end_col_offset=21),
                  Mult(),
                  BinOp(
                    Name(
                      'base',
                      Load(),
                      lineno=2,
                      col_offset=24,
                      end_lineno=2,
                      end_col_offset=28),
                    Pow(),
                    Name(
                      'idx',
                      Load(),
                      lineno=2,
                      col_offset=32,
                      end_lineno=2,
                      end_col_offset=35),
                    lineno=2,
                    col_offset=24,
                    end_lineno=2,
                    end_col_offset=35),
                  lineno=2,
                  col_offset=15,
                  end_lineno=2,
                  end_col_offset=35),
                [
                  comprehension(
                    Tuple(
                      [
                        Name(
                          'idx',
                          Store(),
                          lineno=2,
                          col_offset=40,
                          end_lineno=2,
                          end_col_offset=43),
                        Name(
                          'number',
                          Store(),
                          lineno=2,
                          col_offset=45,
                          end_lineno=2,
                          end_col_offset=51)],
                      Store(),
                      lineno=2,
                      col_offset=40,
                      end_lineno=2,
                      end_col_offset=51),
                    Call(
                      Name(
                        'enumerate',
                        Load(),
                        lineno=2,
                        col_offset=55,
                        end_lineno=2,
                        end_col_offset=64),
                      [
                        Call(
                          Name(
                            'reversed',
                            Load(),
                            lineno=2,
                            col_offset=65,
                            end_lineno=2,
                            end_col_offset=73),
                          [
                            Name(
                              'digits',
                              Load(),
                              lineno=2,
                              col_offset=74,
                              end_lineno=2,
                              end_col_offset=80)],
                          [],
                          lineno=2,
                          col_offset=65,
                          end_lineno=2,
                          end_col_offset=81)],
                      [],
                      lineno=2,
                      col_offset=55,
                      end_lineno=2,
                      end_col_offset=82),
                    [],
                    0)],
                lineno=2,
                col_offset=14,
                end_lineno=2,
                end_col_offset=83)],
            [],
            lineno=2,
            col_offset=11,
            end_lineno=2,
            end_col_offset=83),
          lineno=2,
          col_offset=4,
          end_lineno=2,
          end_col_offset=83)],
      [],
      lineno=1,
      col_offset=0,
      end_lineno=2,
      end_col_offset=83),
    FunctionDef(
      'to_digits',
      arguments(
        [],
        [
          arg(
            'number',
            lineno=5,
            col_offset=14,
            end_lineno=5,
            end_col_offset=20),
          arg(
            'base_to',
            lineno=5,
            col_offset=22,
            end_lineno=5,
            end_col_offset=29)],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      [
        Assign(
          [
            Name(
              'result',
              Store(),
              lineno=6,
              col_offset=4,
              end_lineno=6,
              end_col_offset=10)],
          List(
            [],
            Load(),
            lineno=6,
            col_offset=13,
            end_lineno=6,
            end_col_offset=15),
          lineno=6,
          col_offset=4,
          end_lineno=6,
          end_col_offset=15),
        While(
          Compare(
            Name(
              'number',
              Load(),
              lineno=7,
              col_offset=10,
              end_lineno=7,
              end_col_offset=16),
            [
              Gt()],
            [
              Constant(
                0,
                lineno=7,
                col_offset=19,
                end_lineno=7,
                end_col_offset=20)],
            lineno=7,
            col_offset=10,
            end_lineno=7,
            end_col_offset=20),
          [
            Expr(
              Call(
                Attribute(
                  Name(
                    'result',
                    Load(),
                    lineno=8,
                    col_offset=8,
                    end_lineno=8,
                    end_col_offset=14),
                  'append',
                  Load(),
                  lineno=8,
                  col_offset=8,
                  end_lineno=8,
                  end_col_offset=21),
                [
                  BinOp(
                    Name(
                      'number',
                      Load(),
                      lineno=8,
                      col_offset=22,
                      end_lineno=8,
                      end_col_offset=28),
                    Mod(),
                    Name(
                      'base_to',
                      Load(),
                      lineno=8,
                      col_offset=31,
                      end_lineno=8,
                      end_col_offset=38),
                    lineno=8,
                    col_offset=22,
                    end_lineno=8,
                    end_col_offset=38)],
                [],
                lineno=8,
                col_offset=8,
                end_lineno=8,
                end_col_offset=39),
              lineno=8,
              col_offset=8,
              end_lineno=8,
              end_col_offset=39),
            AugAssign(
              Name(
                'number',
                Store(),
                lineno=9,
                col_offset=8,
                end_lineno=9,
                end_col_offset=14),
              FloorDiv(),
              Name(
                'base_to',
                Load(),
                lineno=9,
                col_offset=19,
                end_lineno=9,
                end_col_offset=26),
              lineno=9,
              col_offset=8,
              end_lineno=9,
              end_col_offset=26)],
          [],
          lineno=7,
          col_offset=4,
          end_lineno=9,
          end_col_offset=26),
        If(
          Name(
            'result',
            Load(),
            lineno=10,
            col_offset=7,
            end_lineno=10,
            end_col_offset=13),
          [
            Return(
              Subscript(
                Name(
                  'result',
                  Load(),
                  lineno=11,
                  col_offset=15,
                  end_lineno=11,
                  end_col_offset=21),
                Slice(
                  step=UnaryOp(
                    USub(),
                    Constant(
                      1,
                      lineno=11,
                      col_offset=25,
                      end_lineno=11,
                      end_col_offset=26),
                    lineno=11,
                    col_offset=24,
                    end_lineno=11,
                    end_col_offset=26),
                  lineno=11,
                  col_offset=22,
                  end_lineno=11,
                  end_col_offset=26),
                Load(),
                lineno=11,
                col_offset=15,
                end_lineno=11,
                end_col_offset=27),
              lineno=11,
              col_offset=8,
              end_lineno=11,
              end_col_offset=27)],
          [],
          lineno=10,
          col_offset=4,
          end_lineno=11,
          end_col_offset=27),
        Return(
          List(
            [
              Constant(
                0,
                lineno=12,
                col_offset=12,
                end_lineno=12,
                end_col_offset=13)],
            Load(),
            lineno=12,
            col_offset=11,
            end_lineno=12,
            end_col_offset=14),
          lineno=12,
          col_offset=4,
          end_lineno=12,
          end_col_offset=14)],
      [],
      lineno=5,
      col_offset=0,
      end_lineno=12,
      end_col_offset=14),
    FunctionDef(
      'rebase',
      arguments(
        [],
        [
          arg(
            'from_base',
            lineno=15,
            col_offset=11,
            end_lineno=15,
            end_col_offset=20),
          arg(
            'digits',
            lineno=15,
            col_offset=22,
            end_lineno=15,
            end_col_offset=28),
          arg(
            'to_base',
            lineno=15,
            col_offset=30,
            end_lineno=15,
            end_col_offset=37)],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      [
        If(
          Compare(
            Name(
              'from_base',
              Load(),
              lineno=16,
              col_offset=7,
              end_lineno=16,
              end_col_offset=16),
            [
              Lt()],
            [
              Constant(
                2,
                lineno=16,
                col_offset=19,
                end_lineno=16,
                end_col_offset=20)],
            lineno=16,
            col_offset=7,
            end_lineno=16,
            end_col_offset=20),
          [
            Raise(
              Call(
                Name(
                  'ValueError',
                  Load(),
                  lineno=17,
                  col_offset=14,
                  end_lineno=17,
                  end_col_offset=24),
                [
                  Constant(
                    'input base must be >= 2',
                    lineno=17,
                    col_offset=25,
                    end_lineno=17,
                    end_col_offset=50)],
                [],
                lineno=17,
                col_offset=14,
                end_lineno=17,
                end_col_offset=51),
              lineno=17,
              col_offset=8,
              end_lineno=17,
              end_col_offset=51)],
          [],
          lineno=16,
          col_offset=4,
          end_lineno=17,
          end_col_offset=51),
        If(
          Compare(
            Name(
              'to_base',
              Load(),
              lineno=19,
              col_offset=7,
              end_lineno=19,
              end_col_offset=14),
            [
              Lt()],
            [
              Constant(
                2,
                lineno=19,
                col_offset=17,
                end_lineno=19,
                end_col_offset=18)],
            lineno=19,
            col_offset=7,
            end_lineno=19,
            end_col_offset=18),
          [
            Raise(
              Call(
                Name(
                  'ValueError',
                  Load(),
                  lineno=20,
                  col_offset=14,
                  end_lineno=20,
                  end_col_offset=24),
                [
                  Constant(
                    'output base must be >= 2',
                    lineno=20,
                    col_offset=25,
                    end_lineno=20,
                    end_col_offset=51)],
                [],
                lineno=20,
                col_offset=14,
                end_lineno=20,
                end_col_offset=52),
              lineno=20,
              col_offset=8,
              end_lineno=20,
              end_col_offset=52)],
          [],
          lineno=19,
          col_offset=4,
          end_lineno=20,
          end_col_offset=52),
        If(
          Call(
            Name(
              'any',
              Load(),
              lineno=22,
              col_offset=7,
              end_lineno=22,
              end_col_offset=10),
            [
              GeneratorExp(
                Constant(
                  True,
                  lineno=22,
                  col_offset=11,
                  end_lineno=22,
                  end_col_offset=15),
                [
                  comprehension(
                    Name(
                      'idx',
                      Store(),
                      lineno=22,
                      col_offset=20,
                      end_lineno=22,
                      end_col_offset=23),
                    Name(
                      'digits',
                      Load(),
                      lineno=22,
                      col_offset=27,
                      end_lineno=22,
                      end_col_offset=33),
                    [
                      BoolOp(
                        Or(),
                        [
                          Compare(
                            Name(
                              'idx',
                              Load(),
                              lineno=22,
                              col_offset=37,
                              end_lineno=22,
                              end_col_offset=40),
                            [
                              Lt()],
                            [
                              Constant(
                                0,
                                lineno=22,
                                col_offset=43,
                                end_lineno=22,
                                end_col_offset=44)],
                            lineno=22,
                            col_offset=37,
                            end_lineno=22,
                            end_col_offset=44),
                          Compare(
                            Name(
                              'idx',
                              Load(),
                              lineno=22,
                              col_offset=48,
                              end_lineno=22,
                              end_col_offset=51),
                            [
                              GtE()],
                            [
                              Name(
                                'from_base',
                                Load(),
                                lineno=22,
                                col_offset=55,
                                end_lineno=22,
                                end_col_offset=64)],
                            lineno=22,
                            col_offset=48,
                            end_lineno=22,
                            end_col_offset=64)],
                        lineno=22,
                        col_offset=37,
                        end_lineno=22,
                        end_col_offset=64)],
                    0)],
                lineno=22,
                col_offset=10,
                end_lineno=22,
                end_col_offset=65)],
            [],
            lineno=22,
            col_offset=7,
            end_lineno=22,
            end_col_offset=65),
          [
            Raise(
              Call(
                Name(
                  'ValueError',
                  Load(),
                  lineno=23,
                  col_offset=14,
                  end_lineno=23,
                  end_col_offset=24),
                [
                  Constant(
                    'all digits must satisfy 0 <= d < input base',
                    lineno=23,
                    col_offset=25,
                    end_lineno=23,
                    end_col_offset=70)],
                [],
                lineno=23,
                col_offset=14,
                end_lineno=23,
                end_col_offset=71),
              lineno=23,
              col_offset=8,
              end_lineno=23,
              end_col_offset=71)],
          [],
          lineno=22,
          col_offset=4,
          end_lineno=23,
          end_col_offset=71),
        Return(
          Call(
            Name(
              'to_digits',
              Load(),
              lineno=25,
              col_offset=11,
              end_lineno=25,
              end_col_offset=20),
            [
              Call(
                Name(
                  'from_digits',
                  Load(),
                  lineno=25,
                  col_offset=21,
                  end_lineno=25,
                  end_col_offset=32),
                [
                  Name(
                    'digits',
                    Load(),
                    lineno=25,
                    col_offset=33,
                    end_lineno=25,
                    end_col_offset=39),
                  Name(
                    'from_base',
                    Load(),
                    lineno=25,
                    col_offset=41,
                    end_lineno=25,
                    end_col_offset=50)],
                [],
                lineno=25,
                col_offset=21,
                end_lineno=25,
                end_col_offset=51),
              Name(
                'to_base',
                Load(),
                lineno=25,
                col_offset=53,
                end_lineno=25,
                end_col_offset=60)],
            [],
            lineno=25,
            col_offset=11,
            end_lineno=25,
            end_col_offset=61),
          lineno=25,
          col_offset=4,
          end_lineno=25,
          end_col_offset=61)],
      [],
      lineno=15,
      col_offset=0,
      end_lineno=25,
      end_col_offset=61)],
  [])

# BEGIN TREE AFTER
Module(
  [
    FunctionDef(
      'placeholder_0',
      arguments(
        [],
        [
          arg(
            'placeholder_1',
            lineno=1,
            col_offset=16,
            end_lineno=1,
            end_col_offset=22),
          arg(
            'placeholder_2',
            lineno=1,
            col_offset=24,
            end_lineno=1,
            end_col_offset=28)],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      [
        Return(
          Call(
            Name(
              'sum',
              Load(),
              lineno=2,
              col_offset=11,
              end_lineno=2,
              end_col_offset=14),
            [
              GeneratorExp(
                BinOp(
                  Name(
                    'placeholder_4',
                    Load(),
                    lineno=2,
                    col_offset=15,
                    end_lineno=2,
                    end_col_offset=21),
                  Mult(),
                  BinOp(
                    Name(
                      'placeholder_2',
                      Load(),
                      lineno=2,
                      col_offset=24,
                      end_lineno=2,
                      end_col_offset=28),
                    Pow(),
                    Name(
                      'placeholder_3',
                      Load(),
                      lineno=2,
                      col_offset=32,
                      end_lineno=2,
                      end_col_offset=35),
                    lineno=2,
                    col_offset=24,
                    end_lineno=2,
                    end_col_offset=35),
                  lineno=2,
                  col_offset=15,
                  end_lineno=2,
                  end_col_offset=35),
                [
                  comprehension(
                    Tuple(
                      [
                        Name(
                          'placeholder_3',
                          Store(),
                          lineno=2,
                          col_offset=40,
                          end_lineno=2,
                          end_col_offset=43),
                        Name(
                          'placeholder_4',
                          Store(),
                          lineno=2,
                          col_offset=45,
                          end_lineno=2,
                          end_col_offset=51)],
                      Store(),
                      lineno=2,
                      col_offset=40,
                      end_lineno=2,
                      end_col_offset=51),
                    Call(
                      Name(
                        'enumerate',
                        Load(),
                        lineno=2,
                        col_offset=55,
                        end_lineno=2,
                        end_col_offset=64),
                      [
                        Call(
                          Name(
                            'reversed',
                            Load(),
                            lineno=2,
                            col_offset=65,
                            end_lineno=2,
                            end_col_offset=73),
                          [
                            Name(
                              'placeholder_1',
                              Load(),
                              lineno=2,
                              col_offset=74,
                              end_lineno=2,
                              end_col_offset=80)],
                          [],
                          lineno=2,
                          col_offset=65,
                          end_lineno=2,
                          end_col_offset=81)],
                      [],
                      lineno=2,
                      col_offset=55,
                      end_lineno=2,
                      end_col_offset=82),
                    [],
                    0)],
                lineno=2,
                col_offset=14,
                end_lineno=2,
                end_col_offset=83)],
            [],
            lineno=2,
            col_offset=11,
            end_lineno=2,
            end_col_offset=83),
          lineno=2,
          col_offset=4,
          end_lineno=2,
          end_col_offset=83)],
      [],
      lineno=1,
      col_offset=0,
      end_lineno=2,
      end_col_offset=83),
    FunctionDef(
      'placeholder_5',
      arguments(
        [],
        [
          arg(
            'placeholder_4',
            lineno=5,
            col_offset=14,
            end_lineno=5,
            end_col_offset=20),
          arg(
            'placeholder_6',
            lineno=5,
            col_offset=22,
            end_lineno=5,
            end_col_offset=29)],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      [
        Assign(
          [
            Name(
              'placeholder_7',
              Store(),
              lineno=6,
              col_offset=4,
              end_lineno=6,
              end_col_offset=10)],
          List(
            [],
            Load(),
            lineno=6,
            col_offset=13,
            end_lineno=6,
            end_col_offset=15),
          lineno=6,
          col_offset=4,
          end_lineno=6,
          end_col_offset=15),
        While(
          Compare(
            Name(
              'placeholder_4',
              Load(),
              lineno=7,
              col_offset=10,
              end_lineno=7,
              end_col_offset=16),
            [
              Gt()],
            [
              Constant(
                0,
                lineno=7,
                col_offset=19,
                end_lineno=7,
                end_col_offset=20)],
            lineno=7,
            col_offset=10,
            end_lineno=7,
            end_col_offset=20),
          [
            Expr(
              Call(
                Attribute(
                  Name(
                    'placeholder_7',
                    Load(),
                    lineno=8,
                    col_offset=8,
                    end_lineno=8,
                    end_col_offset=14),
                  'append',
                  Load(),
                  lineno=8,
                  col_offset=8,
                  end_lineno=8,
                  end_col_offset=21),
                [
                  BinOp(
                    Name(
                      'placeholder_4',
                      Load(),
                      lineno=8,
                      col_offset=22,
                      end_lineno=8,
                      end_col_offset=28),
                    Mod(),
                    Name(
                      'placeholder_6',
                      Load(),
                      lineno=8,
                      col_offset=31,
                      end_lineno=8,
                      end_col_offset=38),
                    lineno=8,
                    col_offset=22,
                    end_lineno=8,
                    end_col_offset=38)],
                [],
                lineno=8,
                col_offset=8,
                end_lineno=8,
                end_col_offset=39),
              lineno=8,
              col_offset=8,
              end_lineno=8,
              end_col_offset=39),
            AugAssign(
              Name(
                'placeholder_4',
                Store(),
                lineno=9,
                col_offset=8,
                end_lineno=9,
                end_col_offset=14),
              FloorDiv(),
              Name(
                'placeholder_6',
                Load(),
                lineno=9,
                col_offset=19,
                end_lineno=9,
                end_col_offset=26),
              lineno=9,
              col_offset=8,
              end_lineno=9,
              end_col_offset=26)],
          [],
          lineno=7,
          col_offset=4,
          end_lineno=9,
          end_col_offset=26),
        If(
          Name(
            'placeholder_7',
            Load(),
            lineno=10,
            col_offset=7,
            end_lineno=10,
            end_col_offset=13),
          [
            Return(
              Subscript(
                Name(
                  'placeholder_7',
                  Load(),
                  lineno=11,
                  col_offset=15,
                  end_lineno=11,
                  end_col_offset=21),
                Slice(
                  step=UnaryOp(
                    USub(),
                    Constant(
                      1,
                      lineno=11,
                      col_offset=25,
                      end_lineno=11,
                      end_col_offset=26),
                    lineno=11,
                    col_offset=24,
                    end_lineno=11,
                    end_col_offset=26),
                  lineno=11,
                  col_offset=22,
                  end_lineno=11,
                  end_col_offset=26),
                Load(),
                lineno=11,
                col_offset=15,
                end_lineno=11,
                end_col_offset=27),
              lineno=11,
              col_offset=8,
              end_lineno=11,
              end_col_offset=27)],
          [],
          lineno=10,
          col_offset=4,
          end_lineno=11,
          end_col_offset=27),
        Return(
          List(
            [
              Constant(
                0,
                lineno=12,
                col_offset=12,
                end_lineno=12,
                end_col_offset=13)],
            Load(),
            lineno=12,
            col_offset=11,
            end_lineno=12,
            end_col_offset=14),
          lineno=12,
          col_offset=4,
          end_lineno=12,
          end_col_offset=14)],
      [],
      lineno=5,
      col_offset=0,
      end_lineno=12,
      end_col_offset=14),
    FunctionDef(
      'placeholder_8',
      arguments(
        [],
        [
          arg(
            'placeholder_9',
            lineno=15,
            col_offset=11,
            end_lineno=15,
            end_col_offset=20),
          arg(
            'placeholder_1',
            lineno=15,
            col_offset=22,
            end_lineno=15,
            end_col_offset=28),
          arg(
            'placeholder_10',
            lineno=15,
            col_offset=30,
            end_lineno=15,
            end_col_offset=37)],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      [
        If(
          Compare(
            Name(
              'placeholder_9',
              Load(),
              lineno=16,
              col_offset=7,
              end_lineno=16,
              end_col_offset=16),
            [
              Lt()],
            [
              Constant(
                2,
                lineno=16,
                col_offset=19,
                end_lineno=16,
                end_col_offset=20)],
            lineno=16,
            col_offset=7,
            end_lineno=16,
            end_col_offset=20),
          [
            Raise(
              Call(
                Name(
                  'ValueError',
                  Load(),
                  lineno=17,
                  col_offset=14,
                  end_lineno=17,
                  end_col_offset=24),
                [
                  Constant(
                    'input base must be >= 2',
                    lineno=17,
                    col_offset=25,
                    end_lineno=17,
                    end_col_offset=50)],
                [],
                lineno=17,
                col_offset=14,
                end_lineno=17,
                end_col_offset=51),
              lineno=17,
              col_offset=8,
              end_lineno=17,
              end_col_offset=51)],
          [],
          lineno=16,
          col_offset=4,
          end_lineno=17,
          end_col_offset=51),
        If(
          Compare(
            Name(
              'placeholder_10',
              Load(),
              lineno=19,
              col_offset=7,
              end_lineno=19,
              end_col_offset=14),
            [
              Lt()],
            [
              Constant(
                2,
                lineno=19,
                col_offset=17,
                end_lineno=19,
                end_col_offset=18)],
            lineno=19,
            col_offset=7,
            end_lineno=19,
            end_col_offset=18),
          [
            Raise(
              Call(
                Name(
                  'ValueError',
                  Load(),
                  lineno=20,
                  col_offset=14,
                  end_lineno=20,
                  end_col_offset=24),
                [
                  Constant(
                    'output base must be >= 2',
                    lineno=20,
                    col_offset=25,
                    end_lineno=20,
                    end_col_offset=51)],
                [],
                lineno=20,
                col_offset=14,
                end_lineno=20,
                end_col_offset=52),
              lineno=20,
              col_offset=8,
              end_lineno=20,
              end_col_offset=52)],
          [],
          lineno=19,
          col_offset=4,
          end_lineno=20,
          end_col_offset=52),
        If(
          Call(
            Name(
              'any',
              Load(),
              lineno=22,
              col_offset=7,
              end_lineno=22,
              end_col_offset=10),
            [
              GeneratorExp(
                Constant(
                  True,
                  lineno=22,
                  col_offset=11,
                  end_lineno=22,
                  end_col_offset=15),
                [
                  comprehension(
                    Name(
                      'placeholder_3',
                      Store(),
                      lineno=22,
                      col_offset=20,
                      end_lineno=22,
                      end_col_offset=23),
                    Name(
                      'placeholder_1',
                      Load(),
                      lineno=22,
                      col_offset=27,
                      end_lineno=22,
                      end_col_offset=33),
                    [
                      BoolOp(
                        Or(),
                        [
                          Compare(
                            Name(
                              'placeholder_3',
                              Load(),
                              lineno=22,
                              col_offset=37,
                              end_lineno=22,
                              end_col_offset=40),
                            [
                              Lt()],
                            [
                              Constant(
                                0,
                                lineno=22,
                                col_offset=43,
                                end_lineno=22,
                                end_col_offset=44)],
                            lineno=22,
                            col_offset=37,
                            end_lineno=22,
                            end_col_offset=44),
                          Compare(
                            Name(
                              'placeholder_3',
                              Load(),
                              lineno=22,
                              col_offset=48,
                              end_lineno=22,
                              end_col_offset=51),
                            [
                              GtE()],
                            [
                              Name(
                                'placeholder_9',
                                Load(),
                                lineno=22,
                                col_offset=55,
                                end_lineno=22,
                                end_col_offset=64)],
                            lineno=22,
                            col_offset=48,
                            end_lineno=22,
                            end_col_offset=64)],
                        lineno=22,
                        col_offset=37,
                        end_lineno=22,
                        end_col_offset=64)],
                    0)],
                lineno=22,
                col_offset=10,
                end_lineno=22,
                end_col_offset=65)],
            [],
            lineno=22,
            col_offset=7,
            end_lineno=22,
            end_col_offset=65),
          [
            Raise(
              Call(
                Name(
                  'ValueError',
                  Load(),
                  lineno=23,
                  col_offset=14,
                  end_lineno=23,
                  end_col_offset=24),
                [
                  Constant(
                    'all digits must satisfy 0 <= d < input base',
                    lineno=23,
                    col_offset=25,
                    end_lineno=23,
                    end_col_offset=70)],
                [],
                lineno=23,
                col_offset=14,
                end_lineno=23,
                end_col_offset=71),
              lineno=23,
              col_offset=8,
              end_lineno=23,
              end_col_offset=71)],
          [],
          lineno=22,
          col_offset=4,
          end_lineno=23,
          end_col_offset=71),
        Return(
          Call(
            Name(
              'placeholder_5',
              Load(),
              lineno=25,
              col_offset=11,
              end_lineno=25,
              end_col_offset=20),
            [
              Call(
                Name(
                  'placeholder_0',
                  Load(),
                  lineno=25,
                  col_offset=21,
                  end_lineno=25,
                  end_col_offset=32),
                [
                  Name(
                    'placeholder_1',
                    Load(),
                    lineno=25,
                    col_offset=33,
                    end_lineno=25,
                    end_col_offset=39),
                  Name(
                    'placeholder_9',
                    Load(),
                    lineno=25,
                    col_offset=41,
                    end_lineno=25,
                    end_col_offset=50)],
                [],
                lineno=25,
                col_offset=21,
                end_lineno=25,
                end_col_offset=51),
              Name(
                'placeholder_10',
                Load(),
                lineno=25,
                col_offset=53,
                end_lineno=25,
                end_col_offset=60)],
            [],
            lineno=25,
            col_offset=11,
            end_lineno=25,
            end_col_offset=61),
          lineno=25,
          col_offset=4,
          end_lineno=25,
          end_col_offset=61)],
      [],
      lineno=15,
      col_offset=0,
      end_lineno=25,
      end_col_offset=61)],
  [])

# BEGIN NORMALIZED CODE AFTER
def placeholder_0(placeholder_1, placeholder_2):
    return sum(
        (
            placeholder_4 * placeholder_2**placeholder_3
            for placeholder_3, placeholder_4 in enumerate(reversed(placeholder_1))
        )
    )


def placeholder_5(placeholder_4, placeholder_6):
    placeholder_7 = []
    while placeholder_4 > 0:
        placeholder_7.append(placeholder_4 % placeholder_6)
        placeholder_4 //= placeholder_6
    if placeholder_7:
        return placeholder_7[::-1]
    return [0]


def placeholder_8(placeholder_9, placeholder_1, placeholder_10):
    if placeholder_9 < 2:
        raise ValueError("input base must be >= 2")
    if placeholder_10 < 2:
        raise ValueError("output base must be >= 2")
    if any(
        (
            True
            for placeholder_3 in placeholder_1
            if placeholder_3 < 0 or placeholder_3 >= placeholder_9
        )
    ):
        raise ValueError("all digits must satisfy 0 <= d < input base")
    return placeholder_5(placeholder_0(placeholder_1, placeholder_9), placeholder_10)
