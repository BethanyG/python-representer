# BEGIN TREE BEFORE
Module(
  [
    FunctionDef(
      'parse_binary',
      arguments(
        [],
        [
          arg(
            'digits',
            lineno=1,
            col_offset=17,
            end_lineno=1,
            end_col_offset=23)],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      [
        If(
          BinOp(
            Call(
              Name(
                'set',
                Load(),
                lineno=2,
                col_offset=7,
                end_lineno=2,
                end_col_offset=10),
              [
                Name(
                  'digits',
                  Load(),
                  lineno=2,
                  col_offset=11,
                  end_lineno=2,
                  end_col_offset=17)],
              [],
              lineno=2,
              col_offset=7,
              end_lineno=2,
              end_col_offset=18),
            Sub(),
            Call(
              Name(
                'set',
                Load(),
                lineno=2,
                col_offset=21,
                end_lineno=2,
                end_col_offset=24),
              [
                Constant(
                  '01',
                  lineno=2,
                  col_offset=25,
                  end_lineno=2,
                  end_col_offset=29)],
              [],
              lineno=2,
              col_offset=21,
              end_lineno=2,
              end_col_offset=30),
            lineno=2,
            col_offset=7,
            end_lineno=2,
            end_col_offset=30),
          [
            Raise(
              Call(
                Name(
                  'ValueError',
                  Load(),
                  lineno=3,
                  col_offset=14,
                  end_lineno=3,
                  end_col_offset=24),
                [
                  BinOp(
                    Constant(
                      'Invalid binary literal: ',
                      lineno=3,
                      col_offset=25,
                      end_lineno=3,
                      end_col_offset=51),
                    Add(),
                    Name(
                      'digits',
                      Load(),
                      lineno=3,
                      col_offset=54,
                      end_lineno=3,
                      end_col_offset=60),
                    lineno=3,
                    col_offset=25,
                    end_lineno=3,
                    end_col_offset=60)],
                [],
                lineno=3,
                col_offset=14,
                end_lineno=3,
                end_col_offset=61),
              lineno=3,
              col_offset=8,
              end_lineno=3,
              end_col_offset=61)],
          [],
          lineno=2,
          col_offset=4,
          end_lineno=3,
          end_col_offset=61),
        Return(
          Call(
            Name(
              'sum',
              Load(),
              lineno=4,
              col_offset=11,
              end_lineno=4,
              end_col_offset=14),
            [
              GeneratorExp(
                BinOp(
                  Call(
                    Name(
                      'int',
                      Load(),
                      lineno=4,
                      col_offset=15,
                      end_lineno=4,
                      end_col_offset=18),
                    [
                      Name(
                        'digit',
                        Load(),
                        lineno=4,
                        col_offset=19,
                        end_lineno=4,
                        end_col_offset=24)],
                    [],
                    lineno=4,
                    col_offset=15,
                    end_lineno=4,
                    end_col_offset=25),
                  Mult(),
                  BinOp(
                    Constant(
                      2,
                      lineno=4,
                      col_offset=28,
                      end_lineno=4,
                      end_col_offset=29),
                    Pow(),
                    Name(
                      'idx',
                      Load(),
                      lineno=4,
                      col_offset=33,
                      end_lineno=4,
                      end_col_offset=36),
                    lineno=4,
                    col_offset=28,
                    end_lineno=4,
                    end_col_offset=36),
                  lineno=4,
                  col_offset=15,
                  end_lineno=4,
                  end_col_offset=36),
                [
                  comprehension(
                    Tuple(
                      [
                        Name(
                          'idx',
                          Store(),
                          lineno=5,
                          col_offset=20,
                          end_lineno=5,
                          end_col_offset=23),
                        Name(
                          'digit',
                          Store(),
                          lineno=5,
                          col_offset=25,
                          end_lineno=5,
                          end_col_offset=30)],
                      Store(),
                      lineno=5,
                      col_offset=19,
                      end_lineno=5,
                      end_col_offset=31),
                    Call(
                      Name(
                        'enumerate',
                        Load(),
                        lineno=5,
                        col_offset=35,
                        end_lineno=5,
                        end_col_offset=44),
                      [
                        Call(
                          Name(
                            'reversed',
                            Load(),
                            lineno=5,
                            col_offset=45,
                            end_lineno=5,
                            end_col_offset=53),
                          [
                            Name(
                              'digits',
                              Load(),
                              lineno=5,
                              col_offset=54,
                              end_lineno=5,
                              end_col_offset=60)],
                          [],
                          lineno=5,
                          col_offset=45,
                          end_lineno=5,
                          end_col_offset=61)],
                      [],
                      lineno=5,
                      col_offset=35,
                      end_lineno=5,
                      end_col_offset=62),
                    [],
                    0)],
                lineno=4,
                col_offset=14,
                end_lineno=5,
                end_col_offset=63)],
            [],
            lineno=4,
            col_offset=11,
            end_lineno=5,
            end_col_offset=63),
          lineno=4,
          col_offset=4,
          end_lineno=5,
          end_col_offset=63)],
      [],
      lineno=1,
      col_offset=0,
      end_lineno=5,
      end_col_offset=63)],
  [])

# BEGIN TREE AFTER
Module(
  [
    FunctionDef(
      'placeholder_0',
      arguments(
        [],
        [
          arg(
            'placeholder_1',
            lineno=1,
            col_offset=17,
            end_lineno=1,
            end_col_offset=23)],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      [
        If(
          BinOp(
            Call(
              Name(
                'set',
                Load(),
                lineno=2,
                col_offset=7,
                end_lineno=2,
                end_col_offset=10),
              [
                Name(
                  'placeholder_1',
                  Load(),
                  lineno=2,
                  col_offset=11,
                  end_lineno=2,
                  end_col_offset=17)],
              [],
              lineno=2,
              col_offset=7,
              end_lineno=2,
              end_col_offset=18),
            Sub(),
            Call(
              Name(
                'set',
                Load(),
                lineno=2,
                col_offset=21,
                end_lineno=2,
                end_col_offset=24),
              [
                Constant(
                  '01',
                  lineno=2,
                  col_offset=25,
                  end_lineno=2,
                  end_col_offset=29)],
              [],
              lineno=2,
              col_offset=21,
              end_lineno=2,
              end_col_offset=30),
            lineno=2,
            col_offset=7,
            end_lineno=2,
            end_col_offset=30),
          [
            Raise(
              Call(
                Name(
                  'ValueError',
                  Load(),
                  lineno=3,
                  col_offset=14,
                  end_lineno=3,
                  end_col_offset=24),
                [
                  BinOp(
                    Constant(
                      'Invalid binary literal: ',
                      lineno=3,
                      col_offset=25,
                      end_lineno=3,
                      end_col_offset=51),
                    Add(),
                    Name(
                      'placeholder_1',
                      Load(),
                      lineno=3,
                      col_offset=54,
                      end_lineno=3,
                      end_col_offset=60),
                    lineno=3,
                    col_offset=25,
                    end_lineno=3,
                    end_col_offset=60)],
                [],
                lineno=3,
                col_offset=14,
                end_lineno=3,
                end_col_offset=61),
              lineno=3,
              col_offset=8,
              end_lineno=3,
              end_col_offset=61)],
          [],
          lineno=2,
          col_offset=4,
          end_lineno=3,
          end_col_offset=61),
        Return(
          Call(
            Name(
              'sum',
              Load(),
              lineno=4,
              col_offset=11,
              end_lineno=4,
              end_col_offset=14),
            [
              GeneratorExp(
                BinOp(
                  Call(
                    Name(
                      'int',
                      Load(),
                      lineno=4,
                      col_offset=15,
                      end_lineno=4,
                      end_col_offset=18),
                    [
                      Name(
                        'placeholder_3',
                        Load(),
                        lineno=4,
                        col_offset=19,
                        end_lineno=4,
                        end_col_offset=24)],
                    [],
                    lineno=4,
                    col_offset=15,
                    end_lineno=4,
                    end_col_offset=25),
                  Mult(),
                  BinOp(
                    Constant(
                      2,
                      lineno=4,
                      col_offset=28,
                      end_lineno=4,
                      end_col_offset=29),
                    Pow(),
                    Name(
                      'placeholder_2',
                      Load(),
                      lineno=4,
                      col_offset=33,
                      end_lineno=4,
                      end_col_offset=36),
                    lineno=4,
                    col_offset=28,
                    end_lineno=4,
                    end_col_offset=36),
                  lineno=4,
                  col_offset=15,
                  end_lineno=4,
                  end_col_offset=36),
                [
                  comprehension(
                    Tuple(
                      [
                        Name(
                          'placeholder_2',
                          Store(),
                          lineno=5,
                          col_offset=20,
                          end_lineno=5,
                          end_col_offset=23),
                        Name(
                          'placeholder_3',
                          Store(),
                          lineno=5,
                          col_offset=25,
                          end_lineno=5,
                          end_col_offset=30)],
                      Store(),
                      lineno=5,
                      col_offset=19,
                      end_lineno=5,
                      end_col_offset=31),
                    Call(
                      Name(
                        'enumerate',
                        Load(),
                        lineno=5,
                        col_offset=35,
                        end_lineno=5,
                        end_col_offset=44),
                      [
                        Call(
                          Name(
                            'reversed',
                            Load(),
                            lineno=5,
                            col_offset=45,
                            end_lineno=5,
                            end_col_offset=53),
                          [
                            Name(
                              'placeholder_1',
                              Load(),
                              lineno=5,
                              col_offset=54,
                              end_lineno=5,
                              end_col_offset=60)],
                          [],
                          lineno=5,
                          col_offset=45,
                          end_lineno=5,
                          end_col_offset=61)],
                      [],
                      lineno=5,
                      col_offset=35,
                      end_lineno=5,
                      end_col_offset=62),
                    [],
                    0)],
                lineno=4,
                col_offset=14,
                end_lineno=5,
                end_col_offset=63)],
            [],
            lineno=4,
            col_offset=11,
            end_lineno=5,
            end_col_offset=63),
          lineno=4,
          col_offset=4,
          end_lineno=5,
          end_col_offset=63)],
      [],
      lineno=1,
      col_offset=0,
      end_lineno=5,
      end_col_offset=63)],
  [])

# BEGIN NORMALIZED CODE AFTER
def placeholder_0(placeholder_1):
    if set(placeholder_1) - set("01"):
        raise ValueError("Invalid binary literal: " + placeholder_1)
    return sum(
        (
            int(placeholder_3) * 2**placeholder_2
            for placeholder_2, placeholder_3 in enumerate(reversed(placeholder_1))
        )
    )
