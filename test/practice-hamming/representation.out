# BEGIN TREE BEFORE
Module(
  [
    FunctionDef(
      'distance',
      arguments(
        [],
        [
          arg(
            'strand_a',
            lineno=1,
            col_offset=13,
            end_lineno=1,
            end_col_offset=21),
          arg(
            'strand_b',
            lineno=1,
            col_offset=23,
            end_lineno=1,
            end_col_offset=31)],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      [
        If(
          Compare(
            Call(
              Name(
                'len',
                Load(),
                lineno=2,
                col_offset=7,
                end_lineno=2,
                end_col_offset=10),
              [
                Name(
                  'strand_a',
                  Load(),
                  lineno=2,
                  col_offset=11,
                  end_lineno=2,
                  end_col_offset=19)],
              [],
              lineno=2,
              col_offset=7,
              end_lineno=2,
              end_col_offset=20),
            [
              NotEq()],
            [
              Call(
                Name(
                  'len',
                  Load(),
                  lineno=2,
                  col_offset=24,
                  end_lineno=2,
                  end_col_offset=27),
                [
                  Name(
                    'strand_b',
                    Load(),
                    lineno=2,
                    col_offset=28,
                    end_lineno=2,
                    end_col_offset=36)],
                [],
                lineno=2,
                col_offset=24,
                end_lineno=2,
                end_col_offset=37)],
            lineno=2,
            col_offset=7,
            end_lineno=2,
            end_col_offset=37),
          [
            Raise(
              Call(
                Name(
                  'ValueError',
                  Load(),
                  lineno=3,
                  col_offset=14,
                  end_lineno=3,
                  end_col_offset=24),
                [
                  Constant(
                    'Strands must be of equal length.',
                    lineno=3,
                    col_offset=25,
                    end_lineno=3,
                    end_col_offset=59)],
                [],
                lineno=3,
                col_offset=14,
                end_lineno=3,
                end_col_offset=60),
              lineno=3,
              col_offset=8,
              end_lineno=3,
              end_col_offset=60)],
          [],
          lineno=2,
          col_offset=4,
          end_lineno=3,
          end_col_offset=60),
        Return(
          Call(
            Name(
              'sum',
              Load(),
              lineno=5,
              col_offset=11,
              end_lineno=5,
              end_col_offset=14),
            [
              GeneratorExp(
                Compare(
                  Name(
                    'a_part',
                    Load(),
                    lineno=5,
                    col_offset=15,
                    end_lineno=5,
                    end_col_offset=21),
                  [
                    NotEq()],
                  [
                    Name(
                      'b_part',
                      Load(),
                      lineno=5,
                      col_offset=25,
                      end_lineno=5,
                      end_col_offset=31)],
                  lineno=5,
                  col_offset=15,
                  end_lineno=5,
                  end_col_offset=31),
                [
                  comprehension(
                    Tuple(
                      [
                        Name(
                          'a_part',
                          Store(),
                          lineno=5,
                          col_offset=36,
                          end_lineno=5,
                          end_col_offset=42),
                        Name(
                          'b_part',
                          Store(),
                          lineno=5,
                          col_offset=44,
                          end_lineno=5,
                          end_col_offset=50)],
                      Store(),
                      lineno=5,
                      col_offset=36,
                      end_lineno=5,
                      end_col_offset=50),
                    Call(
                      Name(
                        'zip',
                        Load(),
                        lineno=5,
                        col_offset=54,
                        end_lineno=5,
                        end_col_offset=57),
                      [
                        Name(
                          'strand_a',
                          Load(),
                          lineno=5,
                          col_offset=58,
                          end_lineno=5,
                          end_col_offset=66),
                        Name(
                          'strand_b',
                          Load(),
                          lineno=5,
                          col_offset=68,
                          end_lineno=5,
                          end_col_offset=76)],
                      [],
                      lineno=5,
                      col_offset=54,
                      end_lineno=5,
                      end_col_offset=77),
                    [],
                    0)],
                lineno=5,
                col_offset=14,
                end_lineno=5,
                end_col_offset=78)],
            [],
            lineno=5,
            col_offset=11,
            end_lineno=5,
            end_col_offset=78),
          lineno=5,
          col_offset=4,
          end_lineno=5,
          end_col_offset=78)],
      [],
      lineno=1,
      col_offset=0,
      end_lineno=5,
      end_col_offset=78)],
  [])

# BEGIN TREE AFTER
Module(
  [
    FunctionDef(
      'placeholder_0',
      arguments(
        [],
        [
          arg(
            'placeholder_1',
            lineno=1,
            col_offset=13,
            end_lineno=1,
            end_col_offset=21),
          arg(
            'placeholder_2',
            lineno=1,
            col_offset=23,
            end_lineno=1,
            end_col_offset=31)],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      [
        If(
          Compare(
            Call(
              Name(
                'len',
                Load(),
                lineno=2,
                col_offset=7,
                end_lineno=2,
                end_col_offset=10),
              [
                Name(
                  'placeholder_1',
                  Load(),
                  lineno=2,
                  col_offset=11,
                  end_lineno=2,
                  end_col_offset=19)],
              [],
              lineno=2,
              col_offset=7,
              end_lineno=2,
              end_col_offset=20),
            [
              NotEq()],
            [
              Call(
                Name(
                  'len',
                  Load(),
                  lineno=2,
                  col_offset=24,
                  end_lineno=2,
                  end_col_offset=27),
                [
                  Name(
                    'placeholder_2',
                    Load(),
                    lineno=2,
                    col_offset=28,
                    end_lineno=2,
                    end_col_offset=36)],
                [],
                lineno=2,
                col_offset=24,
                end_lineno=2,
                end_col_offset=37)],
            lineno=2,
            col_offset=7,
            end_lineno=2,
            end_col_offset=37),
          [
            Raise(
              Call(
                Name(
                  'ValueError',
                  Load(),
                  lineno=3,
                  col_offset=14,
                  end_lineno=3,
                  end_col_offset=24),
                [
                  Constant(
                    'Strands must be of equal length.',
                    lineno=3,
                    col_offset=25,
                    end_lineno=3,
                    end_col_offset=59)],
                [],
                lineno=3,
                col_offset=14,
                end_lineno=3,
                end_col_offset=60),
              lineno=3,
              col_offset=8,
              end_lineno=3,
              end_col_offset=60)],
          [],
          lineno=2,
          col_offset=4,
          end_lineno=3,
          end_col_offset=60),
        Return(
          Call(
            Name(
              'sum',
              Load(),
              lineno=5,
              col_offset=11,
              end_lineno=5,
              end_col_offset=14),
            [
              GeneratorExp(
                Compare(
                  Name(
                    'placeholder_3',
                    Load(),
                    lineno=5,
                    col_offset=15,
                    end_lineno=5,
                    end_col_offset=21),
                  [
                    NotEq()],
                  [
                    Name(
                      'placeholder_4',
                      Load(),
                      lineno=5,
                      col_offset=25,
                      end_lineno=5,
                      end_col_offset=31)],
                  lineno=5,
                  col_offset=15,
                  end_lineno=5,
                  end_col_offset=31),
                [
                  comprehension(
                    Tuple(
                      [
                        Name(
                          'placeholder_3',
                          Store(),
                          lineno=5,
                          col_offset=36,
                          end_lineno=5,
                          end_col_offset=42),
                        Name(
                          'placeholder_4',
                          Store(),
                          lineno=5,
                          col_offset=44,
                          end_lineno=5,
                          end_col_offset=50)],
                      Store(),
                      lineno=5,
                      col_offset=36,
                      end_lineno=5,
                      end_col_offset=50),
                    Call(
                      Name(
                        'zip',
                        Load(),
                        lineno=5,
                        col_offset=54,
                        end_lineno=5,
                        end_col_offset=57),
                      [
                        Name(
                          'placeholder_1',
                          Load(),
                          lineno=5,
                          col_offset=58,
                          end_lineno=5,
                          end_col_offset=66),
                        Name(
                          'placeholder_2',
                          Load(),
                          lineno=5,
                          col_offset=68,
                          end_lineno=5,
                          end_col_offset=76)],
                      [],
                      lineno=5,
                      col_offset=54,
                      end_lineno=5,
                      end_col_offset=77),
                    [],
                    0)],
                lineno=5,
                col_offset=14,
                end_lineno=5,
                end_col_offset=78)],
            [],
            lineno=5,
            col_offset=11,
            end_lineno=5,
            end_col_offset=78),
          lineno=5,
          col_offset=4,
          end_lineno=5,
          end_col_offset=78)],
      [],
      lineno=1,
      col_offset=0,
      end_lineno=5,
      end_col_offset=78)],
  [])

# BEGIN NORMALIZED CODE AFTER
def placeholder_0(placeholder_1, placeholder_2):
    if len(placeholder_1) != len(placeholder_2):
        raise ValueError("Strands must be of equal length.")
    return sum(
        (
            placeholder_3 != placeholder_4
            for placeholder_3, placeholder_4 in zip(placeholder_1, placeholder_2)
        )
    )
