# BEGIN TREE BEFORE
Module(
  [
    Expr(
      Constant(
        'Functions for creating, transforming, and adding prefixes to strings.',
        lineno=1,
        col_offset=0,
        end_lineno=1,
        end_col_offset=75),
      lineno=1,
      col_offset=0,
      end_lineno=1,
      end_col_offset=75),
    FunctionDef(
      'add_prefix_un',
      arguments(
        [],
        [
          arg(
            'word',
            lineno=4,
            col_offset=18,
            end_lineno=4,
            end_col_offset=22)],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      [
        Expr(
          Constant(
            "Take the given word and add the 'un' prefix.\n\n    :param word: str - containing the root word.\n    :return: str - of root word prepended with 'un'.\n    ",
            lineno=5,
            col_offset=4,
            end_lineno=9,
            end_col_offset=7),
          lineno=5,
          col_offset=4,
          end_lineno=9,
          end_col_offset=7),
        Return(
          BinOp(
            Constant(
              'un',
              lineno=11,
              col_offset=11,
              end_lineno=11,
              end_col_offset=15),
            Add(),
            Name(
              'word',
              Load(),
              lineno=11,
              col_offset=18,
              end_lineno=11,
              end_col_offset=22),
            lineno=11,
            col_offset=11,
            end_lineno=11,
            end_col_offset=22),
          lineno=11,
          col_offset=4,
          end_lineno=11,
          end_col_offset=22)],
      [],
      lineno=4,
      col_offset=0,
      end_lineno=11,
      end_col_offset=22),
    FunctionDef(
      'make_word_groups',
      arguments(
        [],
        [
          arg(
            'vocab_words',
            lineno=14,
            col_offset=21,
            end_lineno=14,
            end_col_offset=32)],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      [
        Expr(
          Constant(
            "Transform a list containing a prefix and words into a string with the prefix followed by the words with prefix prepended.\n\n    :param vocab_words: list - of vocabulary words with prefix in first index.\n    :return: str - of prefix followed by vocabulary words with\n            prefix applied.\n\n    This function takes a `vocab_words` list and returns a string\n    with the prefix and the words with prefix applied, separated\n     by ' :: '.\n\n    For example: list('en', 'close', 'joy', 'lighten'),\n    produces the following string: 'en :: enclose :: enjoy :: enlighten'.\n    ",
            lineno=15,
            col_offset=4,
            end_lineno=27,
            end_col_offset=7),
          lineno=15,
          col_offset=4,
          end_lineno=27,
          end_col_offset=7),
        Assign(
          [
            Name(
              'prefix',
              Store(),
              lineno=29,
              col_offset=4,
              end_lineno=29,
              end_col_offset=10)],
          Subscript(
            Name(
              'vocab_words',
              Load(),
              lineno=29,
              col_offset=13,
              end_lineno=29,
              end_col_offset=24),
            Constant(
              0,
              lineno=29,
              col_offset=25,
              end_lineno=29,
              end_col_offset=26),
            Load(),
            lineno=29,
            col_offset=13,
            end_lineno=29,
            end_col_offset=27),
          lineno=29,
          col_offset=4,
          end_lineno=29,
          end_col_offset=27),
        Assign(
          [
            Name(
              'joiner',
              Store(),
              lineno=30,
              col_offset=4,
              end_lineno=30,
              end_col_offset=10)],
          BinOp(
            Constant(
              ' :: ',
              lineno=30,
              col_offset=13,
              end_lineno=30,
              end_col_offset=19),
            Add(),
            Name(
              'prefix',
              Load(),
              lineno=30,
              col_offset=22,
              end_lineno=30,
              end_col_offset=28),
            lineno=30,
            col_offset=13,
            end_lineno=30,
            end_col_offset=28),
          lineno=30,
          col_offset=4,
          end_lineno=30,
          end_col_offset=28),
        Return(
          Call(
            Attribute(
              Name(
                'joiner',
                Load(),
                lineno=32,
                col_offset=11,
                end_lineno=32,
                end_col_offset=17),
              'join',
              Load(),
              lineno=32,
              col_offset=11,
              end_lineno=32,
              end_col_offset=22),
            [
              Name(
                'vocab_words',
                Load(),
                lineno=32,
                col_offset=23,
                end_lineno=32,
                end_col_offset=34)],
            [],
            lineno=32,
            col_offset=11,
            end_lineno=32,
            end_col_offset=35),
          lineno=32,
          col_offset=4,
          end_lineno=32,
          end_col_offset=35)],
      [],
      lineno=14,
      col_offset=0,
      end_lineno=32,
      end_col_offset=35),
    FunctionDef(
      'remove_suffix_ness',
      arguments(
        [],
        [
          arg(
            'word',
            lineno=35,
            col_offset=23,
            end_lineno=35,
            end_col_offset=27)],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      [
        Expr(
          Constant(
            'Remove the suffix from the word while keeping spelling in mind.\n\n    :param word: str - of word to remove suffix from.\n    :return: str - of word with suffix removed & spelling adjusted.\n\n    For example: "heaviness" becomes "heavy", but "sadness" becomes "sad".\n    ',
            lineno=36,
            col_offset=4,
            end_lineno=42,
            end_col_offset=7),
          lineno=36,
          col_offset=4,
          end_lineno=42,
          end_col_offset=7),
        Assign(
          [
            Name(
              'word',
              Store(),
              lineno=44,
              col_offset=4,
              end_lineno=44,
              end_col_offset=8)],
          Subscript(
            Name(
              'word',
              Load(),
              lineno=44,
              col_offset=11,
              end_lineno=44,
              end_col_offset=15),
            Slice(
              upper=UnaryOp(
                USub(),
                Constant(
                  4,
                  lineno=44,
                  col_offset=18,
                  end_lineno=44,
                  end_col_offset=19),
                lineno=44,
                col_offset=17,
                end_lineno=44,
                end_col_offset=19),
              lineno=44,
              col_offset=16,
              end_lineno=44,
              end_col_offset=19),
            Load(),
            lineno=44,
            col_offset=11,
            end_lineno=44,
            end_col_offset=20),
          lineno=44,
          col_offset=4,
          end_lineno=44,
          end_col_offset=20),
        If(
          Compare(
            Subscript(
              Name(
                'word',
                Load(),
                lineno=45,
                col_offset=7,
                end_lineno=45,
                end_col_offset=11),
              UnaryOp(
                USub(),
                Constant(
                  1,
                  lineno=45,
                  col_offset=13,
                  end_lineno=45,
                  end_col_offset=14),
                lineno=45,
                col_offset=12,
                end_lineno=45,
                end_col_offset=14),
              Load(),
              lineno=45,
              col_offset=7,
              end_lineno=45,
              end_col_offset=15),
            [
              Eq()],
            [
              Constant(
                'i',
                lineno=45,
                col_offset=19,
                end_lineno=45,
                end_col_offset=22)],
            lineno=45,
            col_offset=7,
            end_lineno=45,
            end_col_offset=22),
          [
            Assign(
              [
                Name(
                  'word',
                  Store(),
                  lineno=46,
                  col_offset=8,
                  end_lineno=46,
                  end_col_offset=12)],
              BinOp(
                Subscript(
                  Name(
                    'word',
                    Load(),
                    lineno=46,
                    col_offset=15,
                    end_lineno=46,
                    end_col_offset=19),
                  Slice(
                    upper=UnaryOp(
                      USub(),
                      Constant(
                        1,
                        lineno=46,
                        col_offset=22,
                        end_lineno=46,
                        end_col_offset=23),
                      lineno=46,
                      col_offset=21,
                      end_lineno=46,
                      end_col_offset=23),
                    lineno=46,
                    col_offset=20,
                    end_lineno=46,
                    end_col_offset=23),
                  Load(),
                  lineno=46,
                  col_offset=15,
                  end_lineno=46,
                  end_col_offset=24),
                Add(),
                Constant(
                  'y',
                  lineno=46,
                  col_offset=27,
                  end_lineno=46,
                  end_col_offset=30),
                lineno=46,
                col_offset=15,
                end_lineno=46,
                end_col_offset=30),
              lineno=46,
              col_offset=8,
              end_lineno=46,
              end_col_offset=30)],
          [],
          lineno=45,
          col_offset=4,
          end_lineno=46,
          end_col_offset=30),
        Return(
          Name(
            'word',
            Load(),
            lineno=48,
            col_offset=11,
            end_lineno=48,
            end_col_offset=15),
          lineno=48,
          col_offset=4,
          end_lineno=48,
          end_col_offset=15)],
      [],
      lineno=35,
      col_offset=0,
      end_lineno=48,
      end_col_offset=15),
    FunctionDef(
      'adjective_to_verb',
      arguments(
        [],
        [
          arg(
            'sentence',
            lineno=51,
            col_offset=22,
            end_lineno=51,
            end_col_offset=30),
          arg(
            'index',
            lineno=51,
            col_offset=32,
            end_lineno=51,
            end_col_offset=37)],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      [
        Expr(
          Constant(
            'Change the adjective within the sentence to a verb.\n\n    :param sentence: str - that uses the word in sentence.\n    :param index: int - index of the word to remove and transform.\n    :return: str - word that changes the extracted adjective to a verb.\n\n    For example, ("It got dark as the sun set", 2) becomes "darken".\n    ',
            lineno=52,
            col_offset=4,
            end_lineno=59,
            end_col_offset=7),
          lineno=52,
          col_offset=4,
          end_lineno=59,
          end_col_offset=7),
        Assign(
          [
            Name(
              'word',
              Store(),
              lineno=61,
              col_offset=4,
              end_lineno=61,
              end_col_offset=8)],
          Subscript(
            Call(
              Attribute(
                Name(
                  'sentence',
                  Load(),
                  lineno=61,
                  col_offset=11,
                  end_lineno=61,
                  end_col_offset=19),
                'split',
                Load(),
                lineno=61,
                col_offset=11,
                end_lineno=61,
                end_col_offset=25),
              [],
              [],
              lineno=61,
              col_offset=11,
              end_lineno=61,
              end_col_offset=27),
            Name(
              'index',
              Load(),
              lineno=61,
              col_offset=28,
              end_lineno=61,
              end_col_offset=33),
            Load(),
            lineno=61,
            col_offset=11,
            end_lineno=61,
            end_col_offset=34),
          lineno=61,
          col_offset=4,
          end_lineno=61,
          end_col_offset=34),
        If(
          Compare(
            Subscript(
              Name(
                'word',
                Load(),
                lineno=63,
                col_offset=7,
                end_lineno=63,
                end_col_offset=11),
              UnaryOp(
                USub(),
                Constant(
                  1,
                  lineno=63,
                  col_offset=13,
                  end_lineno=63,
                  end_col_offset=14),
                lineno=63,
                col_offset=12,
                end_lineno=63,
                end_col_offset=14),
              Load(),
              lineno=63,
              col_offset=7,
              end_lineno=63,
              end_col_offset=15),
            [
              Eq()],
            [
              Constant(
                '.',
                lineno=63,
                col_offset=19,
                end_lineno=63,
                end_col_offset=22)],
            lineno=63,
            col_offset=7,
            end_lineno=63,
            end_col_offset=22),
          [
            Assign(
              [
                Name(
                  'word',
                  Store(),
                  lineno=64,
                  col_offset=8,
                  end_lineno=64,
                  end_col_offset=12)],
              BinOp(
                Subscript(
                  Name(
                    'word',
                    Load(),
                    lineno=64,
                    col_offset=15,
                    end_lineno=64,
                    end_col_offset=19),
                  Slice(
                    upper=UnaryOp(
                      USub(),
                      Constant(
                        1,
                        lineno=64,
                        col_offset=22,
                        end_lineno=64,
                        end_col_offset=23),
                      lineno=64,
                      col_offset=21,
                      end_lineno=64,
                      end_col_offset=23),
                    lineno=64,
                    col_offset=20,
                    end_lineno=64,
                    end_col_offset=23),
                  Load(),
                  lineno=64,
                  col_offset=15,
                  end_lineno=64,
                  end_col_offset=24),
                Add(),
                Constant(
                  'en',
                  lineno=64,
                  col_offset=27,
                  end_lineno=64,
                  end_col_offset=31),
                lineno=64,
                col_offset=15,
                end_lineno=64,
                end_col_offset=31),
              lineno=64,
              col_offset=8,
              end_lineno=64,
              end_col_offset=31)],
          [
            Assign(
              [
                Name(
                  'word',
                  Store(),
                  lineno=66,
                  col_offset=8,
                  end_lineno=66,
                  end_col_offset=12)],
              BinOp(
                Name(
                  'word',
                  Load(),
                  lineno=66,
                  col_offset=15,
                  end_lineno=66,
                  end_col_offset=19),
                Add(),
                Constant(
                  'en',
                  lineno=66,
                  col_offset=22,
                  end_lineno=66,
                  end_col_offset=26),
                lineno=66,
                col_offset=15,
                end_lineno=66,
                end_col_offset=26),
              lineno=66,
              col_offset=8,
              end_lineno=66,
              end_col_offset=26)],
          lineno=63,
          col_offset=4,
          end_lineno=66,
          end_col_offset=26),
        Return(
          Name(
            'word',
            Load(),
            lineno=68,
            col_offset=11,
            end_lineno=68,
            end_col_offset=15),
          lineno=68,
          col_offset=4,
          end_lineno=68,
          end_col_offset=15)],
      [],
      lineno=51,
      col_offset=0,
      end_lineno=68,
      end_col_offset=15)],
  [])

# BEGIN TREE AFTER
Module(
  [
    FunctionDef(
      'placeholder_0',
      arguments(
        [],
        [
          arg(
            'placeholder_1',
            lineno=4,
            col_offset=18,
            end_lineno=4,
            end_col_offset=22)],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      [
        Return(
          BinOp(
            Constant(
              'un',
              lineno=11,
              col_offset=11,
              end_lineno=11,
              end_col_offset=15),
            Add(),
            Name(
              'placeholder_1',
              Load(),
              lineno=11,
              col_offset=18,
              end_lineno=11,
              end_col_offset=22),
            lineno=11,
            col_offset=11,
            end_lineno=11,
            end_col_offset=22),
          lineno=11,
          col_offset=4,
          end_lineno=11,
          end_col_offset=22)],
      [],
      lineno=4,
      col_offset=0,
      end_lineno=11,
      end_col_offset=22),
    FunctionDef(
      'placeholder_2',
      arguments(
        [],
        [
          arg(
            'placeholder_3',
            lineno=14,
            col_offset=21,
            end_lineno=14,
            end_col_offset=32)],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      [
        Assign(
          [
            Name(
              'placeholder_4',
              Store(),
              lineno=29,
              col_offset=4,
              end_lineno=29,
              end_col_offset=10)],
          Subscript(
            Name(
              'placeholder_3',
              Load(),
              lineno=29,
              col_offset=13,
              end_lineno=29,
              end_col_offset=24),
            Constant(
              0,
              lineno=29,
              col_offset=25,
              end_lineno=29,
              end_col_offset=26),
            Load(),
            lineno=29,
            col_offset=13,
            end_lineno=29,
            end_col_offset=27),
          lineno=29,
          col_offset=4,
          end_lineno=29,
          end_col_offset=27),
        Assign(
          [
            Name(
              'placeholder_5',
              Store(),
              lineno=30,
              col_offset=4,
              end_lineno=30,
              end_col_offset=10)],
          BinOp(
            Constant(
              ' :: ',
              lineno=30,
              col_offset=13,
              end_lineno=30,
              end_col_offset=19),
            Add(),
            Name(
              'placeholder_4',
              Load(),
              lineno=30,
              col_offset=22,
              end_lineno=30,
              end_col_offset=28),
            lineno=30,
            col_offset=13,
            end_lineno=30,
            end_col_offset=28),
          lineno=30,
          col_offset=4,
          end_lineno=30,
          end_col_offset=28),
        Return(
          Call(
            Attribute(
              Name(
                'placeholder_5',
                Load(),
                lineno=32,
                col_offset=11,
                end_lineno=32,
                end_col_offset=17),
              'join',
              Load(),
              lineno=32,
              col_offset=11,
              end_lineno=32,
              end_col_offset=22),
            [
              Name(
                'placeholder_3',
                Load(),
                lineno=32,
                col_offset=23,
                end_lineno=32,
                end_col_offset=34)],
            [],
            lineno=32,
            col_offset=11,
            end_lineno=32,
            end_col_offset=35),
          lineno=32,
          col_offset=4,
          end_lineno=32,
          end_col_offset=35)],
      [],
      lineno=14,
      col_offset=0,
      end_lineno=32,
      end_col_offset=35),
    FunctionDef(
      'placeholder_6',
      arguments(
        [],
        [
          arg(
            'placeholder_1',
            lineno=35,
            col_offset=23,
            end_lineno=35,
            end_col_offset=27)],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      [
        Assign(
          [
            Name(
              'placeholder_1',
              Store(),
              lineno=44,
              col_offset=4,
              end_lineno=44,
              end_col_offset=8)],
          Subscript(
            Name(
              'placeholder_1',
              Load(),
              lineno=44,
              col_offset=11,
              end_lineno=44,
              end_col_offset=15),
            Slice(
              upper=UnaryOp(
                USub(),
                Constant(
                  4,
                  lineno=44,
                  col_offset=18,
                  end_lineno=44,
                  end_col_offset=19),
                lineno=44,
                col_offset=17,
                end_lineno=44,
                end_col_offset=19),
              lineno=44,
              col_offset=16,
              end_lineno=44,
              end_col_offset=19),
            Load(),
            lineno=44,
            col_offset=11,
            end_lineno=44,
            end_col_offset=20),
          lineno=44,
          col_offset=4,
          end_lineno=44,
          end_col_offset=20),
        If(
          Compare(
            Subscript(
              Name(
                'placeholder_1',
                Load(),
                lineno=45,
                col_offset=7,
                end_lineno=45,
                end_col_offset=11),
              UnaryOp(
                USub(),
                Constant(
                  1,
                  lineno=45,
                  col_offset=13,
                  end_lineno=45,
                  end_col_offset=14),
                lineno=45,
                col_offset=12,
                end_lineno=45,
                end_col_offset=14),
              Load(),
              lineno=45,
              col_offset=7,
              end_lineno=45,
              end_col_offset=15),
            [
              Eq()],
            [
              Constant(
                'i',
                lineno=45,
                col_offset=19,
                end_lineno=45,
                end_col_offset=22)],
            lineno=45,
            col_offset=7,
            end_lineno=45,
            end_col_offset=22),
          [
            Assign(
              [
                Name(
                  'placeholder_1',
                  Store(),
                  lineno=46,
                  col_offset=8,
                  end_lineno=46,
                  end_col_offset=12)],
              BinOp(
                Subscript(
                  Name(
                    'placeholder_1',
                    Load(),
                    lineno=46,
                    col_offset=15,
                    end_lineno=46,
                    end_col_offset=19),
                  Slice(
                    upper=UnaryOp(
                      USub(),
                      Constant(
                        1,
                        lineno=46,
                        col_offset=22,
                        end_lineno=46,
                        end_col_offset=23),
                      lineno=46,
                      col_offset=21,
                      end_lineno=46,
                      end_col_offset=23),
                    lineno=46,
                    col_offset=20,
                    end_lineno=46,
                    end_col_offset=23),
                  Load(),
                  lineno=46,
                  col_offset=15,
                  end_lineno=46,
                  end_col_offset=24),
                Add(),
                Constant(
                  'y',
                  lineno=46,
                  col_offset=27,
                  end_lineno=46,
                  end_col_offset=30),
                lineno=46,
                col_offset=15,
                end_lineno=46,
                end_col_offset=30),
              lineno=46,
              col_offset=8,
              end_lineno=46,
              end_col_offset=30)],
          [],
          lineno=45,
          col_offset=4,
          end_lineno=46,
          end_col_offset=30),
        Return(
          Name(
            'placeholder_1',
            Load(),
            lineno=48,
            col_offset=11,
            end_lineno=48,
            end_col_offset=15),
          lineno=48,
          col_offset=4,
          end_lineno=48,
          end_col_offset=15)],
      [],
      lineno=35,
      col_offset=0,
      end_lineno=48,
      end_col_offset=15),
    FunctionDef(
      'placeholder_7',
      arguments(
        [],
        [
          arg(
            'placeholder_8',
            lineno=51,
            col_offset=22,
            end_lineno=51,
            end_col_offset=30),
          arg(
            'placeholder_9',
            lineno=51,
            col_offset=32,
            end_lineno=51,
            end_col_offset=37)],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      [
        Assign(
          [
            Name(
              'placeholder_1',
              Store(),
              lineno=61,
              col_offset=4,
              end_lineno=61,
              end_col_offset=8)],
          Subscript(
            Call(
              Attribute(
                Name(
                  'placeholder_8',
                  Load(),
                  lineno=61,
                  col_offset=11,
                  end_lineno=61,
                  end_col_offset=19),
                'split',
                Load(),
                lineno=61,
                col_offset=11,
                end_lineno=61,
                end_col_offset=25),
              [],
              [],
              lineno=61,
              col_offset=11,
              end_lineno=61,
              end_col_offset=27),
            Name(
              'placeholder_9',
              Load(),
              lineno=61,
              col_offset=28,
              end_lineno=61,
              end_col_offset=33),
            Load(),
            lineno=61,
            col_offset=11,
            end_lineno=61,
            end_col_offset=34),
          lineno=61,
          col_offset=4,
          end_lineno=61,
          end_col_offset=34),
        If(
          Compare(
            Subscript(
              Name(
                'placeholder_1',
                Load(),
                lineno=63,
                col_offset=7,
                end_lineno=63,
                end_col_offset=11),
              UnaryOp(
                USub(),
                Constant(
                  1,
                  lineno=63,
                  col_offset=13,
                  end_lineno=63,
                  end_col_offset=14),
                lineno=63,
                col_offset=12,
                end_lineno=63,
                end_col_offset=14),
              Load(),
              lineno=63,
              col_offset=7,
              end_lineno=63,
              end_col_offset=15),
            [
              Eq()],
            [
              Constant(
                '.',
                lineno=63,
                col_offset=19,
                end_lineno=63,
                end_col_offset=22)],
            lineno=63,
            col_offset=7,
            end_lineno=63,
            end_col_offset=22),
          [
            Assign(
              [
                Name(
                  'placeholder_1',
                  Store(),
                  lineno=64,
                  col_offset=8,
                  end_lineno=64,
                  end_col_offset=12)],
              BinOp(
                Subscript(
                  Name(
                    'placeholder_1',
                    Load(),
                    lineno=64,
                    col_offset=15,
                    end_lineno=64,
                    end_col_offset=19),
                  Slice(
                    upper=UnaryOp(
                      USub(),
                      Constant(
                        1,
                        lineno=64,
                        col_offset=22,
                        end_lineno=64,
                        end_col_offset=23),
                      lineno=64,
                      col_offset=21,
                      end_lineno=64,
                      end_col_offset=23),
                    lineno=64,
                    col_offset=20,
                    end_lineno=64,
                    end_col_offset=23),
                  Load(),
                  lineno=64,
                  col_offset=15,
                  end_lineno=64,
                  end_col_offset=24),
                Add(),
                Constant(
                  'en',
                  lineno=64,
                  col_offset=27,
                  end_lineno=64,
                  end_col_offset=31),
                lineno=64,
                col_offset=15,
                end_lineno=64,
                end_col_offset=31),
              lineno=64,
              col_offset=8,
              end_lineno=64,
              end_col_offset=31)],
          [
            Assign(
              [
                Name(
                  'placeholder_1',
                  Store(),
                  lineno=66,
                  col_offset=8,
                  end_lineno=66,
                  end_col_offset=12)],
              BinOp(
                Name(
                  'placeholder_1',
                  Load(),
                  lineno=66,
                  col_offset=15,
                  end_lineno=66,
                  end_col_offset=19),
                Add(),
                Constant(
                  'en',
                  lineno=66,
                  col_offset=22,
                  end_lineno=66,
                  end_col_offset=26),
                lineno=66,
                col_offset=15,
                end_lineno=66,
                end_col_offset=26),
              lineno=66,
              col_offset=8,
              end_lineno=66,
              end_col_offset=26)],
          lineno=63,
          col_offset=4,
          end_lineno=66,
          end_col_offset=26),
        Return(
          Name(
            'placeholder_1',
            Load(),
            lineno=68,
            col_offset=11,
            end_lineno=68,
            end_col_offset=15),
          lineno=68,
          col_offset=4,
          end_lineno=68,
          end_col_offset=15)],
      [],
      lineno=51,
      col_offset=0,
      end_lineno=68,
      end_col_offset=15)],
  [])

# BEGIN NORMALIZED CODE AFTER
def placeholder_0(placeholder_1):
    return "un" + placeholder_1


def placeholder_2(placeholder_3):
    placeholder_4 = placeholder_3[0]
    placeholder_5 = " :: " + placeholder_4
    return placeholder_5.join(placeholder_3)


def placeholder_6(placeholder_1):
    placeholder_1 = placeholder_1[:-4]
    if placeholder_1[-1] == "i":
        placeholder_1 = placeholder_1[:-1] + "y"
    return placeholder_1


def placeholder_7(placeholder_8, placeholder_9):
    placeholder_1 = placeholder_8.split()[placeholder_9]
    if placeholder_1[-1] == ".":
        placeholder_1 = placeholder_1[:-1] + "en"
    else:
        placeholder_1 = placeholder_1 + "en"
    return placeholder_1
