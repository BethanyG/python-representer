## BEGIN NORMALIZED CODE ##
def placeholder_0(placeholder_1, placeholder_2):
    return placeholder_1 and placeholder_2


def placeholder_3(placeholder_4, placeholder_5):
    return placeholder_4 or placeholder_5


def placeholder_6(placeholder_1, placeholder_2):
    return not placeholder_1 and placeholder_2


def placeholder_7(placeholder_8, placeholder_1, placeholder_2):
    return placeholder_8 and (not placeholder_6(placeholder_1, placeholder_2))

## END NORMALIZED CODE ##

## BEGIN TREE BEFORE ##
Module(
  [
    Expr(
      Constant(
        'Functions for implementing the rules of the classic arcade game Pac-Man.',
        lineno=1,
        col_offset=0,
        end_lineno=1,
        end_col_offset=78),
      lineno=1,
      col_offset=0,
      end_lineno=1,
      end_col_offset=78),
    FunctionDef(
      'eat_ghost',
      arguments(
        [],
        [
          arg(
            'power_pellet_active',
            lineno=4,
            col_offset=14,
            end_lineno=4,
            end_col_offset=33),
          arg(
            'touching_ghost',
            lineno=4,
            col_offset=35,
            end_lineno=4,
            end_col_offset=49)],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      [
        Expr(
          Constant(
            'Verify that Pac-Man can eat a ghost if he is empowered by a power pellet.\n\n    :param power_pellet_active: bool - does the player have an active power pellet?\n    :param touching_ghost: bool - is the player touching a ghost?\n    :return: bool - can the ghost be eaten?\n    ',
            lineno=5,
            col_offset=4,
            end_lineno=10,
            end_col_offset=7),
          lineno=5,
          col_offset=4,
          end_lineno=10,
          end_col_offset=7),
        Return(
          BoolOp(
            And(),
            [
              Name(
                'power_pellet_active',
                Load(),
                lineno=12,
                col_offset=11,
                end_lineno=12,
                end_col_offset=30),
              Name(
                'touching_ghost',
                Load(),
                lineno=12,
                col_offset=35,
                end_lineno=12,
                end_col_offset=49)],
            lineno=12,
            col_offset=11,
            end_lineno=12,
            end_col_offset=49),
          lineno=12,
          col_offset=4,
          end_lineno=12,
          end_col_offset=49)],
      [],
      lineno=4,
      col_offset=0,
      end_lineno=12,
      end_col_offset=49),
    FunctionDef(
      'score',
      arguments(
        [],
        [
          arg(
            'touching_power_pellet',
            lineno=15,
            col_offset=10,
            end_lineno=15,
            end_col_offset=31),
          arg(
            'touching_dot',
            lineno=15,
            col_offset=33,
            end_lineno=15,
            end_col_offset=45)],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      [
        Expr(
          Constant(
            'Verify that Pac-Man has scored when a power pellet or dot has been eaten.\n\n    :param touching_power_pellet: bool - is the player touching a power pellet?\n    :param touching_dot: bool - is the player touching a dot?\n    :return: bool - has the player scored or not?\n    ',
            lineno=16,
            col_offset=4,
            end_lineno=21,
            end_col_offset=7),
          lineno=16,
          col_offset=4,
          end_lineno=21,
          end_col_offset=7),
        Return(
          BoolOp(
            Or(),
            [
              Name(
                'touching_power_pellet',
                Load(),
                lineno=23,
                col_offset=11,
                end_lineno=23,
                end_col_offset=32),
              Name(
                'touching_dot',
                Load(),
                lineno=23,
                col_offset=36,
                end_lineno=23,
                end_col_offset=48)],
            lineno=23,
            col_offset=11,
            end_lineno=23,
            end_col_offset=48),
          lineno=23,
          col_offset=4,
          end_lineno=23,
          end_col_offset=48)],
      [],
      lineno=15,
      col_offset=0,
      end_lineno=23,
      end_col_offset=48),
    FunctionDef(
      'lose',
      arguments(
        [],
        [
          arg(
            'power_pellet_active',
            lineno=26,
            col_offset=9,
            end_lineno=26,
            end_col_offset=28),
          arg(
            'touching_ghost',
            lineno=26,
            col_offset=30,
            end_lineno=26,
            end_col_offset=44)],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      [
        Expr(
          Constant(
            'Trigger the game loop to end (GAME OVER) when Pac-Man touches a ghost without his power pellet.\n\n    :param power_pellet_active: bool - does the player have an active power pellet?\n    :param touching_ghost: bool - is the player touching a ghost?\n    :return: bool - has the player lost the game?\n    ',
            lineno=27,
            col_offset=4,
            end_lineno=32,
            end_col_offset=7),
          lineno=27,
          col_offset=4,
          end_lineno=32,
          end_col_offset=7),
        Return(
          BoolOp(
            And(),
            [
              UnaryOp(
                Not(),
                Name(
                  'power_pellet_active',
                  Load(),
                  lineno=34,
                  col_offset=15,
                  end_lineno=34,
                  end_col_offset=34),
                lineno=34,
                col_offset=11,
                end_lineno=34,
                end_col_offset=34),
              Name(
                'touching_ghost',
                Load(),
                lineno=34,
                col_offset=39,
                end_lineno=34,
                end_col_offset=53)],
            lineno=34,
            col_offset=11,
            end_lineno=34,
            end_col_offset=53),
          lineno=34,
          col_offset=4,
          end_lineno=34,
          end_col_offset=53)],
      [],
      lineno=26,
      col_offset=0,
      end_lineno=34,
      end_col_offset=53),
    FunctionDef(
      'win',
      arguments(
        [],
        [
          arg(
            'has_eaten_all_dots',
            lineno=37,
            col_offset=8,
            end_lineno=37,
            end_col_offset=26),
          arg(
            'power_pellet_active',
            lineno=37,
            col_offset=28,
            end_lineno=37,
            end_col_offset=47),
          arg(
            'touching_ghost',
            lineno=37,
            col_offset=49,
            end_lineno=37,
            end_col_offset=63)],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      [
        Expr(
          Constant(
            'Trigger the victory event when all dots have been eaten.\n\n    :param has_eaten_all_dots: bool - has the player "eaten" all the dots?\n    :param power_pellet_active: bool - does the player have an active power pellet?\n    :param touching_ghost: bool - is the player touching a ghost?\n    :return: bool - has the player won the game?\n    ',
            lineno=38,
            col_offset=4,
            end_lineno=44,
            end_col_offset=7),
          lineno=38,
          col_offset=4,
          end_lineno=44,
          end_col_offset=7),
        Return(
          BoolOp(
            And(),
            [
              Name(
                'has_eaten_all_dots',
                Load(),
                lineno=46,
                col_offset=11,
                end_lineno=46,
                end_col_offset=29),
              UnaryOp(
                Not(),
                Call(
                  Name(
                    'lose',
                    Load(),
                    lineno=46,
                    col_offset=38,
                    end_lineno=46,
                    end_col_offset=42),
                  [
                    Name(
                      'power_pellet_active',
                      Load(),
                      lineno=46,
                      col_offset=43,
                      end_lineno=46,
                      end_col_offset=62),
                    Name(
                      'touching_ghost',
                      Load(),
                      lineno=46,
                      col_offset=64,
                      end_lineno=46,
                      end_col_offset=78)],
                  [],
                  lineno=46,
                  col_offset=38,
                  end_lineno=46,
                  end_col_offset=79),
                lineno=46,
                col_offset=34,
                end_lineno=46,
                end_col_offset=79)],
            lineno=46,
            col_offset=11,
            end_lineno=46,
            end_col_offset=79),
          lineno=46,
          col_offset=4,
          end_lineno=46,
          end_col_offset=79)],
      [],
      lineno=37,
      col_offset=0,
      end_lineno=46,
      end_col_offset=79)],
  [])
## END TREE BEFORE ##

## BEGIN NORMALIZED TREE ##
Module(
  [
    FunctionDef(
      'placeholder_0',
      arguments(
        [],
        [
          arg(
            'placeholder_1',
            lineno=4,
            col_offset=14,
            end_lineno=4,
            end_col_offset=33),
          arg(
            'placeholder_2',
            lineno=4,
            col_offset=35,
            end_lineno=4,
            end_col_offset=49)],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      [
        Return(
          BoolOp(
            And(),
            [
              Name(
                'placeholder_1',
                Load(),
                lineno=12,
                col_offset=11,
                end_lineno=12,
                end_col_offset=30),
              Name(
                'placeholder_2',
                Load(),
                lineno=12,
                col_offset=35,
                end_lineno=12,
                end_col_offset=49)],
            lineno=12,
            col_offset=11,
            end_lineno=12,
            end_col_offset=49),
          lineno=12,
          col_offset=4,
          end_lineno=12,
          end_col_offset=49)],
      [],
      lineno=4,
      col_offset=0,
      end_lineno=12,
      end_col_offset=49),
    FunctionDef(
      'placeholder_3',
      arguments(
        [],
        [
          arg(
            'placeholder_4',
            lineno=15,
            col_offset=10,
            end_lineno=15,
            end_col_offset=31),
          arg(
            'placeholder_5',
            lineno=15,
            col_offset=33,
            end_lineno=15,
            end_col_offset=45)],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      [
        Return(
          BoolOp(
            Or(),
            [
              Name(
                'placeholder_4',
                Load(),
                lineno=23,
                col_offset=11,
                end_lineno=23,
                end_col_offset=32),
              Name(
                'placeholder_5',
                Load(),
                lineno=23,
                col_offset=36,
                end_lineno=23,
                end_col_offset=48)],
            lineno=23,
            col_offset=11,
            end_lineno=23,
            end_col_offset=48),
          lineno=23,
          col_offset=4,
          end_lineno=23,
          end_col_offset=48)],
      [],
      lineno=15,
      col_offset=0,
      end_lineno=23,
      end_col_offset=48),
    FunctionDef(
      'placeholder_6',
      arguments(
        [],
        [
          arg(
            'placeholder_1',
            lineno=26,
            col_offset=9,
            end_lineno=26,
            end_col_offset=28),
          arg(
            'placeholder_2',
            lineno=26,
            col_offset=30,
            end_lineno=26,
            end_col_offset=44)],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      [
        Return(
          BoolOp(
            And(),
            [
              UnaryOp(
                Not(),
                Name(
                  'placeholder_1',
                  Load(),
                  lineno=34,
                  col_offset=15,
                  end_lineno=34,
                  end_col_offset=34),
                lineno=34,
                col_offset=11,
                end_lineno=34,
                end_col_offset=34),
              Name(
                'placeholder_2',
                Load(),
                lineno=34,
                col_offset=39,
                end_lineno=34,
                end_col_offset=53)],
            lineno=34,
            col_offset=11,
            end_lineno=34,
            end_col_offset=53),
          lineno=34,
          col_offset=4,
          end_lineno=34,
          end_col_offset=53)],
      [],
      lineno=26,
      col_offset=0,
      end_lineno=34,
      end_col_offset=53),
    FunctionDef(
      'placeholder_7',
      arguments(
        [],
        [
          arg(
            'placeholder_8',
            lineno=37,
            col_offset=8,
            end_lineno=37,
            end_col_offset=26),
          arg(
            'placeholder_1',
            lineno=37,
            col_offset=28,
            end_lineno=37,
            end_col_offset=47),
          arg(
            'placeholder_2',
            lineno=37,
            col_offset=49,
            end_lineno=37,
            end_col_offset=63)],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      [
        Return(
          BoolOp(
            And(),
            [
              Name(
                'placeholder_8',
                Load(),
                lineno=46,
                col_offset=11,
                end_lineno=46,
                end_col_offset=29),
              UnaryOp(
                Not(),
                Call(
                  Name(
                    'placeholder_6',
                    Load(),
                    lineno=46,
                    col_offset=38,
                    end_lineno=46,
                    end_col_offset=42),
                  [
                    Name(
                      'placeholder_1',
                      Load(),
                      lineno=46,
                      col_offset=43,
                      end_lineno=46,
                      end_col_offset=62),
                    Name(
                      'placeholder_2',
                      Load(),
                      lineno=46,
                      col_offset=64,
                      end_lineno=46,
                      end_col_offset=78)],
                  [],
                  lineno=46,
                  col_offset=38,
                  end_lineno=46,
                  end_col_offset=79),
                lineno=46,
                col_offset=34,
                end_lineno=46,
                end_col_offset=79)],
            lineno=46,
            col_offset=11,
            end_lineno=46,
            end_col_offset=79),
          lineno=46,
          col_offset=4,
          end_lineno=46,
          end_col_offset=79)],
      [],
      lineno=37,
      col_offset=0,
      end_lineno=46,
      end_col_offset=79)],
  [])
## END NORMALIZED TREE ##