# BEGIN TREE BEFORE
Module(
  [
    Assign(
      [
        Name(
          'EIGHT_BIT_MASK',
          Store(),
          lineno=1,
          col_offset=0,
          end_lineno=1,
          end_col_offset=14)],
      Constant(
        128,
        lineno=1,
        col_offset=17,
        end_lineno=1,
        end_col_offset=21),
      lineno=1,
      col_offset=0,
      end_lineno=1,
      end_col_offset=21),
    Assign(
      [
        Name(
          'SEVEN_BIT_MASK',
          Store(),
          lineno=2,
          col_offset=0,
          end_lineno=2,
          end_col_offset=14)],
      Constant(
        127,
        lineno=2,
        col_offset=17,
        end_lineno=2,
        end_col_offset=21),
      lineno=2,
      col_offset=0,
      end_lineno=2,
      end_col_offset=21),
    FunctionDef(
      'encode_single',
      arguments(
        [],
        [
          arg(
            'number',
            lineno=5,
            col_offset=18,
            end_lineno=5,
            end_col_offset=24)],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      [
        Assign(
          [
            Name(
              'byte_string',
              Store(),
              lineno=6,
              col_offset=4,
              end_lineno=6,
              end_col_offset=15)],
          List(
            [
              BinOp(
                Name(
                  'number',
                  Load(),
                  lineno=6,
                  col_offset=19,
                  end_lineno=6,
                  end_col_offset=25),
                BitAnd(),
                Name(
                  'SEVEN_BIT_MASK',
                  Load(),
                  lineno=6,
                  col_offset=28,
                  end_lineno=6,
                  end_col_offset=42),
                lineno=6,
                col_offset=19,
                end_lineno=6,
                end_col_offset=42)],
            Load(),
            lineno=6,
            col_offset=18,
            end_lineno=6,
            end_col_offset=43),
          lineno=6,
          col_offset=4,
          end_lineno=6,
          end_col_offset=43),
        AugAssign(
          Name(
            'number',
            Store(),
            lineno=7,
            col_offset=4,
            end_lineno=7,
            end_col_offset=10),
          RShift(),
          Constant(
            7,
            lineno=7,
            col_offset=15,
            end_lineno=7,
            end_col_offset=16),
          lineno=7,
          col_offset=4,
          end_lineno=7,
          end_col_offset=16),
        While(
          Compare(
            Name(
              'number',
              Load(),
              lineno=9,
              col_offset=10,
              end_lineno=9,
              end_col_offset=16),
            [
              Gt()],
            [
              Constant(
                0,
                lineno=9,
                col_offset=19,
                end_lineno=9,
                end_col_offset=20)],
            lineno=9,
            col_offset=10,
            end_lineno=9,
            end_col_offset=20),
          [
            Expr(
              Call(
                Attribute(
                  Name(
                    'byte_string',
                    Load(),
                    lineno=10,
                    col_offset=8,
                    end_lineno=10,
                    end_col_offset=19),
                  'append',
                  Load(),
                  lineno=10,
                  col_offset=8,
                  end_lineno=10,
                  end_col_offset=26),
                [
                  BinOp(
                    BinOp(
                      Name(
                        'number',
                        Load(),
                        lineno=10,
                        col_offset=27,
                        end_lineno=10,
                        end_col_offset=33),
                      BitAnd(),
                      Name(
                        'SEVEN_BIT_MASK',
                        Load(),
                        lineno=10,
                        col_offset=36,
                        end_lineno=10,
                        end_col_offset=50),
                      lineno=10,
                      col_offset=27,
                      end_lineno=10,
                      end_col_offset=50),
                    BitOr(),
                    Name(
                      'EIGHT_BIT_MASK',
                      Load(),
                      lineno=10,
                      col_offset=53,
                      end_lineno=10,
                      end_col_offset=67),
                    lineno=10,
                    col_offset=27,
                    end_lineno=10,
                    end_col_offset=67)],
                [],
                lineno=10,
                col_offset=8,
                end_lineno=10,
                end_col_offset=68),
              lineno=10,
              col_offset=8,
              end_lineno=10,
              end_col_offset=68),
            AugAssign(
              Name(
                'number',
                Store(),
                lineno=11,
                col_offset=8,
                end_lineno=11,
                end_col_offset=14),
              RShift(),
              Constant(
                7,
                lineno=11,
                col_offset=19,
                end_lineno=11,
                end_col_offset=20),
              lineno=11,
              col_offset=8,
              end_lineno=11,
              end_col_offset=20)],
          [],
          lineno=9,
          col_offset=4,
          end_lineno=11,
          end_col_offset=20),
        Return(
          Subscript(
            Name(
              'byte_string',
              Load(),
              lineno=13,
              col_offset=11,
              end_lineno=13,
              end_col_offset=22),
            Slice(
              step=UnaryOp(
                USub(),
                Constant(
                  1,
                  lineno=13,
                  col_offset=26,
                  end_lineno=13,
                  end_col_offset=27),
                lineno=13,
                col_offset=25,
                end_lineno=13,
                end_col_offset=27),
              lineno=13,
              col_offset=23,
              end_lineno=13,
              end_col_offset=27),
            Load(),
            lineno=13,
            col_offset=11,
            end_lineno=13,
            end_col_offset=28),
          lineno=13,
          col_offset=4,
          end_lineno=13,
          end_col_offset=28)],
      [],
      lineno=5,
      col_offset=0,
      end_lineno=13,
      end_col_offset=28),
    FunctionDef(
      'encode',
      arguments(
        [],
        [
          arg(
            'numbers',
            lineno=16,
            col_offset=11,
            end_lineno=16,
            end_col_offset=18)],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      [
        Return(
          Call(
            Name(
              'sum',
              Load(),
              lineno=17,
              col_offset=11,
              end_lineno=17,
              end_col_offset=14),
            [
              GeneratorExp(
                Call(
                  Name(
                    'encode_single',
                    Load(),
                    lineno=17,
                    col_offset=16,
                    end_lineno=17,
                    end_col_offset=29),
                  [
                    Name(
                      'number',
                      Load(),
                      lineno=17,
                      col_offset=30,
                      end_lineno=17,
                      end_col_offset=36)],
                  [],
                  lineno=17,
                  col_offset=16,
                  end_lineno=17,
                  end_col_offset=37),
                [
                  comprehension(
                    Name(
                      'number',
                      Store(),
                      lineno=17,
                      col_offset=42,
                      end_lineno=17,
                      end_col_offset=48),
                    Name(
                      'numbers',
                      Load(),
                      lineno=17,
                      col_offset=52,
                      end_lineno=17,
                      end_col_offset=59),
                    [],
                    0)],
                lineno=17,
                col_offset=15,
                end_lineno=17,
                end_col_offset=60),
              List(
                [],
                Load(),
                lineno=17,
                col_offset=62,
                end_lineno=17,
                end_col_offset=64)],
            [],
            lineno=17,
            col_offset=11,
            end_lineno=17,
            end_col_offset=65),
          lineno=17,
          col_offset=4,
          end_lineno=17,
          end_col_offset=65)],
      [],
      lineno=16,
      col_offset=0,
      end_lineno=17,
      end_col_offset=65),
    FunctionDef(
      'decode',
      arguments(
        [],
        [
          arg(
            'byte_string',
            lineno=20,
            col_offset=11,
            end_lineno=20,
            end_col_offset=22)],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      [
        Assign(
          [
            Name(
              'values',
              Store(),
              lineno=21,
              col_offset=4,
              end_lineno=21,
              end_col_offset=10)],
          List(
            [],
            Load(),
            lineno=21,
            col_offset=13,
            end_lineno=21,
            end_col_offset=15),
          lineno=21,
          col_offset=4,
          end_lineno=21,
          end_col_offset=15),
        Assign(
          [
            Name(
              'number',
              Store(),
              lineno=22,
              col_offset=4,
              end_lineno=22,
              end_col_offset=10)],
          Constant(
            0,
            lineno=22,
            col_offset=13,
            end_lineno=22,
            end_col_offset=14),
          lineno=22,
          col_offset=4,
          end_lineno=22,
          end_col_offset=14),
        For(
          Tuple(
            [
              Name(
                'idx',
                Store(),
                lineno=24,
                col_offset=8,
                end_lineno=24,
                end_col_offset=11),
              Name(
                'byte',
                Store(),
                lineno=24,
                col_offset=13,
                end_lineno=24,
                end_col_offset=17)],
            Store(),
            lineno=24,
            col_offset=8,
            end_lineno=24,
            end_col_offset=17),
          Call(
            Name(
              'enumerate',
              Load(),
              lineno=24,
              col_offset=21,
              end_lineno=24,
              end_col_offset=30),
            [
              Name(
                'byte_string',
                Load(),
                lineno=24,
                col_offset=31,
                end_lineno=24,
                end_col_offset=42)],
            [],
            lineno=24,
            col_offset=21,
            end_lineno=24,
            end_col_offset=43),
          [
            AugAssign(
              Name(
                'number',
                Store(),
                lineno=25,
                col_offset=8,
                end_lineno=25,
                end_col_offset=14),
              LShift(),
              Constant(
                7,
                lineno=25,
                col_offset=19,
                end_lineno=25,
                end_col_offset=20),
              lineno=25,
              col_offset=8,
              end_lineno=25,
              end_col_offset=20),
            AugAssign(
              Name(
                'number',
                Store(),
                lineno=26,
                col_offset=8,
                end_lineno=26,
                end_col_offset=14),
              Add(),
              BinOp(
                Name(
                  'byte',
                  Load(),
                  lineno=26,
                  col_offset=19,
                  end_lineno=26,
                  end_col_offset=23),
                BitAnd(),
                Name(
                  'SEVEN_BIT_MASK',
                  Load(),
                  lineno=26,
                  col_offset=26,
                  end_lineno=26,
                  end_col_offset=40),
                lineno=26,
                col_offset=19,
                end_lineno=26,
                end_col_offset=40),
              lineno=26,
              col_offset=8,
              end_lineno=26,
              end_col_offset=41),
            If(
              Compare(
                BinOp(
                  Name(
                    'byte',
                    Load(),
                    lineno=28,
                    col_offset=11,
                    end_lineno=28,
                    end_col_offset=15),
                  BitAnd(),
                  Name(
                    'EIGHT_BIT_MASK',
                    Load(),
                    lineno=28,
                    col_offset=18,
                    end_lineno=28,
                    end_col_offset=32),
                  lineno=28,
                  col_offset=11,
                  end_lineno=28,
                  end_col_offset=32),
                [
                  Eq()],
                [
                  Constant(
                    0,
                    lineno=28,
                    col_offset=36,
                    end_lineno=28,
                    end_col_offset=37)],
                lineno=28,
                col_offset=11,
                end_lineno=28,
                end_col_offset=37),
              [
                Expr(
                  Call(
                    Attribute(
                      Name(
                        'values',
                        Load(),
                        lineno=29,
                        col_offset=12,
                        end_lineno=29,
                        end_col_offset=18),
                      'append',
                      Load(),
                      lineno=29,
                      col_offset=12,
                      end_lineno=29,
                      end_col_offset=25),
                    [
                      Name(
                        'number',
                        Load(),
                        lineno=29,
                        col_offset=26,
                        end_lineno=29,
                        end_col_offset=32)],
                    [],
                    lineno=29,
                    col_offset=12,
                    end_lineno=29,
                    end_col_offset=33),
                  lineno=29,
                  col_offset=12,
                  end_lineno=29,
                  end_col_offset=33),
                Assign(
                  [
                    Name(
                      'number',
                      Store(),
                      lineno=30,
                      col_offset=12,
                      end_lineno=30,
                      end_col_offset=18)],
                  Constant(
                    0,
                    lineno=30,
                    col_offset=21,
                    end_lineno=30,
                    end_col_offset=22),
                  lineno=30,
                  col_offset=12,
                  end_lineno=30,
                  end_col_offset=22)],
              [
                If(
                  Compare(
                    Name(
                      'idx',
                      Load(),
                      lineno=31,
                      col_offset=13,
                      end_lineno=31,
                      end_col_offset=16),
                    [
                      Eq()],
                    [
                      BinOp(
                        Call(
                          Name(
                            'len',
                            Load(),
                            lineno=31,
                            col_offset=20,
                            end_lineno=31,
                            end_col_offset=23),
                          [
                            Name(
                              'byte_string',
                              Load(),
                              lineno=31,
                              col_offset=24,
                              end_lineno=31,
                              end_col_offset=35)],
                          [],
                          lineno=31,
                          col_offset=20,
                          end_lineno=31,
                          end_col_offset=36),
                        Sub(),
                        Constant(
                          1,
                          lineno=31,
                          col_offset=39,
                          end_lineno=31,
                          end_col_offset=40),
                        lineno=31,
                        col_offset=20,
                        end_lineno=31,
                        end_col_offset=40)],
                    lineno=31,
                    col_offset=13,
                    end_lineno=31,
                    end_col_offset=40),
                  [
                    Raise(
                      Call(
                        Name(
                          'ValueError',
                          Load(),
                          lineno=32,
                          col_offset=18,
                          end_lineno=32,
                          end_col_offset=28),
                        [
                          Constant(
                            'incomplete sequence',
                            lineno=32,
                            col_offset=29,
                            end_lineno=32,
                            end_col_offset=50)],
                        [],
                        lineno=32,
                        col_offset=18,
                        end_lineno=32,
                        end_col_offset=51),
                      lineno=32,
                      col_offset=12,
                      end_lineno=32,
                      end_col_offset=51)],
                  [],
                  lineno=31,
                  col_offset=8,
                  end_lineno=32,
                  end_col_offset=51)],
              lineno=28,
              col_offset=8,
              end_lineno=32,
              end_col_offset=51)],
          [],
          lineno=24,
          col_offset=4,
          end_lineno=32,
          end_col_offset=51),
        Return(
          Name(
            'values',
            Load(),
            lineno=34,
            col_offset=11,
            end_lineno=34,
            end_col_offset=17),
          lineno=34,
          col_offset=4,
          end_lineno=34,
          end_col_offset=17)],
      [],
      lineno=20,
      col_offset=0,
      end_lineno=34,
      end_col_offset=17)],
  [])

# BEGIN TREE AFTER
Module(
  [
    Assign(
      [
        Name(
          'placeholder_0',
          Store(),
          lineno=1,
          col_offset=0,
          end_lineno=1,
          end_col_offset=14)],
      Constant(
        128,
        lineno=1,
        col_offset=17,
        end_lineno=1,
        end_col_offset=21),
      lineno=1,
      col_offset=0,
      end_lineno=1,
      end_col_offset=21),
    Assign(
      [
        Name(
          'placeholder_1',
          Store(),
          lineno=2,
          col_offset=0,
          end_lineno=2,
          end_col_offset=14)],
      Constant(
        127,
        lineno=2,
        col_offset=17,
        end_lineno=2,
        end_col_offset=21),
      lineno=2,
      col_offset=0,
      end_lineno=2,
      end_col_offset=21),
    FunctionDef(
      'placeholder_2',
      arguments(
        [],
        [
          arg(
            'placeholder_3',
            lineno=5,
            col_offset=18,
            end_lineno=5,
            end_col_offset=24)],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      [
        Assign(
          [
            Name(
              'placeholder_4',
              Store(),
              lineno=6,
              col_offset=4,
              end_lineno=6,
              end_col_offset=15)],
          List(
            [
              BinOp(
                Name(
                  'placeholder_3',
                  Load(),
                  lineno=6,
                  col_offset=19,
                  end_lineno=6,
                  end_col_offset=25),
                BitAnd(),
                Name(
                  'placeholder_1',
                  Load(),
                  lineno=6,
                  col_offset=28,
                  end_lineno=6,
                  end_col_offset=42),
                lineno=6,
                col_offset=19,
                end_lineno=6,
                end_col_offset=42)],
            Load(),
            lineno=6,
            col_offset=18,
            end_lineno=6,
            end_col_offset=43),
          lineno=6,
          col_offset=4,
          end_lineno=6,
          end_col_offset=43),
        AugAssign(
          Name(
            'placeholder_3',
            Store(),
            lineno=7,
            col_offset=4,
            end_lineno=7,
            end_col_offset=10),
          RShift(),
          Constant(
            7,
            lineno=7,
            col_offset=15,
            end_lineno=7,
            end_col_offset=16),
          lineno=7,
          col_offset=4,
          end_lineno=7,
          end_col_offset=16),
        While(
          Compare(
            Name(
              'placeholder_3',
              Load(),
              lineno=9,
              col_offset=10,
              end_lineno=9,
              end_col_offset=16),
            [
              Gt()],
            [
              Constant(
                0,
                lineno=9,
                col_offset=19,
                end_lineno=9,
                end_col_offset=20)],
            lineno=9,
            col_offset=10,
            end_lineno=9,
            end_col_offset=20),
          [
            Expr(
              Call(
                Attribute(
                  Name(
                    'placeholder_4',
                    Load(),
                    lineno=10,
                    col_offset=8,
                    end_lineno=10,
                    end_col_offset=19),
                  'append',
                  Load(),
                  lineno=10,
                  col_offset=8,
                  end_lineno=10,
                  end_col_offset=26),
                [
                  BinOp(
                    BinOp(
                      Name(
                        'placeholder_3',
                        Load(),
                        lineno=10,
                        col_offset=27,
                        end_lineno=10,
                        end_col_offset=33),
                      BitAnd(),
                      Name(
                        'placeholder_1',
                        Load(),
                        lineno=10,
                        col_offset=36,
                        end_lineno=10,
                        end_col_offset=50),
                      lineno=10,
                      col_offset=27,
                      end_lineno=10,
                      end_col_offset=50),
                    BitOr(),
                    Name(
                      'placeholder_0',
                      Load(),
                      lineno=10,
                      col_offset=53,
                      end_lineno=10,
                      end_col_offset=67),
                    lineno=10,
                    col_offset=27,
                    end_lineno=10,
                    end_col_offset=67)],
                [],
                lineno=10,
                col_offset=8,
                end_lineno=10,
                end_col_offset=68),
              lineno=10,
              col_offset=8,
              end_lineno=10,
              end_col_offset=68),
            AugAssign(
              Name(
                'placeholder_3',
                Store(),
                lineno=11,
                col_offset=8,
                end_lineno=11,
                end_col_offset=14),
              RShift(),
              Constant(
                7,
                lineno=11,
                col_offset=19,
                end_lineno=11,
                end_col_offset=20),
              lineno=11,
              col_offset=8,
              end_lineno=11,
              end_col_offset=20)],
          [],
          lineno=9,
          col_offset=4,
          end_lineno=11,
          end_col_offset=20),
        Return(
          Subscript(
            Name(
              'placeholder_4',
              Load(),
              lineno=13,
              col_offset=11,
              end_lineno=13,
              end_col_offset=22),
            Slice(
              step=UnaryOp(
                USub(),
                Constant(
                  1,
                  lineno=13,
                  col_offset=26,
                  end_lineno=13,
                  end_col_offset=27),
                lineno=13,
                col_offset=25,
                end_lineno=13,
                end_col_offset=27),
              lineno=13,
              col_offset=23,
              end_lineno=13,
              end_col_offset=27),
            Load(),
            lineno=13,
            col_offset=11,
            end_lineno=13,
            end_col_offset=28),
          lineno=13,
          col_offset=4,
          end_lineno=13,
          end_col_offset=28)],
      [],
      lineno=5,
      col_offset=0,
      end_lineno=13,
      end_col_offset=28),
    FunctionDef(
      'placeholder_5',
      arguments(
        [],
        [
          arg(
            'placeholder_6',
            lineno=16,
            col_offset=11,
            end_lineno=16,
            end_col_offset=18)],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      [
        Return(
          Call(
            Name(
              'sum',
              Load(),
              lineno=17,
              col_offset=11,
              end_lineno=17,
              end_col_offset=14),
            [
              GeneratorExp(
                Call(
                  Name(
                    'placeholder_2',
                    Load(),
                    lineno=17,
                    col_offset=16,
                    end_lineno=17,
                    end_col_offset=29),
                  [
                    Name(
                      'placeholder_3',
                      Load(),
                      lineno=17,
                      col_offset=30,
                      end_lineno=17,
                      end_col_offset=36)],
                  [],
                  lineno=17,
                  col_offset=16,
                  end_lineno=17,
                  end_col_offset=37),
                [
                  comprehension(
                    Name(
                      'placeholder_3',
                      Store(),
                      lineno=17,
                      col_offset=42,
                      end_lineno=17,
                      end_col_offset=48),
                    Name(
                      'placeholder_6',
                      Load(),
                      lineno=17,
                      col_offset=52,
                      end_lineno=17,
                      end_col_offset=59),
                    [],
                    0)],
                lineno=17,
                col_offset=15,
                end_lineno=17,
                end_col_offset=60),
              List(
                [],
                Load(),
                lineno=17,
                col_offset=62,
                end_lineno=17,
                end_col_offset=64)],
            [],
            lineno=17,
            col_offset=11,
            end_lineno=17,
            end_col_offset=65),
          lineno=17,
          col_offset=4,
          end_lineno=17,
          end_col_offset=65)],
      [],
      lineno=16,
      col_offset=0,
      end_lineno=17,
      end_col_offset=65),
    FunctionDef(
      'placeholder_7',
      arguments(
        [],
        [
          arg(
            'placeholder_4',
            lineno=20,
            col_offset=11,
            end_lineno=20,
            end_col_offset=22)],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      [
        Assign(
          [
            Name(
              'placeholder_8',
              Store(),
              lineno=21,
              col_offset=4,
              end_lineno=21,
              end_col_offset=10)],
          List(
            [],
            Load(),
            lineno=21,
            col_offset=13,
            end_lineno=21,
            end_col_offset=15),
          lineno=21,
          col_offset=4,
          end_lineno=21,
          end_col_offset=15),
        Assign(
          [
            Name(
              'placeholder_3',
              Store(),
              lineno=22,
              col_offset=4,
              end_lineno=22,
              end_col_offset=10)],
          Constant(
            0,
            lineno=22,
            col_offset=13,
            end_lineno=22,
            end_col_offset=14),
          lineno=22,
          col_offset=4,
          end_lineno=22,
          end_col_offset=14),
        For(
          Tuple(
            [
              Name(
                'placeholder_9',
                Store(),
                lineno=24,
                col_offset=8,
                end_lineno=24,
                end_col_offset=11),
              Name(
                'placeholder_10',
                Store(),
                lineno=24,
                col_offset=13,
                end_lineno=24,
                end_col_offset=17)],
            Store(),
            lineno=24,
            col_offset=8,
            end_lineno=24,
            end_col_offset=17),
          Call(
            Name(
              'enumerate',
              Load(),
              lineno=24,
              col_offset=21,
              end_lineno=24,
              end_col_offset=30),
            [
              Name(
                'placeholder_4',
                Load(),
                lineno=24,
                col_offset=31,
                end_lineno=24,
                end_col_offset=42)],
            [],
            lineno=24,
            col_offset=21,
            end_lineno=24,
            end_col_offset=43),
          [
            AugAssign(
              Name(
                'placeholder_3',
                Store(),
                lineno=25,
                col_offset=8,
                end_lineno=25,
                end_col_offset=14),
              LShift(),
              Constant(
                7,
                lineno=25,
                col_offset=19,
                end_lineno=25,
                end_col_offset=20),
              lineno=25,
              col_offset=8,
              end_lineno=25,
              end_col_offset=20),
            AugAssign(
              Name(
                'placeholder_3',
                Store(),
                lineno=26,
                col_offset=8,
                end_lineno=26,
                end_col_offset=14),
              Add(),
              BinOp(
                Name(
                  'placeholder_10',
                  Load(),
                  lineno=26,
                  col_offset=19,
                  end_lineno=26,
                  end_col_offset=23),
                BitAnd(),
                Name(
                  'placeholder_1',
                  Load(),
                  lineno=26,
                  col_offset=26,
                  end_lineno=26,
                  end_col_offset=40),
                lineno=26,
                col_offset=19,
                end_lineno=26,
                end_col_offset=40),
              lineno=26,
              col_offset=8,
              end_lineno=26,
              end_col_offset=41),
            If(
              Compare(
                BinOp(
                  Name(
                    'placeholder_10',
                    Load(),
                    lineno=28,
                    col_offset=11,
                    end_lineno=28,
                    end_col_offset=15),
                  BitAnd(),
                  Name(
                    'placeholder_0',
                    Load(),
                    lineno=28,
                    col_offset=18,
                    end_lineno=28,
                    end_col_offset=32),
                  lineno=28,
                  col_offset=11,
                  end_lineno=28,
                  end_col_offset=32),
                [
                  Eq()],
                [
                  Constant(
                    0,
                    lineno=28,
                    col_offset=36,
                    end_lineno=28,
                    end_col_offset=37)],
                lineno=28,
                col_offset=11,
                end_lineno=28,
                end_col_offset=37),
              [
                Expr(
                  Call(
                    Attribute(
                      Name(
                        'placeholder_8',
                        Load(),
                        lineno=29,
                        col_offset=12,
                        end_lineno=29,
                        end_col_offset=18),
                      'append',
                      Load(),
                      lineno=29,
                      col_offset=12,
                      end_lineno=29,
                      end_col_offset=25),
                    [
                      Name(
                        'placeholder_3',
                        Load(),
                        lineno=29,
                        col_offset=26,
                        end_lineno=29,
                        end_col_offset=32)],
                    [],
                    lineno=29,
                    col_offset=12,
                    end_lineno=29,
                    end_col_offset=33),
                  lineno=29,
                  col_offset=12,
                  end_lineno=29,
                  end_col_offset=33),
                Assign(
                  [
                    Name(
                      'placeholder_3',
                      Store(),
                      lineno=30,
                      col_offset=12,
                      end_lineno=30,
                      end_col_offset=18)],
                  Constant(
                    0,
                    lineno=30,
                    col_offset=21,
                    end_lineno=30,
                    end_col_offset=22),
                  lineno=30,
                  col_offset=12,
                  end_lineno=30,
                  end_col_offset=22)],
              [
                If(
                  Compare(
                    Name(
                      'placeholder_9',
                      Load(),
                      lineno=31,
                      col_offset=13,
                      end_lineno=31,
                      end_col_offset=16),
                    [
                      Eq()],
                    [
                      BinOp(
                        Call(
                          Name(
                            'len',
                            Load(),
                            lineno=31,
                            col_offset=20,
                            end_lineno=31,
                            end_col_offset=23),
                          [
                            Name(
                              'placeholder_4',
                              Load(),
                              lineno=31,
                              col_offset=24,
                              end_lineno=31,
                              end_col_offset=35)],
                          [],
                          lineno=31,
                          col_offset=20,
                          end_lineno=31,
                          end_col_offset=36),
                        Sub(),
                        Constant(
                          1,
                          lineno=31,
                          col_offset=39,
                          end_lineno=31,
                          end_col_offset=40),
                        lineno=31,
                        col_offset=20,
                        end_lineno=31,
                        end_col_offset=40)],
                    lineno=31,
                    col_offset=13,
                    end_lineno=31,
                    end_col_offset=40),
                  [
                    Raise(
                      Call(
                        Name(
                          'ValueError',
                          Load(),
                          lineno=32,
                          col_offset=18,
                          end_lineno=32,
                          end_col_offset=28),
                        [
                          Constant(
                            'incomplete sequence',
                            lineno=32,
                            col_offset=29,
                            end_lineno=32,
                            end_col_offset=50)],
                        [],
                        lineno=32,
                        col_offset=18,
                        end_lineno=32,
                        end_col_offset=51),
                      lineno=32,
                      col_offset=12,
                      end_lineno=32,
                      end_col_offset=51)],
                  [],
                  lineno=31,
                  col_offset=8,
                  end_lineno=32,
                  end_col_offset=51)],
              lineno=28,
              col_offset=8,
              end_lineno=32,
              end_col_offset=51)],
          [],
          lineno=24,
          col_offset=4,
          end_lineno=32,
          end_col_offset=51),
        Return(
          Name(
            'placeholder_8',
            Load(),
            lineno=34,
            col_offset=11,
            end_lineno=34,
            end_col_offset=17),
          lineno=34,
          col_offset=4,
          end_lineno=34,
          end_col_offset=17)],
      [],
      lineno=20,
      col_offset=0,
      end_lineno=34,
      end_col_offset=17)],
  [])

# BEGIN NORMALIZED CODE AFTER
placeholder_0 = 128
placeholder_1 = 127


def placeholder_2(placeholder_3):
    placeholder_4 = [placeholder_3 & placeholder_1]
    placeholder_3 >>= 7
    while placeholder_3 > 0:
        placeholder_4.append(placeholder_3 & placeholder_1 | placeholder_0)
        placeholder_3 >>= 7
    return placeholder_4[::-1]


def placeholder_5(placeholder_6):
    return sum((placeholder_2(placeholder_3) for placeholder_3 in placeholder_6), [])


def placeholder_7(placeholder_4):
    placeholder_8 = []
    placeholder_3 = 0
    for placeholder_9, placeholder_10 in enumerate(placeholder_4):
        placeholder_3 <<= 7
        placeholder_3 += placeholder_10 & placeholder_1
        if placeholder_10 & placeholder_0 == 0:
            placeholder_8.append(placeholder_3)
            placeholder_3 = 0
        elif placeholder_9 == len(placeholder_4) - 1:
            raise ValueError("incomplete sequence")
    return placeholder_8
