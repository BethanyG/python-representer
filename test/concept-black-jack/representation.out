# BEGIN TREE BEFORE
Module(
  [
    Expr(
      Constant(
        'Functions to help play and score a game of blackjack.\n\nHow to play blackjack:    https://bicyclecards.com/how-to-play/blackjack/\n"Standard" playing cards: https://en.wikipedia.org/wiki/Standard_52-card_deck\n',
        lineno=1,
        col_offset=0,
        end_lineno=5,
        end_col_offset=3),
      lineno=1,
      col_offset=0,
      end_lineno=5,
      end_col_offset=3),
    FunctionDef(
      'value_of_card',
      arguments(
        [],
        [
          arg(
            'card',
            lineno=8,
            col_offset=18,
            end_lineno=8,
            end_col_offset=22)],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      [
        Expr(
          Constant(
            'Determine the scoring value of a card.\n\n    :param card: str - given card.\n    :return: int - value of a given card.  See below for values.\n\n    1.  \'J\', \'Q\', or \'K\' (otherwise known as "face cards") = 10\n    2.  \'A\' (ace card) = 1\n    3.  \'2\' - \'10\' = numerical value.\n    ',
            lineno=9,
            col_offset=4,
            end_lineno=17,
            end_col_offset=7),
          lineno=9,
          col_offset=4,
          end_lineno=17,
          end_col_offset=7),
        If(
          Compare(
            Name(
              'card',
              Load(),
              lineno=19,
              col_offset=7,
              end_lineno=19,
              end_col_offset=11),
            [
              In()],
            [
              Constant(
                'JQK',
                lineno=19,
                col_offset=16,
                end_lineno=19,
                end_col_offset=21)],
            lineno=19,
            col_offset=7,
            end_lineno=19,
            end_col_offset=22),
          [
            Assign(
              [
                Name(
                  'value',
                  Store(),
                  lineno=20,
                  col_offset=8,
                  end_lineno=20,
                  end_col_offset=13)],
              Constant(
                10,
                lineno=20,
                col_offset=16,
                end_lineno=20,
                end_col_offset=18),
              lineno=20,
              col_offset=8,
              end_lineno=20,
              end_col_offset=18)],
          [
            If(
              Compare(
                Name(
                  'card',
                  Load(),
                  lineno=22,
                  col_offset=9,
                  end_lineno=22,
                  end_col_offset=13),
                [
                  Eq()],
                [
                  Constant(
                    'A',
                    lineno=22,
                    col_offset=17,
                    end_lineno=22,
                    end_col_offset=20)],
                lineno=22,
                col_offset=9,
                end_lineno=22,
                end_col_offset=20),
              [
                Assign(
                  [
                    Name(
                      'value',
                      Store(),
                      lineno=23,
                      col_offset=8,
                      end_lineno=23,
                      end_col_offset=13)],
                  Constant(
                    1,
                    lineno=23,
                    col_offset=16,
                    end_lineno=23,
                    end_col_offset=17),
                  lineno=23,
                  col_offset=8,
                  end_lineno=23,
                  end_col_offset=17)],
              [
                Assign(
                  [
                    Name(
                      'value',
                      Store(),
                      lineno=26,
                      col_offset=8,
                      end_lineno=26,
                      end_col_offset=13)],
                  Call(
                    Name(
                      'int',
                      Load(),
                      lineno=26,
                      col_offset=16,
                      end_lineno=26,
                      end_col_offset=19),
                    [
                      Name(
                        'card',
                        Load(),
                        lineno=26,
                        col_offset=20,
                        end_lineno=26,
                        end_col_offset=24)],
                    [],
                    lineno=26,
                    col_offset=16,
                    end_lineno=26,
                    end_col_offset=25),
                  lineno=26,
                  col_offset=8,
                  end_lineno=26,
                  end_col_offset=25)],
              lineno=22,
              col_offset=4,
              end_lineno=26,
              end_col_offset=25)],
          lineno=19,
          col_offset=4,
          end_lineno=26,
          end_col_offset=25),
        Return(
          Name(
            'value',
            Load(),
            lineno=28,
            col_offset=11,
            end_lineno=28,
            end_col_offset=16),
          lineno=28,
          col_offset=4,
          end_lineno=28,
          end_col_offset=16)],
      [],
      lineno=8,
      col_offset=0,
      end_lineno=28,
      end_col_offset=16),
    FunctionDef(
      'higher_card',
      arguments(
        [],
        [
          arg(
            'card_one',
            lineno=31,
            col_offset=16,
            end_lineno=31,
            end_col_offset=24),
          arg(
            'card_two',
            lineno=31,
            col_offset=26,
            end_lineno=31,
            end_col_offset=34)],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      [
        Expr(
          Constant(
            'Determine which card has a higher value in the hand.\n\n    :param card_one, card_two: str - cards dealt in hand.  See below for values.\n    :return: str or tuple - resulting Tuple contains both cards if they are of equal value.\n\n    1.  \'J\', \'Q\', or \'K\' (otherwise known as "face cards") = 10\n    2.  \'A\' (ace card) = 1\n    3.  \'2\' - \'10\' = numerical value.\n    ',
            lineno=32,
            col_offset=4,
            end_lineno=40,
            end_col_offset=7),
          lineno=32,
          col_offset=4,
          end_lineno=40,
          end_col_offset=7),
        Assign(
          [
            Name(
              'card_one_value',
              Store(),
              lineno=42,
              col_offset=4,
              end_lineno=42,
              end_col_offset=18)],
          Call(
            Name(
              'value_of_card',
              Load(),
              lineno=42,
              col_offset=21,
              end_lineno=42,
              end_col_offset=34),
            [
              Name(
                'card_one',
                Load(),
                lineno=42,
                col_offset=35,
                end_lineno=42,
                end_col_offset=43)],
            [],
            lineno=42,
            col_offset=21,
            end_lineno=42,
            end_col_offset=44),
          lineno=42,
          col_offset=4,
          end_lineno=42,
          end_col_offset=44),
        Assign(
          [
            Name(
              'card_two_value',
              Store(),
              lineno=43,
              col_offset=4,
              end_lineno=43,
              end_col_offset=18)],
          Call(
            Name(
              'value_of_card',
              Load(),
              lineno=43,
              col_offset=21,
              end_lineno=43,
              end_col_offset=34),
            [
              Name(
                'card_two',
                Load(),
                lineno=43,
                col_offset=35,
                end_lineno=43,
                end_col_offset=43)],
            [],
            lineno=43,
            col_offset=21,
            end_lineno=43,
            end_col_offset=44),
          lineno=43,
          col_offset=4,
          end_lineno=43,
          end_col_offset=44),
        If(
          Compare(
            Name(
              'card_one_value',
              Load(),
              lineno=45,
              col_offset=7,
              end_lineno=45,
              end_col_offset=21),
            [
              Eq()],
            [
              Name(
                'card_two_value',
                Load(),
                lineno=45,
                col_offset=25,
                end_lineno=45,
                end_col_offset=39)],
            lineno=45,
            col_offset=7,
            end_lineno=45,
            end_col_offset=39),
          [
            Assign(
              [
                Name(
                  'result',
                  Store(),
                  lineno=46,
                  col_offset=8,
                  end_lineno=46,
                  end_col_offset=14)],
              Tuple(
                [
                  Name(
                    'card_one',
                    Load(),
                    lineno=46,
                    col_offset=17,
                    end_lineno=46,
                    end_col_offset=25),
                  Name(
                    'card_two',
                    Load(),
                    lineno=46,
                    col_offset=27,
                    end_lineno=46,
                    end_col_offset=35)],
                Load(),
                lineno=46,
                col_offset=17,
                end_lineno=46,
                end_col_offset=35),
              lineno=46,
              col_offset=8,
              end_lineno=46,
              end_col_offset=35)],
          [
            If(
              Compare(
                Name(
                  'card_one_value',
                  Load(),
                  lineno=48,
                  col_offset=9,
                  end_lineno=48,
                  end_col_offset=23),
                [
                  Gt()],
                [
                  Name(
                    'card_two_value',
                    Load(),
                    lineno=48,
                    col_offset=26,
                    end_lineno=48,
                    end_col_offset=40)],
                lineno=48,
                col_offset=9,
                end_lineno=48,
                end_col_offset=40),
              [
                Assign(
                  [
                    Name(
                      'result',
                      Store(),
                      lineno=49,
                      col_offset=8,
                      end_lineno=49,
                      end_col_offset=14)],
                  Name(
                    'card_one',
                    Load(),
                    lineno=49,
                    col_offset=17,
                    end_lineno=49,
                    end_col_offset=25),
                  lineno=49,
                  col_offset=8,
                  end_lineno=49,
                  end_col_offset=25)],
              [
                Assign(
                  [
                    Name(
                      'result',
                      Store(),
                      lineno=52,
                      col_offset=8,
                      end_lineno=52,
                      end_col_offset=14)],
                  Name(
                    'card_two',
                    Load(),
                    lineno=52,
                    col_offset=17,
                    end_lineno=52,
                    end_col_offset=25),
                  lineno=52,
                  col_offset=8,
                  end_lineno=52,
                  end_col_offset=25)],
              lineno=48,
              col_offset=4,
              end_lineno=52,
              end_col_offset=25)],
          lineno=45,
          col_offset=4,
          end_lineno=52,
          end_col_offset=25),
        Return(
          Name(
            'result',
            Load(),
            lineno=54,
            col_offset=11,
            end_lineno=54,
            end_col_offset=17),
          lineno=54,
          col_offset=4,
          end_lineno=54,
          end_col_offset=17)],
      [],
      lineno=31,
      col_offset=0,
      end_lineno=54,
      end_col_offset=17),
    FunctionDef(
      'value_of_ace',
      arguments(
        [],
        [
          arg(
            'card_one',
            lineno=57,
            col_offset=17,
            end_lineno=57,
            end_col_offset=25),
          arg(
            'card_two',
            lineno=57,
            col_offset=27,
            end_lineno=57,
            end_col_offset=35)],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      [
        Expr(
          Constant(
            'Calculate the most advantageous value for the ace card.\n\n    :param card_one, card_two: str - card dealt. See below for values.\n    :return: int - either 1 or 11 value of the upcoming ace card.\n\n    1.  \'J\', \'Q\', or \'K\' (otherwise known as "face cards") = 10\n    2.  \'A\' (ace card) = 11 (if already in hand)\n    3.  \'2\' - \'10\' = numerical value.\n    ',
            lineno=58,
            col_offset=4,
            end_lineno=66,
            end_col_offset=7),
          lineno=58,
          col_offset=4,
          end_lineno=66,
          end_col_offset=7),
        Assign(
          [
            Name(
              'card_one_value',
              Store(),
              lineno=68,
              col_offset=4,
              end_lineno=68,
              end_col_offset=18)],
          IfExp(
            Compare(
              Name(
                'card_one',
                Load(),
                lineno=68,
                col_offset=27,
                end_lineno=68,
                end_col_offset=35),
              [
                Eq()],
              [
                Constant(
                  'A',
                  lineno=68,
                  col_offset=39,
                  end_lineno=68,
                  end_col_offset=42)],
              lineno=68,
              col_offset=27,
              end_lineno=68,
              end_col_offset=42),
            Constant(
              11,
              lineno=68,
              col_offset=21,
              end_lineno=68,
              end_col_offset=23),
            Call(
              Name(
                'value_of_card',
                Load(),
                lineno=68,
                col_offset=48,
                end_lineno=68,
                end_col_offset=61),
              [
                Name(
                  'card_one',
                  Load(),
                  lineno=68,
                  col_offset=62,
                  end_lineno=68,
                  end_col_offset=70)],
              [],
              lineno=68,
              col_offset=48,
              end_lineno=68,
              end_col_offset=71),
            lineno=68,
            col_offset=21,
            end_lineno=68,
            end_col_offset=71),
          lineno=68,
          col_offset=4,
          end_lineno=68,
          end_col_offset=71),
        Assign(
          [
            Name(
              'card_two_value',
              Store(),
              lineno=69,
              col_offset=4,
              end_lineno=69,
              end_col_offset=18)],
          IfExp(
            Compare(
              Name(
                'card_two',
                Load(),
                lineno=69,
                col_offset=27,
                end_lineno=69,
                end_col_offset=35),
              [
                Eq()],
              [
                Constant(
                  'A',
                  lineno=69,
                  col_offset=39,
                  end_lineno=69,
                  end_col_offset=42)],
              lineno=69,
              col_offset=27,
              end_lineno=69,
              end_col_offset=42),
            Constant(
              11,
              lineno=69,
              col_offset=21,
              end_lineno=69,
              end_col_offset=23),
            Call(
              Name(
                'value_of_card',
                Load(),
                lineno=69,
                col_offset=48,
                end_lineno=69,
                end_col_offset=61),
              [
                Name(
                  'card_two',
                  Load(),
                  lineno=69,
                  col_offset=62,
                  end_lineno=69,
                  end_col_offset=70)],
              [],
              lineno=69,
              col_offset=48,
              end_lineno=69,
              end_col_offset=71),
            lineno=69,
            col_offset=21,
            end_lineno=69,
            end_col_offset=71),
          lineno=69,
          col_offset=4,
          end_lineno=69,
          end_col_offset=71),
        Assign(
          [
            Name(
              'ace_value',
              Store(),
              lineno=71,
              col_offset=4,
              end_lineno=71,
              end_col_offset=13)],
          IfExp(
            Compare(
              BinOp(
                Constant(
                  11,
                  lineno=71,
                  col_offset=21,
                  end_lineno=71,
                  end_col_offset=23),
                Add(),
                BinOp(
                  Name(
                    'card_one_value',
                    Load(),
                    lineno=71,
                    col_offset=27,
                    end_lineno=71,
                    end_col_offset=41),
                  Add(),
                  Name(
                    'card_two_value',
                    Load(),
                    lineno=71,
                    col_offset=44,
                    end_lineno=71,
                    end_col_offset=58),
                  lineno=71,
                  col_offset=27,
                  end_lineno=71,
                  end_col_offset=58),
                lineno=71,
                col_offset=21,
                end_lineno=71,
                end_col_offset=59),
              [
                Gt()],
              [
                Constant(
                  21,
                  lineno=71,
                  col_offset=62,
                  end_lineno=71,
                  end_col_offset=64)],
              lineno=71,
              col_offset=21,
              end_lineno=71,
              end_col_offset=64),
            Constant(
              1,
              lineno=71,
              col_offset=16,
              end_lineno=71,
              end_col_offset=17),
            Constant(
              11,
              lineno=71,
              col_offset=70,
              end_lineno=71,
              end_col_offset=72),
            lineno=71,
            col_offset=16,
            end_lineno=71,
            end_col_offset=72),
          lineno=71,
          col_offset=4,
          end_lineno=71,
          end_col_offset=72),
        Return(
          Name(
            'ace_value',
            Load(),
            lineno=73,
            col_offset=11,
            end_lineno=73,
            end_col_offset=20),
          lineno=73,
          col_offset=4,
          end_lineno=73,
          end_col_offset=20)],
      [],
      lineno=57,
      col_offset=0,
      end_lineno=73,
      end_col_offset=20),
    FunctionDef(
      'is_blackjack',
      arguments(
        [],
        [
          arg(
            'card_one',
            lineno=76,
            col_offset=17,
            end_lineno=76,
            end_col_offset=25),
          arg(
            'card_two',
            lineno=76,
            col_offset=27,
            end_lineno=76,
            end_col_offset=35)],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      [
        Expr(
          Constant(
            'Determine if the hand is a \'natural\' or \'blackjack\'.\n\n    :param card_one, card_two: str - card dealt. See below for values.\n    :return: bool - is the hand is a blackjack (two cards worth 21).\n\n    1.  \'J\', \'Q\', or \'K\' (otherwise known as "face cards") = 10\n    2.  \'A\' (ace card) = 11 (if already in hand)\n    3.  \'2\' - \'10\' = numerical value.\n    ',
            lineno=77,
            col_offset=4,
            end_lineno=85,
            end_col_offset=7),
          lineno=77,
          col_offset=4,
          end_lineno=85,
          end_col_offset=7),
        Return(
          BoolOp(
            And(),
            [
              BoolOp(
                Or(),
                [
                  Compare(
                    Name(
                      'card_one',
                      Load(),
                      lineno=87,
                      col_offset=12,
                      end_lineno=87,
                      end_col_offset=20),
                    [
                      Eq()],
                    [
                      Constant(
                        'A',
                        lineno=87,
                        col_offset=24,
                        end_lineno=87,
                        end_col_offset=27)],
                    lineno=87,
                    col_offset=12,
                    end_lineno=87,
                    end_col_offset=27),
                  Compare(
                    Name(
                      'card_two',
                      Load(),
                      lineno=87,
                      col_offset=31,
                      end_lineno=87,
                      end_col_offset=39),
                    [
                      Eq()],
                    [
                      Constant(
                        'A',
                        lineno=87,
                        col_offset=43,
                        end_lineno=87,
                        end_col_offset=46)],
                    lineno=87,
                    col_offset=31,
                    end_lineno=87,
                    end_col_offset=46)],
                lineno=87,
                col_offset=12,
                end_lineno=87,
                end_col_offset=46),
              BoolOp(
                Or(),
                [
                  Compare(
                    Call(
                      Name(
                        'value_of_card',
                        Load(),
                        lineno=87,
                        col_offset=53,
                        end_lineno=87,
                        end_col_offset=66),
                      [
                        Name(
                          'card_one',
                          Load(),
                          lineno=87,
                          col_offset=67,
                          end_lineno=87,
                          end_col_offset=75)],
                      [],
                      lineno=87,
                      col_offset=53,
                      end_lineno=87,
                      end_col_offset=76),
                    [
                      Eq()],
                    [
                      Constant(
                        10,
                        lineno=87,
                        col_offset=80,
                        end_lineno=87,
                        end_col_offset=82)],
                    lineno=87,
                    col_offset=53,
                    end_lineno=87,
                    end_col_offset=82),
                  Compare(
                    Call(
                      Name(
                        'value_of_card',
                        Load(),
                        lineno=87,
                        col_offset=86,
                        end_lineno=87,
                        end_col_offset=99),
                      [
                        Name(
                          'card_two',
                          Load(),
                          lineno=87,
                          col_offset=100,
                          end_lineno=87,
                          end_col_offset=108)],
                      [],
                      lineno=87,
                      col_offset=86,
                      end_lineno=87,
                      end_col_offset=109),
                    [
                      Eq()],
                    [
                      Constant(
                        10,
                        lineno=87,
                        col_offset=113,
                        end_lineno=87,
                        end_col_offset=115)],
                    lineno=87,
                    col_offset=86,
                    end_lineno=87,
                    end_col_offset=115)],
                lineno=87,
                col_offset=53,
                end_lineno=87,
                end_col_offset=115)],
            lineno=87,
            col_offset=11,
            end_lineno=87,
            end_col_offset=116),
          lineno=87,
          col_offset=4,
          end_lineno=87,
          end_col_offset=116)],
      [],
      lineno=76,
      col_offset=0,
      end_lineno=87,
      end_col_offset=116),
    FunctionDef(
      'can_split_pairs',
      arguments(
        [],
        [
          arg(
            'card_one',
            lineno=90,
            col_offset=20,
            end_lineno=90,
            end_col_offset=28),
          arg(
            'card_two',
            lineno=90,
            col_offset=30,
            end_lineno=90,
            end_col_offset=38)],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      [
        Expr(
          Constant(
            'Determine if a player can split their hand into two hands.\n\n    :param card_one, card_two: str - cards dealt.\n    :return: bool - can the hand be split into two pairs? (i.e. cards are of the same value).\n    ',
            lineno=91,
            col_offset=4,
            end_lineno=95,
            end_col_offset=7),
          lineno=91,
          col_offset=4,
          end_lineno=95,
          end_col_offset=7),
        Return(
          Compare(
            Call(
              Name(
                'value_of_card',
                Load(),
                lineno=97,
                col_offset=11,
                end_lineno=97,
                end_col_offset=24),
              [
                Name(
                  'card_one',
                  Load(),
                  lineno=97,
                  col_offset=25,
                  end_lineno=97,
                  end_col_offset=33)],
              [],
              lineno=97,
              col_offset=11,
              end_lineno=97,
              end_col_offset=34),
            [
              Eq()],
            [
              Call(
                Name(
                  'value_of_card',
                  Load(),
                  lineno=97,
                  col_offset=38,
                  end_lineno=97,
                  end_col_offset=51),
                [
                  Name(
                    'card_two',
                    Load(),
                    lineno=97,
                    col_offset=52,
                    end_lineno=97,
                    end_col_offset=60)],
                [],
                lineno=97,
                col_offset=38,
                end_lineno=97,
                end_col_offset=61)],
            lineno=97,
            col_offset=11,
            end_lineno=97,
            end_col_offset=61),
          lineno=97,
          col_offset=4,
          end_lineno=97,
          end_col_offset=61)],
      [],
      lineno=90,
      col_offset=0,
      end_lineno=97,
      end_col_offset=61),
    FunctionDef(
      'can_double_down',
      arguments(
        [],
        [
          arg(
            'card_one',
            lineno=100,
            col_offset=20,
            end_lineno=100,
            end_col_offset=28),
          arg(
            'card_two',
            lineno=100,
            col_offset=30,
            end_lineno=100,
            end_col_offset=38)],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      [
        Expr(
          Constant(
            'Determine if a blackjack player can place a double down bet.\n\n    :param card_one, card_two: str - first and second cards in hand.\n    :return: bool - can the hand can be doubled down? (i.e. totals 9, 10 or 11 points).\n    ',
            lineno=101,
            col_offset=4,
            end_lineno=105,
            end_col_offset=7),
          lineno=101,
          col_offset=4,
          end_lineno=105,
          end_col_offset=7),
        Return(
          Compare(
            Constant(
              8,
              lineno=107,
              col_offset=11,
              end_lineno=107,
              end_col_offset=12),
            [
              Lt(),
              Lt()],
            [
              BinOp(
                Call(
                  Name(
                    'value_of_card',
                    Load(),
                    lineno=107,
                    col_offset=15,
                    end_lineno=107,
                    end_col_offset=28),
                  [
                    Name(
                      'card_one',
                      Load(),
                      lineno=107,
                      col_offset=29,
                      end_lineno=107,
                      end_col_offset=37)],
                  [],
                  lineno=107,
                  col_offset=15,
                  end_lineno=107,
                  end_col_offset=38),
                Add(),
                Call(
                  Name(
                    'value_of_card',
                    Load(),
                    lineno=107,
                    col_offset=41,
                    end_lineno=107,
                    end_col_offset=54),
                  [
                    Name(
                      'card_two',
                      Load(),
                      lineno=107,
                      col_offset=55,
                      end_lineno=107,
                      end_col_offset=63)],
                  [],
                  lineno=107,
                  col_offset=41,
                  end_lineno=107,
                  end_col_offset=64),
                lineno=107,
                col_offset=15,
                end_lineno=107,
                end_col_offset=64),
              Constant(
                12,
                lineno=107,
                col_offset=67,
                end_lineno=107,
                end_col_offset=69)],
            lineno=107,
            col_offset=11,
            end_lineno=107,
            end_col_offset=69),
          lineno=107,
          col_offset=4,
          end_lineno=107,
          end_col_offset=69)],
      [],
      lineno=100,
      col_offset=0,
      end_lineno=107,
      end_col_offset=69)],
  [])

# BEGIN TREE AFTER
Module(
  [
    FunctionDef(
      'placeholder_0',
      arguments(
        [],
        [
          arg(
            'placeholder_1',
            lineno=8,
            col_offset=18,
            end_lineno=8,
            end_col_offset=22)],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      [
        If(
          Compare(
            Name(
              'placeholder_1',
              Load(),
              lineno=19,
              col_offset=7,
              end_lineno=19,
              end_col_offset=11),
            [
              In()],
            [
              Constant(
                'JQK',
                lineno=19,
                col_offset=16,
                end_lineno=19,
                end_col_offset=21)],
            lineno=19,
            col_offset=7,
            end_lineno=19,
            end_col_offset=22),
          [
            Assign(
              [
                Name(
                  'placeholder_2',
                  Store(),
                  lineno=20,
                  col_offset=8,
                  end_lineno=20,
                  end_col_offset=13)],
              Constant(
                10,
                lineno=20,
                col_offset=16,
                end_lineno=20,
                end_col_offset=18),
              lineno=20,
              col_offset=8,
              end_lineno=20,
              end_col_offset=18)],
          [
            If(
              Compare(
                Name(
                  'placeholder_1',
                  Load(),
                  lineno=22,
                  col_offset=9,
                  end_lineno=22,
                  end_col_offset=13),
                [
                  Eq()],
                [
                  Constant(
                    'A',
                    lineno=22,
                    col_offset=17,
                    end_lineno=22,
                    end_col_offset=20)],
                lineno=22,
                col_offset=9,
                end_lineno=22,
                end_col_offset=20),
              [
                Assign(
                  [
                    Name(
                      'placeholder_2',
                      Store(),
                      lineno=23,
                      col_offset=8,
                      end_lineno=23,
                      end_col_offset=13)],
                  Constant(
                    1,
                    lineno=23,
                    col_offset=16,
                    end_lineno=23,
                    end_col_offset=17),
                  lineno=23,
                  col_offset=8,
                  end_lineno=23,
                  end_col_offset=17)],
              [
                Assign(
                  [
                    Name(
                      'placeholder_2',
                      Store(),
                      lineno=26,
                      col_offset=8,
                      end_lineno=26,
                      end_col_offset=13)],
                  Call(
                    Name(
                      'int',
                      Load(),
                      lineno=26,
                      col_offset=16,
                      end_lineno=26,
                      end_col_offset=19),
                    [
                      Name(
                        'placeholder_1',
                        Load(),
                        lineno=26,
                        col_offset=20,
                        end_lineno=26,
                        end_col_offset=24)],
                    [],
                    lineno=26,
                    col_offset=16,
                    end_lineno=26,
                    end_col_offset=25),
                  lineno=26,
                  col_offset=8,
                  end_lineno=26,
                  end_col_offset=25)],
              lineno=22,
              col_offset=4,
              end_lineno=26,
              end_col_offset=25)],
          lineno=19,
          col_offset=4,
          end_lineno=26,
          end_col_offset=25),
        Return(
          Name(
            'placeholder_2',
            Load(),
            lineno=28,
            col_offset=11,
            end_lineno=28,
            end_col_offset=16),
          lineno=28,
          col_offset=4,
          end_lineno=28,
          end_col_offset=16)],
      [],
      lineno=8,
      col_offset=0,
      end_lineno=28,
      end_col_offset=16),
    FunctionDef(
      'placeholder_3',
      arguments(
        [],
        [
          arg(
            'placeholder_4',
            lineno=31,
            col_offset=16,
            end_lineno=31,
            end_col_offset=24),
          arg(
            'placeholder_5',
            lineno=31,
            col_offset=26,
            end_lineno=31,
            end_col_offset=34)],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      [
        Assign(
          [
            Name(
              'placeholder_6',
              Store(),
              lineno=42,
              col_offset=4,
              end_lineno=42,
              end_col_offset=18)],
          Call(
            Name(
              'placeholder_0',
              Load(),
              lineno=42,
              col_offset=21,
              end_lineno=42,
              end_col_offset=34),
            [
              Name(
                'placeholder_4',
                Load(),
                lineno=42,
                col_offset=35,
                end_lineno=42,
                end_col_offset=43)],
            [],
            lineno=42,
            col_offset=21,
            end_lineno=42,
            end_col_offset=44),
          lineno=42,
          col_offset=4,
          end_lineno=42,
          end_col_offset=44),
        Assign(
          [
            Name(
              'placeholder_7',
              Store(),
              lineno=43,
              col_offset=4,
              end_lineno=43,
              end_col_offset=18)],
          Call(
            Name(
              'placeholder_0',
              Load(),
              lineno=43,
              col_offset=21,
              end_lineno=43,
              end_col_offset=34),
            [
              Name(
                'placeholder_5',
                Load(),
                lineno=43,
                col_offset=35,
                end_lineno=43,
                end_col_offset=43)],
            [],
            lineno=43,
            col_offset=21,
            end_lineno=43,
            end_col_offset=44),
          lineno=43,
          col_offset=4,
          end_lineno=43,
          end_col_offset=44),
        If(
          Compare(
            Name(
              'placeholder_6',
              Load(),
              lineno=45,
              col_offset=7,
              end_lineno=45,
              end_col_offset=21),
            [
              Eq()],
            [
              Name(
                'placeholder_7',
                Load(),
                lineno=45,
                col_offset=25,
                end_lineno=45,
                end_col_offset=39)],
            lineno=45,
            col_offset=7,
            end_lineno=45,
            end_col_offset=39),
          [
            Assign(
              [
                Name(
                  'placeholder_8',
                  Store(),
                  lineno=46,
                  col_offset=8,
                  end_lineno=46,
                  end_col_offset=14)],
              Tuple(
                [
                  Name(
                    'placeholder_4',
                    Load(),
                    lineno=46,
                    col_offset=17,
                    end_lineno=46,
                    end_col_offset=25),
                  Name(
                    'placeholder_5',
                    Load(),
                    lineno=46,
                    col_offset=27,
                    end_lineno=46,
                    end_col_offset=35)],
                Load(),
                lineno=46,
                col_offset=17,
                end_lineno=46,
                end_col_offset=35),
              lineno=46,
              col_offset=8,
              end_lineno=46,
              end_col_offset=35)],
          [
            If(
              Compare(
                Name(
                  'placeholder_6',
                  Load(),
                  lineno=48,
                  col_offset=9,
                  end_lineno=48,
                  end_col_offset=23),
                [
                  Gt()],
                [
                  Name(
                    'placeholder_7',
                    Load(),
                    lineno=48,
                    col_offset=26,
                    end_lineno=48,
                    end_col_offset=40)],
                lineno=48,
                col_offset=9,
                end_lineno=48,
                end_col_offset=40),
              [
                Assign(
                  [
                    Name(
                      'placeholder_8',
                      Store(),
                      lineno=49,
                      col_offset=8,
                      end_lineno=49,
                      end_col_offset=14)],
                  Name(
                    'placeholder_4',
                    Load(),
                    lineno=49,
                    col_offset=17,
                    end_lineno=49,
                    end_col_offset=25),
                  lineno=49,
                  col_offset=8,
                  end_lineno=49,
                  end_col_offset=25)],
              [
                Assign(
                  [
                    Name(
                      'placeholder_8',
                      Store(),
                      lineno=52,
                      col_offset=8,
                      end_lineno=52,
                      end_col_offset=14)],
                  Name(
                    'placeholder_5',
                    Load(),
                    lineno=52,
                    col_offset=17,
                    end_lineno=52,
                    end_col_offset=25),
                  lineno=52,
                  col_offset=8,
                  end_lineno=52,
                  end_col_offset=25)],
              lineno=48,
              col_offset=4,
              end_lineno=52,
              end_col_offset=25)],
          lineno=45,
          col_offset=4,
          end_lineno=52,
          end_col_offset=25),
        Return(
          Name(
            'placeholder_8',
            Load(),
            lineno=54,
            col_offset=11,
            end_lineno=54,
            end_col_offset=17),
          lineno=54,
          col_offset=4,
          end_lineno=54,
          end_col_offset=17)],
      [],
      lineno=31,
      col_offset=0,
      end_lineno=54,
      end_col_offset=17),
    FunctionDef(
      'placeholder_9',
      arguments(
        [],
        [
          arg(
            'placeholder_4',
            lineno=57,
            col_offset=17,
            end_lineno=57,
            end_col_offset=25),
          arg(
            'placeholder_5',
            lineno=57,
            col_offset=27,
            end_lineno=57,
            end_col_offset=35)],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      [
        Assign(
          [
            Name(
              'placeholder_6',
              Store(),
              lineno=68,
              col_offset=4,
              end_lineno=68,
              end_col_offset=18)],
          IfExp(
            Compare(
              Name(
                'placeholder_4',
                Load(),
                lineno=68,
                col_offset=27,
                end_lineno=68,
                end_col_offset=35),
              [
                Eq()],
              [
                Constant(
                  'A',
                  lineno=68,
                  col_offset=39,
                  end_lineno=68,
                  end_col_offset=42)],
              lineno=68,
              col_offset=27,
              end_lineno=68,
              end_col_offset=42),
            Constant(
              11,
              lineno=68,
              col_offset=21,
              end_lineno=68,
              end_col_offset=23),
            Call(
              Name(
                'placeholder_0',
                Load(),
                lineno=68,
                col_offset=48,
                end_lineno=68,
                end_col_offset=61),
              [
                Name(
                  'placeholder_4',
                  Load(),
                  lineno=68,
                  col_offset=62,
                  end_lineno=68,
                  end_col_offset=70)],
              [],
              lineno=68,
              col_offset=48,
              end_lineno=68,
              end_col_offset=71),
            lineno=68,
            col_offset=21,
            end_lineno=68,
            end_col_offset=71),
          lineno=68,
          col_offset=4,
          end_lineno=68,
          end_col_offset=71),
        Assign(
          [
            Name(
              'placeholder_7',
              Store(),
              lineno=69,
              col_offset=4,
              end_lineno=69,
              end_col_offset=18)],
          IfExp(
            Compare(
              Name(
                'placeholder_5',
                Load(),
                lineno=69,
                col_offset=27,
                end_lineno=69,
                end_col_offset=35),
              [
                Eq()],
              [
                Constant(
                  'A',
                  lineno=69,
                  col_offset=39,
                  end_lineno=69,
                  end_col_offset=42)],
              lineno=69,
              col_offset=27,
              end_lineno=69,
              end_col_offset=42),
            Constant(
              11,
              lineno=69,
              col_offset=21,
              end_lineno=69,
              end_col_offset=23),
            Call(
              Name(
                'placeholder_0',
                Load(),
                lineno=69,
                col_offset=48,
                end_lineno=69,
                end_col_offset=61),
              [
                Name(
                  'placeholder_5',
                  Load(),
                  lineno=69,
                  col_offset=62,
                  end_lineno=69,
                  end_col_offset=70)],
              [],
              lineno=69,
              col_offset=48,
              end_lineno=69,
              end_col_offset=71),
            lineno=69,
            col_offset=21,
            end_lineno=69,
            end_col_offset=71),
          lineno=69,
          col_offset=4,
          end_lineno=69,
          end_col_offset=71),
        Assign(
          [
            Name(
              'placeholder_10',
              Store(),
              lineno=71,
              col_offset=4,
              end_lineno=71,
              end_col_offset=13)],
          IfExp(
            Compare(
              BinOp(
                Constant(
                  11,
                  lineno=71,
                  col_offset=21,
                  end_lineno=71,
                  end_col_offset=23),
                Add(),
                BinOp(
                  Name(
                    'placeholder_6',
                    Load(),
                    lineno=71,
                    col_offset=27,
                    end_lineno=71,
                    end_col_offset=41),
                  Add(),
                  Name(
                    'placeholder_7',
                    Load(),
                    lineno=71,
                    col_offset=44,
                    end_lineno=71,
                    end_col_offset=58),
                  lineno=71,
                  col_offset=27,
                  end_lineno=71,
                  end_col_offset=58),
                lineno=71,
                col_offset=21,
                end_lineno=71,
                end_col_offset=59),
              [
                Gt()],
              [
                Constant(
                  21,
                  lineno=71,
                  col_offset=62,
                  end_lineno=71,
                  end_col_offset=64)],
              lineno=71,
              col_offset=21,
              end_lineno=71,
              end_col_offset=64),
            Constant(
              1,
              lineno=71,
              col_offset=16,
              end_lineno=71,
              end_col_offset=17),
            Constant(
              11,
              lineno=71,
              col_offset=70,
              end_lineno=71,
              end_col_offset=72),
            lineno=71,
            col_offset=16,
            end_lineno=71,
            end_col_offset=72),
          lineno=71,
          col_offset=4,
          end_lineno=71,
          end_col_offset=72),
        Return(
          Name(
            'placeholder_10',
            Load(),
            lineno=73,
            col_offset=11,
            end_lineno=73,
            end_col_offset=20),
          lineno=73,
          col_offset=4,
          end_lineno=73,
          end_col_offset=20)],
      [],
      lineno=57,
      col_offset=0,
      end_lineno=73,
      end_col_offset=20),
    FunctionDef(
      'placeholder_11',
      arguments(
        [],
        [
          arg(
            'placeholder_4',
            lineno=76,
            col_offset=17,
            end_lineno=76,
            end_col_offset=25),
          arg(
            'placeholder_5',
            lineno=76,
            col_offset=27,
            end_lineno=76,
            end_col_offset=35)],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      [
        Return(
          BoolOp(
            And(),
            [
              BoolOp(
                Or(),
                [
                  Compare(
                    Name(
                      'placeholder_4',
                      Load(),
                      lineno=87,
                      col_offset=12,
                      end_lineno=87,
                      end_col_offset=20),
                    [
                      Eq()],
                    [
                      Constant(
                        'A',
                        lineno=87,
                        col_offset=24,
                        end_lineno=87,
                        end_col_offset=27)],
                    lineno=87,
                    col_offset=12,
                    end_lineno=87,
                    end_col_offset=27),
                  Compare(
                    Name(
                      'placeholder_5',
                      Load(),
                      lineno=87,
                      col_offset=31,
                      end_lineno=87,
                      end_col_offset=39),
                    [
                      Eq()],
                    [
                      Constant(
                        'A',
                        lineno=87,
                        col_offset=43,
                        end_lineno=87,
                        end_col_offset=46)],
                    lineno=87,
                    col_offset=31,
                    end_lineno=87,
                    end_col_offset=46)],
                lineno=87,
                col_offset=12,
                end_lineno=87,
                end_col_offset=46),
              BoolOp(
                Or(),
                [
                  Compare(
                    Call(
                      Name(
                        'placeholder_0',
                        Load(),
                        lineno=87,
                        col_offset=53,
                        end_lineno=87,
                        end_col_offset=66),
                      [
                        Name(
                          'placeholder_4',
                          Load(),
                          lineno=87,
                          col_offset=67,
                          end_lineno=87,
                          end_col_offset=75)],
                      [],
                      lineno=87,
                      col_offset=53,
                      end_lineno=87,
                      end_col_offset=76),
                    [
                      Eq()],
                    [
                      Constant(
                        10,
                        lineno=87,
                        col_offset=80,
                        end_lineno=87,
                        end_col_offset=82)],
                    lineno=87,
                    col_offset=53,
                    end_lineno=87,
                    end_col_offset=82),
                  Compare(
                    Call(
                      Name(
                        'placeholder_0',
                        Load(),
                        lineno=87,
                        col_offset=86,
                        end_lineno=87,
                        end_col_offset=99),
                      [
                        Name(
                          'placeholder_5',
                          Load(),
                          lineno=87,
                          col_offset=100,
                          end_lineno=87,
                          end_col_offset=108)],
                      [],
                      lineno=87,
                      col_offset=86,
                      end_lineno=87,
                      end_col_offset=109),
                    [
                      Eq()],
                    [
                      Constant(
                        10,
                        lineno=87,
                        col_offset=113,
                        end_lineno=87,
                        end_col_offset=115)],
                    lineno=87,
                    col_offset=86,
                    end_lineno=87,
                    end_col_offset=115)],
                lineno=87,
                col_offset=53,
                end_lineno=87,
                end_col_offset=115)],
            lineno=87,
            col_offset=11,
            end_lineno=87,
            end_col_offset=116),
          lineno=87,
          col_offset=4,
          end_lineno=87,
          end_col_offset=116)],
      [],
      lineno=76,
      col_offset=0,
      end_lineno=87,
      end_col_offset=116),
    FunctionDef(
      'placeholder_12',
      arguments(
        [],
        [
          arg(
            'placeholder_4',
            lineno=90,
            col_offset=20,
            end_lineno=90,
            end_col_offset=28),
          arg(
            'placeholder_5',
            lineno=90,
            col_offset=30,
            end_lineno=90,
            end_col_offset=38)],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      [
        Return(
          Compare(
            Call(
              Name(
                'placeholder_0',
                Load(),
                lineno=97,
                col_offset=11,
                end_lineno=97,
                end_col_offset=24),
              [
                Name(
                  'placeholder_4',
                  Load(),
                  lineno=97,
                  col_offset=25,
                  end_lineno=97,
                  end_col_offset=33)],
              [],
              lineno=97,
              col_offset=11,
              end_lineno=97,
              end_col_offset=34),
            [
              Eq()],
            [
              Call(
                Name(
                  'placeholder_0',
                  Load(),
                  lineno=97,
                  col_offset=38,
                  end_lineno=97,
                  end_col_offset=51),
                [
                  Name(
                    'placeholder_5',
                    Load(),
                    lineno=97,
                    col_offset=52,
                    end_lineno=97,
                    end_col_offset=60)],
                [],
                lineno=97,
                col_offset=38,
                end_lineno=97,
                end_col_offset=61)],
            lineno=97,
            col_offset=11,
            end_lineno=97,
            end_col_offset=61),
          lineno=97,
          col_offset=4,
          end_lineno=97,
          end_col_offset=61)],
      [],
      lineno=90,
      col_offset=0,
      end_lineno=97,
      end_col_offset=61),
    FunctionDef(
      'placeholder_13',
      arguments(
        [],
        [
          arg(
            'placeholder_4',
            lineno=100,
            col_offset=20,
            end_lineno=100,
            end_col_offset=28),
          arg(
            'placeholder_5',
            lineno=100,
            col_offset=30,
            end_lineno=100,
            end_col_offset=38)],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      [
        Return(
          Compare(
            Constant(
              8,
              lineno=107,
              col_offset=11,
              end_lineno=107,
              end_col_offset=12),
            [
              Lt(),
              Lt()],
            [
              BinOp(
                Call(
                  Name(
                    'placeholder_0',
                    Load(),
                    lineno=107,
                    col_offset=15,
                    end_lineno=107,
                    end_col_offset=28),
                  [
                    Name(
                      'placeholder_4',
                      Load(),
                      lineno=107,
                      col_offset=29,
                      end_lineno=107,
                      end_col_offset=37)],
                  [],
                  lineno=107,
                  col_offset=15,
                  end_lineno=107,
                  end_col_offset=38),
                Add(),
                Call(
                  Name(
                    'placeholder_0',
                    Load(),
                    lineno=107,
                    col_offset=41,
                    end_lineno=107,
                    end_col_offset=54),
                  [
                    Name(
                      'placeholder_5',
                      Load(),
                      lineno=107,
                      col_offset=55,
                      end_lineno=107,
                      end_col_offset=63)],
                  [],
                  lineno=107,
                  col_offset=41,
                  end_lineno=107,
                  end_col_offset=64),
                lineno=107,
                col_offset=15,
                end_lineno=107,
                end_col_offset=64),
              Constant(
                12,
                lineno=107,
                col_offset=67,
                end_lineno=107,
                end_col_offset=69)],
            lineno=107,
            col_offset=11,
            end_lineno=107,
            end_col_offset=69),
          lineno=107,
          col_offset=4,
          end_lineno=107,
          end_col_offset=69)],
      [],
      lineno=100,
      col_offset=0,
      end_lineno=107,
      end_col_offset=69)],
  [])

# BEGIN NORMALIZED CODE AFTER
def placeholder_0(placeholder_1):
    if placeholder_1 in "JQK":
        placeholder_2 = 10
    elif placeholder_1 == "A":
        placeholder_2 = 1
    else:
        placeholder_2 = int(placeholder_1)
    return placeholder_2


def placeholder_3(placeholder_4, placeholder_5):
    placeholder_6 = placeholder_0(placeholder_4)
    placeholder_7 = placeholder_0(placeholder_5)
    if placeholder_6 == placeholder_7:
        placeholder_8 = (placeholder_4, placeholder_5)
    elif placeholder_6 > placeholder_7:
        placeholder_8 = placeholder_4
    else:
        placeholder_8 = placeholder_5
    return placeholder_8


def placeholder_9(placeholder_4, placeholder_5):
    placeholder_6 = 11 if placeholder_4 == "A" else placeholder_0(placeholder_4)
    placeholder_7 = 11 if placeholder_5 == "A" else placeholder_0(placeholder_5)
    placeholder_10 = 1 if 11 + (placeholder_6 + placeholder_7) > 21 else 11
    return placeholder_10


def placeholder_11(placeholder_4, placeholder_5):
    return (placeholder_4 == "A" or placeholder_5 == "A") and (
        placeholder_0(placeholder_4) == 10 or placeholder_0(placeholder_5) == 10
    )


def placeholder_12(placeholder_4, placeholder_5):
    return placeholder_0(placeholder_4) == placeholder_0(placeholder_5)


def placeholder_13(placeholder_4, placeholder_5):
    return 8 < placeholder_0(placeholder_4) + placeholder_0(placeholder_5) < 12
