# BEGIN TREE BEFORE
Module(
  [
    Expr(
      Constant(
        'Functions for organizing and calculating student exam scores.',
        lineno=1,
        col_offset=0,
        end_lineno=1,
        end_col_offset=67),
      lineno=1,
      col_offset=0,
      end_lineno=1,
      end_col_offset=67),
    FunctionDef(
      'round_scores',
      arguments(
        [],
        [
          arg(
            'student_scores',
            lineno=4,
            col_offset=17,
            end_lineno=4,
            end_col_offset=31)],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      [
        Expr(
          Constant(
            'Round all provided student scores.\n\n    :param student_scores: list - float or int of student exam scores.\n    :return: list - student scores *rounded* to nearest integer value.\n    ',
            lineno=5,
            col_offset=4,
            end_lineno=9,
            end_col_offset=7),
          lineno=5,
          col_offset=4,
          end_lineno=9,
          end_col_offset=7),
        Assign(
          [
            Name(
              'rounded',
              Store(),
              lineno=11,
              col_offset=4,
              end_lineno=11,
              end_col_offset=11)],
          List(
            [],
            Load(),
            lineno=11,
            col_offset=14,
            end_lineno=11,
            end_col_offset=16),
          lineno=11,
          col_offset=4,
          end_lineno=11,
          end_col_offset=16),
        While(
          Name(
            'student_scores',
            Load(),
            lineno=12,
            col_offset=10,
            end_lineno=12,
            end_col_offset=24),
          [
            Expr(
              Call(
                Attribute(
                  Name(
                    'rounded',
                    Load(),
                    lineno=13,
                    col_offset=8,
                    end_lineno=13,
                    end_col_offset=15),
                  'append',
                  Load(),
                  lineno=13,
                  col_offset=8,
                  end_lineno=13,
                  end_col_offset=22),
                [
                  Call(
                    Name(
                      'round',
                      Load(),
                      lineno=13,
                      col_offset=23,
                      end_lineno=13,
                      end_col_offset=28),
                    [
                      Call(
                        Attribute(
                          Name(
                            'student_scores',
                            Load(),
                            lineno=13,
                            col_offset=29,
                            end_lineno=13,
                            end_col_offset=43),
                          'pop',
                          Load(),
                          lineno=13,
                          col_offset=29,
                          end_lineno=13,
                          end_col_offset=47),
                        [],
                        [],
                        lineno=13,
                        col_offset=29,
                        end_lineno=13,
                        end_col_offset=49)],
                    [],
                    lineno=13,
                    col_offset=23,
                    end_lineno=13,
                    end_col_offset=50)],
                [],
                lineno=13,
                col_offset=8,
                end_lineno=13,
                end_col_offset=51),
              lineno=13,
              col_offset=8,
              end_lineno=13,
              end_col_offset=51)],
          [],
          lineno=12,
          col_offset=4,
          end_lineno=13,
          end_col_offset=51),
        Return(
          Name(
            'rounded',
            Load(),
            lineno=14,
            col_offset=11,
            end_lineno=14,
            end_col_offset=18),
          lineno=14,
          col_offset=4,
          end_lineno=14,
          end_col_offset=18)],
      [],
      lineno=4,
      col_offset=0,
      end_lineno=14,
      end_col_offset=18),
    FunctionDef(
      'count_failed_students',
      arguments(
        [],
        [
          arg(
            'student_scores',
            lineno=17,
            col_offset=26,
            end_lineno=17,
            end_col_offset=40)],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      [
        Expr(
          Constant(
            'Count the number of failing students out of the group provided.\n\n    :param student_scores: list - containing int student scores.\n    :return: int - count of student scores at or below 40.\n    ',
            lineno=18,
            col_offset=4,
            end_lineno=22,
            end_col_offset=7),
          lineno=18,
          col_offset=4,
          end_lineno=22,
          end_col_offset=7),
        Assign(
          [
            Name(
              'non_passing',
              Store(),
              lineno=24,
              col_offset=4,
              end_lineno=24,
              end_col_offset=15)],
          Constant(
            0,
            lineno=24,
            col_offset=18,
            end_lineno=24,
            end_col_offset=19),
          lineno=24,
          col_offset=4,
          end_lineno=24,
          end_col_offset=19),
        For(
          Name(
            'score',
            Store(),
            lineno=25,
            col_offset=8,
            end_lineno=25,
            end_col_offset=13),
          Name(
            'student_scores',
            Load(),
            lineno=25,
            col_offset=17,
            end_lineno=25,
            end_col_offset=31),
          [
            If(
              Compare(
                Name(
                  'score',
                  Load(),
                  lineno=26,
                  col_offset=11,
                  end_lineno=26,
                  end_col_offset=16),
                [
                  LtE()],
                [
                  Constant(
                    40,
                    lineno=26,
                    col_offset=20,
                    end_lineno=26,
                    end_col_offset=22)],
                lineno=26,
                col_offset=11,
                end_lineno=26,
                end_col_offset=22),
              [
                AugAssign(
                  Name(
                    'non_passing',
                    Store(),
                    lineno=27,
                    col_offset=12,
                    end_lineno=27,
                    end_col_offset=23),
                  Add(),
                  Constant(
                    1,
                    lineno=27,
                    col_offset=27,
                    end_lineno=27,
                    end_col_offset=28),
                  lineno=27,
                  col_offset=12,
                  end_lineno=27,
                  end_col_offset=28)],
              [],
              lineno=26,
              col_offset=8,
              end_lineno=27,
              end_col_offset=28)],
          [],
          lineno=25,
          col_offset=4,
          end_lineno=27,
          end_col_offset=28),
        Return(
          Name(
            'non_passing',
            Load(),
            lineno=28,
            col_offset=11,
            end_lineno=28,
            end_col_offset=22),
          lineno=28,
          col_offset=4,
          end_lineno=28,
          end_col_offset=22)],
      [],
      lineno=17,
      col_offset=0,
      end_lineno=28,
      end_col_offset=22),
    FunctionDef(
      'above_threshold',
      arguments(
        [],
        [
          arg(
            'student_scores',
            lineno=31,
            col_offset=20,
            end_lineno=31,
            end_col_offset=34),
          arg(
            'threshold',
            lineno=31,
            col_offset=36,
            end_lineno=31,
            end_col_offset=45)],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      [
        Expr(
          Constant(
            'Determine how many of the provided student scores were \'the best\' based on the provided threshold.\n\n    :param student_scores: list - of integer scores.\n    :param threshold: int - threshold to cross to be the "best" score.\n    :return: list - of integer scores that are at or above the "best" threshold.\n    ',
            lineno=32,
            col_offset=4,
            end_lineno=37,
            end_col_offset=7),
          lineno=32,
          col_offset=4,
          end_lineno=37,
          end_col_offset=7),
        Assign(
          [
            Name(
              'above',
              Store(),
              lineno=39,
              col_offset=4,
              end_lineno=39,
              end_col_offset=9)],
          List(
            [],
            Load(),
            lineno=39,
            col_offset=12,
            end_lineno=39,
            end_col_offset=14),
          lineno=39,
          col_offset=4,
          end_lineno=39,
          end_col_offset=14),
        For(
          Name(
            'score',
            Store(),
            lineno=41,
            col_offset=8,
            end_lineno=41,
            end_col_offset=13),
          Name(
            'student_scores',
            Load(),
            lineno=41,
            col_offset=17,
            end_lineno=41,
            end_col_offset=31),
          [
            If(
              Compare(
                Name(
                  'score',
                  Load(),
                  lineno=42,
                  col_offset=11,
                  end_lineno=42,
                  end_col_offset=16),
                [
                  GtE()],
                [
                  Name(
                    'threshold',
                    Load(),
                    lineno=42,
                    col_offset=20,
                    end_lineno=42,
                    end_col_offset=29)],
                lineno=42,
                col_offset=11,
                end_lineno=42,
                end_col_offset=29),
              [
                Expr(
                  Call(
                    Attribute(
                      Name(
                        'above',
                        Load(),
                        lineno=43,
                        col_offset=12,
                        end_lineno=43,
                        end_col_offset=17),
                      'append',
                      Load(),
                      lineno=43,
                      col_offset=12,
                      end_lineno=43,
                      end_col_offset=24),
                    [
                      Name(
                        'score',
                        Load(),
                        lineno=43,
                        col_offset=25,
                        end_lineno=43,
                        end_col_offset=30)],
                    [],
                    lineno=43,
                    col_offset=12,
                    end_lineno=43,
                    end_col_offset=31),
                  lineno=43,
                  col_offset=12,
                  end_lineno=43,
                  end_col_offset=31)],
              [],
              lineno=42,
              col_offset=8,
              end_lineno=43,
              end_col_offset=31)],
          [],
          lineno=41,
          col_offset=4,
          end_lineno=43,
          end_col_offset=31),
        Return(
          Name(
            'above',
            Load(),
            lineno=44,
            col_offset=11,
            end_lineno=44,
            end_col_offset=16),
          lineno=44,
          col_offset=4,
          end_lineno=44,
          end_col_offset=16)],
      [],
      lineno=31,
      col_offset=0,
      end_lineno=44,
      end_col_offset=16),
    FunctionDef(
      'letter_grades',
      arguments(
        [],
        [
          arg(
            'highest',
            lineno=47,
            col_offset=18,
            end_lineno=47,
            end_col_offset=25)],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      [
        Expr(
          Constant(
            'Create a list of grade thresholds based on the provided highest grade.\n\n    :param highest: int - value of highest exam score.\n    :return: list - of lower threshold scores for each D-A letter grade interval.\n            For example, where the highest score is 100, and failing is <= 40,\n            The result would be [41, 56, 71, 86]:\n\n            41 <= "D" <= 55\n            56 <= "C" <= 70\n            71 <= "B" <= 85\n            86 <= "A" <= 100\n    ',
            lineno=48,
            col_offset=4,
            end_lineno=59,
            end_col_offset=7),
          lineno=48,
          col_offset=4,
          end_lineno=59,
          end_col_offset=7),
        Assign(
          [
            Name(
              'increment',
              Store(),
              lineno=61,
              col_offset=4,
              end_lineno=61,
              end_col_offset=13)],
          Call(
            Name(
              'round',
              Load(),
              lineno=61,
              col_offset=16,
              end_lineno=61,
              end_col_offset=21),
            [
              BinOp(
                BinOp(
                  Name(
                    'highest',
                    Load(),
                    lineno=61,
                    col_offset=23,
                    end_lineno=61,
                    end_col_offset=30),
                  Sub(),
                  Constant(
                    40,
                    lineno=61,
                    col_offset=33,
                    end_lineno=61,
                    end_col_offset=35),
                  lineno=61,
                  col_offset=23,
                  end_lineno=61,
                  end_col_offset=35),
                Div(),
                Constant(
                  4,
                  lineno=61,
                  col_offset=39,
                  end_lineno=61,
                  end_col_offset=40),
                lineno=61,
                col_offset=22,
                end_lineno=61,
                end_col_offset=40)],
            [],
            lineno=61,
            col_offset=16,
            end_lineno=61,
            end_col_offset=41),
          lineno=61,
          col_offset=4,
          end_lineno=61,
          end_col_offset=41),
        Assign(
          [
            Name(
              'scores',
              Store(),
              lineno=62,
              col_offset=4,
              end_lineno=62,
              end_col_offset=10)],
          List(
            [],
            Load(),
            lineno=62,
            col_offset=13,
            end_lineno=62,
            end_col_offset=15),
          lineno=62,
          col_offset=4,
          end_lineno=62,
          end_col_offset=15),
        For(
          Name(
            'score',
            Store(),
            lineno=63,
            col_offset=8,
            end_lineno=63,
            end_col_offset=13),
          Call(
            Name(
              'range',
              Load(),
              lineno=63,
              col_offset=17,
              end_lineno=63,
              end_col_offset=22),
            [
              Constant(
                41,
                lineno=63,
                col_offset=23,
                end_lineno=63,
                end_col_offset=25),
              Name(
                'highest',
                Load(),
                lineno=63,
                col_offset=27,
                end_lineno=63,
                end_col_offset=34),
              Name(
                'increment',
                Load(),
                lineno=63,
                col_offset=36,
                end_lineno=63,
                end_col_offset=45)],
            [],
            lineno=63,
            col_offset=17,
            end_lineno=63,
            end_col_offset=46),
          [
            Expr(
              Call(
                Attribute(
                  Name(
                    'scores',
                    Load(),
                    lineno=64,
                    col_offset=8,
                    end_lineno=64,
                    end_col_offset=14),
                  'append',
                  Load(),
                  lineno=64,
                  col_offset=8,
                  end_lineno=64,
                  end_col_offset=21),
                [
                  Name(
                    'score',
                    Load(),
                    lineno=64,
                    col_offset=22,
                    end_lineno=64,
                    end_col_offset=27)],
                [],
                lineno=64,
                col_offset=8,
                end_lineno=64,
                end_col_offset=28),
              lineno=64,
              col_offset=8,
              end_lineno=64,
              end_col_offset=28)],
          [],
          lineno=63,
          col_offset=4,
          end_lineno=64,
          end_col_offset=28),
        Return(
          Name(
            'scores',
            Load(),
            lineno=65,
            col_offset=11,
            end_lineno=65,
            end_col_offset=17),
          lineno=65,
          col_offset=4,
          end_lineno=65,
          end_col_offset=17)],
      [],
      lineno=47,
      col_offset=0,
      end_lineno=65,
      end_col_offset=17),
    FunctionDef(
      'student_ranking',
      arguments(
        [],
        [
          arg(
            'student_scores',
            lineno=68,
            col_offset=20,
            end_lineno=68,
            end_col_offset=34),
          arg(
            'student_names',
            lineno=68,
            col_offset=36,
            end_lineno=68,
            end_col_offset=49)],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      [
        Expr(
          Constant(
            'Organize the student\'s rank, name, and grade information in ascending order.\n\n    :param student_scores: list - of scores in descending order.\n    :param student_names: list - of string names by exam score in descending order.\n    :return: list - of strings in format ["<rank>. <student name>: <score>"].\n    ',
            lineno=69,
            col_offset=4,
            end_lineno=74,
            end_col_offset=7),
          lineno=69,
          col_offset=4,
          end_lineno=74,
          end_col_offset=7),
        Assign(
          [
            Name(
              'results',
              Store(),
              lineno=76,
              col_offset=4,
              end_lineno=76,
              end_col_offset=11)],
          List(
            [],
            Load(),
            lineno=76,
            col_offset=14,
            end_lineno=76,
            end_col_offset=16),
          lineno=76,
          col_offset=4,
          end_lineno=76,
          end_col_offset=16),
        For(
          Tuple(
            [
              Name(
                'index',
                Store(),
                lineno=77,
                col_offset=8,
                end_lineno=77,
                end_col_offset=13),
              Name(
                'name',
                Store(),
                lineno=77,
                col_offset=15,
                end_lineno=77,
                end_col_offset=19)],
            Store(),
            lineno=77,
            col_offset=8,
            end_lineno=77,
            end_col_offset=19),
          Call(
            Name(
              'enumerate',
              Load(),
              lineno=77,
              col_offset=23,
              end_lineno=77,
              end_col_offset=32),
            [
              Name(
                'student_names',
                Load(),
                lineno=77,
                col_offset=33,
                end_lineno=77,
                end_col_offset=46)],
            [],
            lineno=77,
            col_offset=23,
            end_lineno=77,
            end_col_offset=47),
          [
            Assign(
              [
                Name(
                  'rank_string',
                  Store(),
                  lineno=78,
                  col_offset=8,
                  end_lineno=78,
                  end_col_offset=19)],
              BinOp(
                BinOp(
                  BinOp(
                    BinOp(
                      Call(
                        Name(
                          'str',
                          Load(),
                          lineno=78,
                          col_offset=22,
                          end_lineno=78,
                          end_col_offset=25),
                        [
                          BinOp(
                            Name(
                              'index',
                              Load(),
                              lineno=78,
                              col_offset=26,
                              end_lineno=78,
                              end_col_offset=31),
                            Add(),
                            Constant(
                              1,
                              lineno=78,
                              col_offset=34,
                              end_lineno=78,
                              end_col_offset=35),
                            lineno=78,
                            col_offset=26,
                            end_lineno=78,
                            end_col_offset=35)],
                        [],
                        lineno=78,
                        col_offset=22,
                        end_lineno=78,
                        end_col_offset=36),
                      Add(),
                      Constant(
                        '. ',
                        lineno=78,
                        col_offset=39,
                        end_lineno=78,
                        end_col_offset=43),
                      lineno=78,
                      col_offset=22,
                      end_lineno=78,
                      end_col_offset=43),
                    Add(),
                    Name(
                      'name',
                      Load(),
                      lineno=78,
                      col_offset=46,
                      end_lineno=78,
                      end_col_offset=50),
                    lineno=78,
                    col_offset=22,
                    end_lineno=78,
                    end_col_offset=50),
                  Add(),
                  Constant(
                    ': ',
                    lineno=78,
                    col_offset=53,
                    end_lineno=78,
                    end_col_offset=57),
                  lineno=78,
                  col_offset=22,
                  end_lineno=78,
                  end_col_offset=57),
                Add(),
                Call(
                  Name(
                    'str',
                    Load(),
                    lineno=78,
                    col_offset=60,
                    end_lineno=78,
                    end_col_offset=63),
                  [
                    Subscript(
                      Name(
                        'student_scores',
                        Load(),
                        lineno=78,
                        col_offset=64,
                        end_lineno=78,
                        end_col_offset=78),
                      Name(
                        'index',
                        Load(),
                        lineno=78,
                        col_offset=79,
                        end_lineno=78,
                        end_col_offset=84),
                      Load(),
                      lineno=78,
                      col_offset=64,
                      end_lineno=78,
                      end_col_offset=85)],
                  [],
                  lineno=78,
                  col_offset=60,
                  end_lineno=78,
                  end_col_offset=86),
                lineno=78,
                col_offset=22,
                end_lineno=78,
                end_col_offset=86),
              lineno=78,
              col_offset=8,
              end_lineno=78,
              end_col_offset=86),
            Expr(
              Call(
                Attribute(
                  Name(
                    'results',
                    Load(),
                    lineno=79,
                    col_offset=8,
                    end_lineno=79,
                    end_col_offset=15),
                  'append',
                  Load(),
                  lineno=79,
                  col_offset=8,
                  end_lineno=79,
                  end_col_offset=22),
                [
                  Name(
                    'rank_string',
                    Load(),
                    lineno=79,
                    col_offset=23,
                    end_lineno=79,
                    end_col_offset=34)],
                [],
                lineno=79,
                col_offset=8,
                end_lineno=79,
                end_col_offset=35),
              lineno=79,
              col_offset=8,
              end_lineno=79,
              end_col_offset=35)],
          [],
          lineno=77,
          col_offset=4,
          end_lineno=79,
          end_col_offset=35),
        Return(
          Name(
            'results',
            Load(),
            lineno=81,
            col_offset=11,
            end_lineno=81,
            end_col_offset=18),
          lineno=81,
          col_offset=4,
          end_lineno=81,
          end_col_offset=18)],
      [],
      lineno=68,
      col_offset=0,
      end_lineno=81,
      end_col_offset=18),
    FunctionDef(
      'perfect_score',
      arguments(
        [],
        [
          arg(
            'student_info',
            lineno=84,
            col_offset=18,
            end_lineno=84,
            end_col_offset=30)],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      [
        Expr(
          Constant(
            'Create a list that contains the name and grade of the first student to make a perfect score on the exam.\n\n    :param student_info: list - of [<student name>, <score>] lists.\n    :return: list - first `[<student name>, 100]` or `[]` if no student score of 100 is found.\n    ',
            lineno=85,
            col_offset=4,
            end_lineno=89,
            end_col_offset=7),
          lineno=85,
          col_offset=4,
          end_lineno=89,
          end_col_offset=7),
        Assign(
          [
            Name(
              'result',
              Store(),
              lineno=91,
              col_offset=4,
              end_lineno=91,
              end_col_offset=10)],
          List(
            [],
            Load(),
            lineno=91,
            col_offset=13,
            end_lineno=91,
            end_col_offset=15),
          lineno=91,
          col_offset=4,
          end_lineno=91,
          end_col_offset=15),
        For(
          Name(
            'item',
            Store(),
            lineno=93,
            col_offset=8,
            end_lineno=93,
            end_col_offset=12),
          Name(
            'student_info',
            Load(),
            lineno=93,
            col_offset=16,
            end_lineno=93,
            end_col_offset=28),
          [
            If(
              Compare(
                Subscript(
                  Name(
                    'item',
                    Load(),
                    lineno=94,
                    col_offset=11,
                    end_lineno=94,
                    end_col_offset=15),
                  Constant(
                    1,
                    lineno=94,
                    col_offset=16,
                    end_lineno=94,
                    end_col_offset=17),
                  Load(),
                  lineno=94,
                  col_offset=11,
                  end_lineno=94,
                  end_col_offset=18),
                [
                  Eq()],
                [
                  Constant(
                    100,
                    lineno=94,
                    col_offset=22,
                    end_lineno=94,
                    end_col_offset=25)],
                lineno=94,
                col_offset=11,
                end_lineno=94,
                end_col_offset=25),
              [
                Assign(
                  [
                    Name(
                      'result',
                      Store(),
                      lineno=95,
                      col_offset=12,
                      end_lineno=95,
                      end_col_offset=18)],
                  Name(
                    'item',
                    Load(),
                    lineno=95,
                    col_offset=21,
                    end_lineno=95,
                    end_col_offset=25),
                  lineno=95,
                  col_offset=12,
                  end_lineno=95,
                  end_col_offset=25),
                Break(
                  lineno=96,
                  col_offset=12,
                  end_lineno=96,
                  end_col_offset=17)],
              [],
              lineno=94,
              col_offset=8,
              end_lineno=96,
              end_col_offset=17)],
          [],
          lineno=93,
          col_offset=4,
          end_lineno=96,
          end_col_offset=17),
        Return(
          Name(
            'result',
            Load(),
            lineno=98,
            col_offset=11,
            end_lineno=98,
            end_col_offset=17),
          lineno=98,
          col_offset=4,
          end_lineno=98,
          end_col_offset=17)],
      [],
      lineno=84,
      col_offset=0,
      end_lineno=98,
      end_col_offset=17)],
  [])

# BEGIN TREE AFTER
Module(
  [
    FunctionDef(
      'placeholder_0',
      arguments(
        [],
        [
          arg(
            'placeholder_1',
            lineno=4,
            col_offset=17,
            end_lineno=4,
            end_col_offset=31)],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      [
        Assign(
          [
            Name(
              'placeholder_2',
              Store(),
              lineno=11,
              col_offset=4,
              end_lineno=11,
              end_col_offset=11)],
          List(
            [],
            Load(),
            lineno=11,
            col_offset=14,
            end_lineno=11,
            end_col_offset=16),
          lineno=11,
          col_offset=4,
          end_lineno=11,
          end_col_offset=16),
        While(
          Name(
            'placeholder_1',
            Load(),
            lineno=12,
            col_offset=10,
            end_lineno=12,
            end_col_offset=24),
          [
            Expr(
              Call(
                Attribute(
                  Name(
                    'placeholder_2',
                    Load(),
                    lineno=13,
                    col_offset=8,
                    end_lineno=13,
                    end_col_offset=15),
                  'append',
                  Load(),
                  lineno=13,
                  col_offset=8,
                  end_lineno=13,
                  end_col_offset=22),
                [
                  Call(
                    Name(
                      'round',
                      Load(),
                      lineno=13,
                      col_offset=23,
                      end_lineno=13,
                      end_col_offset=28),
                    [
                      Call(
                        Attribute(
                          Name(
                            'placeholder_1',
                            Load(),
                            lineno=13,
                            col_offset=29,
                            end_lineno=13,
                            end_col_offset=43),
                          'pop',
                          Load(),
                          lineno=13,
                          col_offset=29,
                          end_lineno=13,
                          end_col_offset=47),
                        [],
                        [],
                        lineno=13,
                        col_offset=29,
                        end_lineno=13,
                        end_col_offset=49)],
                    [],
                    lineno=13,
                    col_offset=23,
                    end_lineno=13,
                    end_col_offset=50)],
                [],
                lineno=13,
                col_offset=8,
                end_lineno=13,
                end_col_offset=51),
              lineno=13,
              col_offset=8,
              end_lineno=13,
              end_col_offset=51)],
          [],
          lineno=12,
          col_offset=4,
          end_lineno=13,
          end_col_offset=51),
        Return(
          Name(
            'placeholder_2',
            Load(),
            lineno=14,
            col_offset=11,
            end_lineno=14,
            end_col_offset=18),
          lineno=14,
          col_offset=4,
          end_lineno=14,
          end_col_offset=18)],
      [],
      lineno=4,
      col_offset=0,
      end_lineno=14,
      end_col_offset=18),
    FunctionDef(
      'placeholder_3',
      arguments(
        [],
        [
          arg(
            'placeholder_1',
            lineno=17,
            col_offset=26,
            end_lineno=17,
            end_col_offset=40)],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      [
        Assign(
          [
            Name(
              'placeholder_4',
              Store(),
              lineno=24,
              col_offset=4,
              end_lineno=24,
              end_col_offset=15)],
          Constant(
            0,
            lineno=24,
            col_offset=18,
            end_lineno=24,
            end_col_offset=19),
          lineno=24,
          col_offset=4,
          end_lineno=24,
          end_col_offset=19),
        For(
          Name(
            'placeholder_5',
            Store(),
            lineno=25,
            col_offset=8,
            end_lineno=25,
            end_col_offset=13),
          Name(
            'placeholder_1',
            Load(),
            lineno=25,
            col_offset=17,
            end_lineno=25,
            end_col_offset=31),
          [
            If(
              Compare(
                Name(
                  'placeholder_5',
                  Load(),
                  lineno=26,
                  col_offset=11,
                  end_lineno=26,
                  end_col_offset=16),
                [
                  LtE()],
                [
                  Constant(
                    40,
                    lineno=26,
                    col_offset=20,
                    end_lineno=26,
                    end_col_offset=22)],
                lineno=26,
                col_offset=11,
                end_lineno=26,
                end_col_offset=22),
              [
                AugAssign(
                  Name(
                    'placeholder_4',
                    Store(),
                    lineno=27,
                    col_offset=12,
                    end_lineno=27,
                    end_col_offset=23),
                  Add(),
                  Constant(
                    1,
                    lineno=27,
                    col_offset=27,
                    end_lineno=27,
                    end_col_offset=28),
                  lineno=27,
                  col_offset=12,
                  end_lineno=27,
                  end_col_offset=28)],
              [],
              lineno=26,
              col_offset=8,
              end_lineno=27,
              end_col_offset=28)],
          [],
          lineno=25,
          col_offset=4,
          end_lineno=27,
          end_col_offset=28),
        Return(
          Name(
            'placeholder_4',
            Load(),
            lineno=28,
            col_offset=11,
            end_lineno=28,
            end_col_offset=22),
          lineno=28,
          col_offset=4,
          end_lineno=28,
          end_col_offset=22)],
      [],
      lineno=17,
      col_offset=0,
      end_lineno=28,
      end_col_offset=22),
    FunctionDef(
      'placeholder_6',
      arguments(
        [],
        [
          arg(
            'placeholder_1',
            lineno=31,
            col_offset=20,
            end_lineno=31,
            end_col_offset=34),
          arg(
            'placeholder_7',
            lineno=31,
            col_offset=36,
            end_lineno=31,
            end_col_offset=45)],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      [
        Assign(
          [
            Name(
              'placeholder_8',
              Store(),
              lineno=39,
              col_offset=4,
              end_lineno=39,
              end_col_offset=9)],
          List(
            [],
            Load(),
            lineno=39,
            col_offset=12,
            end_lineno=39,
            end_col_offset=14),
          lineno=39,
          col_offset=4,
          end_lineno=39,
          end_col_offset=14),
        For(
          Name(
            'placeholder_5',
            Store(),
            lineno=41,
            col_offset=8,
            end_lineno=41,
            end_col_offset=13),
          Name(
            'placeholder_1',
            Load(),
            lineno=41,
            col_offset=17,
            end_lineno=41,
            end_col_offset=31),
          [
            If(
              Compare(
                Name(
                  'placeholder_5',
                  Load(),
                  lineno=42,
                  col_offset=11,
                  end_lineno=42,
                  end_col_offset=16),
                [
                  GtE()],
                [
                  Name(
                    'placeholder_7',
                    Load(),
                    lineno=42,
                    col_offset=20,
                    end_lineno=42,
                    end_col_offset=29)],
                lineno=42,
                col_offset=11,
                end_lineno=42,
                end_col_offset=29),
              [
                Expr(
                  Call(
                    Attribute(
                      Name(
                        'placeholder_8',
                        Load(),
                        lineno=43,
                        col_offset=12,
                        end_lineno=43,
                        end_col_offset=17),
                      'append',
                      Load(),
                      lineno=43,
                      col_offset=12,
                      end_lineno=43,
                      end_col_offset=24),
                    [
                      Name(
                        'placeholder_5',
                        Load(),
                        lineno=43,
                        col_offset=25,
                        end_lineno=43,
                        end_col_offset=30)],
                    [],
                    lineno=43,
                    col_offset=12,
                    end_lineno=43,
                    end_col_offset=31),
                  lineno=43,
                  col_offset=12,
                  end_lineno=43,
                  end_col_offset=31)],
              [],
              lineno=42,
              col_offset=8,
              end_lineno=43,
              end_col_offset=31)],
          [],
          lineno=41,
          col_offset=4,
          end_lineno=43,
          end_col_offset=31),
        Return(
          Name(
            'placeholder_8',
            Load(),
            lineno=44,
            col_offset=11,
            end_lineno=44,
            end_col_offset=16),
          lineno=44,
          col_offset=4,
          end_lineno=44,
          end_col_offset=16)],
      [],
      lineno=31,
      col_offset=0,
      end_lineno=44,
      end_col_offset=16),
    FunctionDef(
      'placeholder_9',
      arguments(
        [],
        [
          arg(
            'placeholder_10',
            lineno=47,
            col_offset=18,
            end_lineno=47,
            end_col_offset=25)],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      [
        Assign(
          [
            Name(
              'placeholder_11',
              Store(),
              lineno=61,
              col_offset=4,
              end_lineno=61,
              end_col_offset=13)],
          Call(
            Name(
              'round',
              Load(),
              lineno=61,
              col_offset=16,
              end_lineno=61,
              end_col_offset=21),
            [
              BinOp(
                BinOp(
                  Name(
                    'placeholder_10',
                    Load(),
                    lineno=61,
                    col_offset=23,
                    end_lineno=61,
                    end_col_offset=30),
                  Sub(),
                  Constant(
                    40,
                    lineno=61,
                    col_offset=33,
                    end_lineno=61,
                    end_col_offset=35),
                  lineno=61,
                  col_offset=23,
                  end_lineno=61,
                  end_col_offset=35),
                Div(),
                Constant(
                  4,
                  lineno=61,
                  col_offset=39,
                  end_lineno=61,
                  end_col_offset=40),
                lineno=61,
                col_offset=22,
                end_lineno=61,
                end_col_offset=40)],
            [],
            lineno=61,
            col_offset=16,
            end_lineno=61,
            end_col_offset=41),
          lineno=61,
          col_offset=4,
          end_lineno=61,
          end_col_offset=41),
        Assign(
          [
            Name(
              'placeholder_12',
              Store(),
              lineno=62,
              col_offset=4,
              end_lineno=62,
              end_col_offset=10)],
          List(
            [],
            Load(),
            lineno=62,
            col_offset=13,
            end_lineno=62,
            end_col_offset=15),
          lineno=62,
          col_offset=4,
          end_lineno=62,
          end_col_offset=15),
        For(
          Name(
            'placeholder_5',
            Store(),
            lineno=63,
            col_offset=8,
            end_lineno=63,
            end_col_offset=13),
          Call(
            Name(
              'range',
              Load(),
              lineno=63,
              col_offset=17,
              end_lineno=63,
              end_col_offset=22),
            [
              Constant(
                41,
                lineno=63,
                col_offset=23,
                end_lineno=63,
                end_col_offset=25),
              Name(
                'placeholder_10',
                Load(),
                lineno=63,
                col_offset=27,
                end_lineno=63,
                end_col_offset=34),
              Name(
                'placeholder_11',
                Load(),
                lineno=63,
                col_offset=36,
                end_lineno=63,
                end_col_offset=45)],
            [],
            lineno=63,
            col_offset=17,
            end_lineno=63,
            end_col_offset=46),
          [
            Expr(
              Call(
                Attribute(
                  Name(
                    'placeholder_12',
                    Load(),
                    lineno=64,
                    col_offset=8,
                    end_lineno=64,
                    end_col_offset=14),
                  'append',
                  Load(),
                  lineno=64,
                  col_offset=8,
                  end_lineno=64,
                  end_col_offset=21),
                [
                  Name(
                    'placeholder_5',
                    Load(),
                    lineno=64,
                    col_offset=22,
                    end_lineno=64,
                    end_col_offset=27)],
                [],
                lineno=64,
                col_offset=8,
                end_lineno=64,
                end_col_offset=28),
              lineno=64,
              col_offset=8,
              end_lineno=64,
              end_col_offset=28)],
          [],
          lineno=63,
          col_offset=4,
          end_lineno=64,
          end_col_offset=28),
        Return(
          Name(
            'placeholder_12',
            Load(),
            lineno=65,
            col_offset=11,
            end_lineno=65,
            end_col_offset=17),
          lineno=65,
          col_offset=4,
          end_lineno=65,
          end_col_offset=17)],
      [],
      lineno=47,
      col_offset=0,
      end_lineno=65,
      end_col_offset=17),
    FunctionDef(
      'placeholder_13',
      arguments(
        [],
        [
          arg(
            'placeholder_1',
            lineno=68,
            col_offset=20,
            end_lineno=68,
            end_col_offset=34),
          arg(
            'placeholder_14',
            lineno=68,
            col_offset=36,
            end_lineno=68,
            end_col_offset=49)],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      [
        Assign(
          [
            Name(
              'placeholder_15',
              Store(),
              lineno=76,
              col_offset=4,
              end_lineno=76,
              end_col_offset=11)],
          List(
            [],
            Load(),
            lineno=76,
            col_offset=14,
            end_lineno=76,
            end_col_offset=16),
          lineno=76,
          col_offset=4,
          end_lineno=76,
          end_col_offset=16),
        For(
          Tuple(
            [
              Name(
                'placeholder_16',
                Store(),
                lineno=77,
                col_offset=8,
                end_lineno=77,
                end_col_offset=13),
              Name(
                'placeholder_17',
                Store(),
                lineno=77,
                col_offset=15,
                end_lineno=77,
                end_col_offset=19)],
            Store(),
            lineno=77,
            col_offset=8,
            end_lineno=77,
            end_col_offset=19),
          Call(
            Name(
              'enumerate',
              Load(),
              lineno=77,
              col_offset=23,
              end_lineno=77,
              end_col_offset=32),
            [
              Name(
                'placeholder_14',
                Load(),
                lineno=77,
                col_offset=33,
                end_lineno=77,
                end_col_offset=46)],
            [],
            lineno=77,
            col_offset=23,
            end_lineno=77,
            end_col_offset=47),
          [
            Assign(
              [
                Name(
                  'placeholder_18',
                  Store(),
                  lineno=78,
                  col_offset=8,
                  end_lineno=78,
                  end_col_offset=19)],
              BinOp(
                BinOp(
                  BinOp(
                    BinOp(
                      Call(
                        Name(
                          'str',
                          Load(),
                          lineno=78,
                          col_offset=22,
                          end_lineno=78,
                          end_col_offset=25),
                        [
                          BinOp(
                            Name(
                              'placeholder_16',
                              Load(),
                              lineno=78,
                              col_offset=26,
                              end_lineno=78,
                              end_col_offset=31),
                            Add(),
                            Constant(
                              1,
                              lineno=78,
                              col_offset=34,
                              end_lineno=78,
                              end_col_offset=35),
                            lineno=78,
                            col_offset=26,
                            end_lineno=78,
                            end_col_offset=35)],
                        [],
                        lineno=78,
                        col_offset=22,
                        end_lineno=78,
                        end_col_offset=36),
                      Add(),
                      Constant(
                        '. ',
                        lineno=78,
                        col_offset=39,
                        end_lineno=78,
                        end_col_offset=43),
                      lineno=78,
                      col_offset=22,
                      end_lineno=78,
                      end_col_offset=43),
                    Add(),
                    Name(
                      'placeholder_17',
                      Load(),
                      lineno=78,
                      col_offset=46,
                      end_lineno=78,
                      end_col_offset=50),
                    lineno=78,
                    col_offset=22,
                    end_lineno=78,
                    end_col_offset=50),
                  Add(),
                  Constant(
                    ': ',
                    lineno=78,
                    col_offset=53,
                    end_lineno=78,
                    end_col_offset=57),
                  lineno=78,
                  col_offset=22,
                  end_lineno=78,
                  end_col_offset=57),
                Add(),
                Call(
                  Name(
                    'str',
                    Load(),
                    lineno=78,
                    col_offset=60,
                    end_lineno=78,
                    end_col_offset=63),
                  [
                    Subscript(
                      Name(
                        'placeholder_1',
                        Load(),
                        lineno=78,
                        col_offset=64,
                        end_lineno=78,
                        end_col_offset=78),
                      Name(
                        'placeholder_16',
                        Load(),
                        lineno=78,
                        col_offset=79,
                        end_lineno=78,
                        end_col_offset=84),
                      Load(),
                      lineno=78,
                      col_offset=64,
                      end_lineno=78,
                      end_col_offset=85)],
                  [],
                  lineno=78,
                  col_offset=60,
                  end_lineno=78,
                  end_col_offset=86),
                lineno=78,
                col_offset=22,
                end_lineno=78,
                end_col_offset=86),
              lineno=78,
              col_offset=8,
              end_lineno=78,
              end_col_offset=86),
            Expr(
              Call(
                Attribute(
                  Name(
                    'placeholder_15',
                    Load(),
                    lineno=79,
                    col_offset=8,
                    end_lineno=79,
                    end_col_offset=15),
                  'append',
                  Load(),
                  lineno=79,
                  col_offset=8,
                  end_lineno=79,
                  end_col_offset=22),
                [
                  Name(
                    'placeholder_18',
                    Load(),
                    lineno=79,
                    col_offset=23,
                    end_lineno=79,
                    end_col_offset=34)],
                [],
                lineno=79,
                col_offset=8,
                end_lineno=79,
                end_col_offset=35),
              lineno=79,
              col_offset=8,
              end_lineno=79,
              end_col_offset=35)],
          [],
          lineno=77,
          col_offset=4,
          end_lineno=79,
          end_col_offset=35),
        Return(
          Name(
            'placeholder_15',
            Load(),
            lineno=81,
            col_offset=11,
            end_lineno=81,
            end_col_offset=18),
          lineno=81,
          col_offset=4,
          end_lineno=81,
          end_col_offset=18)],
      [],
      lineno=68,
      col_offset=0,
      end_lineno=81,
      end_col_offset=18),
    FunctionDef(
      'placeholder_19',
      arguments(
        [],
        [
          arg(
            'placeholder_20',
            lineno=84,
            col_offset=18,
            end_lineno=84,
            end_col_offset=30)],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      [
        Assign(
          [
            Name(
              'placeholder_21',
              Store(),
              lineno=91,
              col_offset=4,
              end_lineno=91,
              end_col_offset=10)],
          List(
            [],
            Load(),
            lineno=91,
            col_offset=13,
            end_lineno=91,
            end_col_offset=15),
          lineno=91,
          col_offset=4,
          end_lineno=91,
          end_col_offset=15),
        For(
          Name(
            'placeholder_22',
            Store(),
            lineno=93,
            col_offset=8,
            end_lineno=93,
            end_col_offset=12),
          Name(
            'placeholder_20',
            Load(),
            lineno=93,
            col_offset=16,
            end_lineno=93,
            end_col_offset=28),
          [
            If(
              Compare(
                Subscript(
                  Name(
                    'placeholder_22',
                    Load(),
                    lineno=94,
                    col_offset=11,
                    end_lineno=94,
                    end_col_offset=15),
                  Constant(
                    1,
                    lineno=94,
                    col_offset=16,
                    end_lineno=94,
                    end_col_offset=17),
                  Load(),
                  lineno=94,
                  col_offset=11,
                  end_lineno=94,
                  end_col_offset=18),
                [
                  Eq()],
                [
                  Constant(
                    100,
                    lineno=94,
                    col_offset=22,
                    end_lineno=94,
                    end_col_offset=25)],
                lineno=94,
                col_offset=11,
                end_lineno=94,
                end_col_offset=25),
              [
                Assign(
                  [
                    Name(
                      'placeholder_21',
                      Store(),
                      lineno=95,
                      col_offset=12,
                      end_lineno=95,
                      end_col_offset=18)],
                  Name(
                    'placeholder_22',
                    Load(),
                    lineno=95,
                    col_offset=21,
                    end_lineno=95,
                    end_col_offset=25),
                  lineno=95,
                  col_offset=12,
                  end_lineno=95,
                  end_col_offset=25),
                Break(
                  lineno=96,
                  col_offset=12,
                  end_lineno=96,
                  end_col_offset=17)],
              [],
              lineno=94,
              col_offset=8,
              end_lineno=96,
              end_col_offset=17)],
          [],
          lineno=93,
          col_offset=4,
          end_lineno=96,
          end_col_offset=17),
        Return(
          Name(
            'placeholder_21',
            Load(),
            lineno=98,
            col_offset=11,
            end_lineno=98,
            end_col_offset=17),
          lineno=98,
          col_offset=4,
          end_lineno=98,
          end_col_offset=17)],
      [],
      lineno=84,
      col_offset=0,
      end_lineno=98,
      end_col_offset=17)],
  [])

# BEGIN NORMALIZED CODE AFTER
def placeholder_0(placeholder_1):
    placeholder_2 = []
    while placeholder_1:
        placeholder_2.append(round(placeholder_1.pop()))
    return placeholder_2


def placeholder_3(placeholder_1):
    placeholder_4 = 0
    for placeholder_5 in placeholder_1:
        if placeholder_5 <= 40:
            placeholder_4 += 1
    return placeholder_4


def placeholder_6(placeholder_1, placeholder_7):
    placeholder_8 = []
    for placeholder_5 in placeholder_1:
        if placeholder_5 >= placeholder_7:
            placeholder_8.append(placeholder_5)
    return placeholder_8


def placeholder_9(placeholder_10):
    placeholder_11 = round((placeholder_10 - 40) / 4)
    placeholder_12 = []
    for placeholder_5 in range(41, placeholder_10, placeholder_11):
        placeholder_12.append(placeholder_5)
    return placeholder_12


def placeholder_13(placeholder_1, placeholder_14):
    placeholder_15 = []
    for placeholder_16, placeholder_17 in enumerate(placeholder_14):
        placeholder_18 = (
            str(placeholder_16 + 1)
            + ". "
            + placeholder_17
            + ": "
            + str(placeholder_1[placeholder_16])
        )
        placeholder_15.append(placeholder_18)
    return placeholder_15


def placeholder_19(placeholder_20):
    placeholder_21 = []
    for placeholder_22 in placeholder_20:
        if placeholder_22[1] == 100:
            placeholder_21 = placeholder_22
            break
    return placeholder_21
