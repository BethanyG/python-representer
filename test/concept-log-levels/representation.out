## BEGIN NORMALIZED CODE ##
from enum import Enum


class placeholder_0(Enum):
    placeholder_1 = "TRC"
    placeholder_2 = "DBG"
    placeholder_3 = "INF"
    placeholder_4 = "WRN"
    placeholder_5 = "WRN"
    placeholder_6 = "ERR"
    placeholder_7 = "FTL"
    placeholder_8 = "UKN"


class placeholder_9(Enum):
    placeholder_1 = 0
    placeholder_2 = 1
    placeholder_3 = 4
    placeholder_4 = 5
    placeholder_5 = 5
    placeholder_6 = 6
    placeholder_7 = 7
    placeholder_8 = 42


def placeholder_10(placeholder_11):
    placeholder_12 = placeholder_11.split(":")
    placeholder_13 = placeholder_12[0][1:-1]
    if placeholder_13 in [placeholder_14.value for placeholder_14 in placeholder_0]:
        return placeholder_0(placeholder_13)
    return placeholder_0("UKN")


def placeholder_15(placeholder_16, placeholder_11):
    return f"{placeholder_9[placeholder_16.name].value}:{placeholder_11}"


def placeholder_17():
    return placeholder_0("WRN")


def placeholder_18():
    placeholder_19 = []
    for placeholder_20 in placeholder_0:
        placeholder_19.append((placeholder_20.name, placeholder_20.value))
    return placeholder_19

## END NORMALIZED CODE ##

## BEGIN TREE BEFORE ##
Module(
  [
    ImportFrom(
      'enum',
      [
        alias(
          'Enum',
          lineno=1,
          col_offset=17,
          end_lineno=1,
          end_col_offset=21)],
      0,
      lineno=1,
      col_offset=0,
      end_lineno=1,
      end_col_offset=21),
    ClassDef(
      'LogLevel',
      [
        Name(
          'Enum',
          Load(),
          lineno=4,
          col_offset=15,
          end_lineno=4,
          end_col_offset=19)],
      [],
      [
        Expr(
          Constant(
            'Represent different log levels by their verbose codes.',
            lineno=5,
            col_offset=4,
            end_lineno=5,
            end_col_offset=64),
          lineno=5,
          col_offset=4,
          end_lineno=5,
          end_col_offset=64),
        Assign(
          [
            Name(
              'TRACE',
              Store(),
              lineno=7,
              col_offset=4,
              end_lineno=7,
              end_col_offset=9)],
          Constant(
            'TRC',
            lineno=7,
            col_offset=12,
            end_lineno=7,
            end_col_offset=17),
          lineno=7,
          col_offset=4,
          end_lineno=7,
          end_col_offset=17),
        Assign(
          [
            Name(
              'DEBUG',
              Store(),
              lineno=8,
              col_offset=4,
              end_lineno=8,
              end_col_offset=9)],
          Constant(
            'DBG',
            lineno=8,
            col_offset=12,
            end_lineno=8,
            end_col_offset=17),
          lineno=8,
          col_offset=4,
          end_lineno=8,
          end_col_offset=17),
        Assign(
          [
            Name(
              'INFO',
              Store(),
              lineno=9,
              col_offset=4,
              end_lineno=9,
              end_col_offset=8)],
          Constant(
            'INF',
            lineno=9,
            col_offset=11,
            end_lineno=9,
            end_col_offset=16),
          lineno=9,
          col_offset=4,
          end_lineno=9,
          end_col_offset=16),
        Assign(
          [
            Name(
              'WARNING',
              Store(),
              lineno=10,
              col_offset=4,
              end_lineno=10,
              end_col_offset=11)],
          Constant(
            'WRN',
            lineno=10,
            col_offset=14,
            end_lineno=10,
            end_col_offset=19),
          lineno=10,
          col_offset=4,
          end_lineno=10,
          end_col_offset=19),
        Assign(
          [
            Name(
              'WARN',
              Store(),
              lineno=11,
              col_offset=4,
              end_lineno=11,
              end_col_offset=8)],
          Constant(
            'WRN',
            lineno=11,
            col_offset=11,
            end_lineno=11,
            end_col_offset=16),
          lineno=11,
          col_offset=4,
          end_lineno=11,
          end_col_offset=16),
        Assign(
          [
            Name(
              'ERROR',
              Store(),
              lineno=12,
              col_offset=4,
              end_lineno=12,
              end_col_offset=9)],
          Constant(
            'ERR',
            lineno=12,
            col_offset=12,
            end_lineno=12,
            end_col_offset=17),
          lineno=12,
          col_offset=4,
          end_lineno=12,
          end_col_offset=17),
        Assign(
          [
            Name(
              'FATAL',
              Store(),
              lineno=13,
              col_offset=4,
              end_lineno=13,
              end_col_offset=9)],
          Constant(
            'FTL',
            lineno=13,
            col_offset=12,
            end_lineno=13,
            end_col_offset=17),
          lineno=13,
          col_offset=4,
          end_lineno=13,
          end_col_offset=17),
        Assign(
          [
            Name(
              'UNKNOWN',
              Store(),
              lineno=14,
              col_offset=4,
              end_lineno=14,
              end_col_offset=11)],
          Constant(
            'UKN',
            lineno=14,
            col_offset=14,
            end_lineno=14,
            end_col_offset=19),
          lineno=14,
          col_offset=4,
          end_lineno=14,
          end_col_offset=19)],
      [],
      lineno=4,
      col_offset=0,
      end_lineno=14,
      end_col_offset=19),
    ClassDef(
      'LogLevelInt',
      [
        Name(
          'Enum',
          Load(),
          lineno=17,
          col_offset=18,
          end_lineno=17,
          end_col_offset=22)],
      [],
      [
        Expr(
          Constant(
            'Represent different log levels by their short codes.',
            lineno=18,
            col_offset=4,
            end_lineno=18,
            end_col_offset=62),
          lineno=18,
          col_offset=4,
          end_lineno=18,
          end_col_offset=62),
        Assign(
          [
            Name(
              'TRACE',
              Store(),
              lineno=20,
              col_offset=4,
              end_lineno=20,
              end_col_offset=9)],
          Constant(
            0,
            lineno=20,
            col_offset=12,
            end_lineno=20,
            end_col_offset=13),
          lineno=20,
          col_offset=4,
          end_lineno=20,
          end_col_offset=13),
        Assign(
          [
            Name(
              'DEBUG',
              Store(),
              lineno=21,
              col_offset=4,
              end_lineno=21,
              end_col_offset=9)],
          Constant(
            1,
            lineno=21,
            col_offset=12,
            end_lineno=21,
            end_col_offset=13),
          lineno=21,
          col_offset=4,
          end_lineno=21,
          end_col_offset=13),
        Assign(
          [
            Name(
              'INFO',
              Store(),
              lineno=22,
              col_offset=4,
              end_lineno=22,
              end_col_offset=8)],
          Constant(
            4,
            lineno=22,
            col_offset=11,
            end_lineno=22,
            end_col_offset=12),
          lineno=22,
          col_offset=4,
          end_lineno=22,
          end_col_offset=12),
        Assign(
          [
            Name(
              'WARNING',
              Store(),
              lineno=23,
              col_offset=4,
              end_lineno=23,
              end_col_offset=11)],
          Constant(
            5,
            lineno=23,
            col_offset=14,
            end_lineno=23,
            end_col_offset=15),
          lineno=23,
          col_offset=4,
          end_lineno=23,
          end_col_offset=15),
        Assign(
          [
            Name(
              'WARN',
              Store(),
              lineno=24,
              col_offset=4,
              end_lineno=24,
              end_col_offset=8)],
          Constant(
            5,
            lineno=24,
            col_offset=11,
            end_lineno=24,
            end_col_offset=12),
          lineno=24,
          col_offset=4,
          end_lineno=24,
          end_col_offset=12),
        Assign(
          [
            Name(
              'ERROR',
              Store(),
              lineno=25,
              col_offset=4,
              end_lineno=25,
              end_col_offset=9)],
          Constant(
            6,
            lineno=25,
            col_offset=12,
            end_lineno=25,
            end_col_offset=13),
          lineno=25,
          col_offset=4,
          end_lineno=25,
          end_col_offset=13),
        Assign(
          [
            Name(
              'FATAL',
              Store(),
              lineno=26,
              col_offset=4,
              end_lineno=26,
              end_col_offset=9)],
          Constant(
            7,
            lineno=26,
            col_offset=12,
            end_lineno=26,
            end_col_offset=13),
          lineno=26,
          col_offset=4,
          end_lineno=26,
          end_col_offset=13),
        Assign(
          [
            Name(
              'UNKNOWN',
              Store(),
              lineno=27,
              col_offset=4,
              end_lineno=27,
              end_col_offset=11)],
          Constant(
            42,
            lineno=27,
            col_offset=14,
            end_lineno=27,
            end_col_offset=16),
          lineno=27,
          col_offset=4,
          end_lineno=27,
          end_col_offset=16)],
      [],
      lineno=17,
      col_offset=0,
      end_lineno=27,
      end_col_offset=16),
    FunctionDef(
      'parse_log_level',
      arguments(
        [],
        [
          arg(
            'message',
            lineno=30,
            col_offset=20,
            end_lineno=30,
            end_col_offset=27)],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      [
        Expr(
          Constant(
            "Return level enum for log message.\n\n    :param message: log message (string)\n    :return: enum - 'LogLevel.<level>'.  Return 'LogLevel.Unknown' if an unknown severity is passed.\n    ",
            lineno=31,
            col_offset=4,
            end_lineno=35,
            end_col_offset=7),
          lineno=31,
          col_offset=4,
          end_lineno=35,
          end_col_offset=7),
        Assign(
          [
            Name(
              'str_split',
              Store(),
              lineno=37,
              col_offset=4,
              end_lineno=37,
              end_col_offset=13)],
          Call(
            Attribute(
              Name(
                'message',
                Load(),
                lineno=37,
                col_offset=16,
                end_lineno=37,
                end_col_offset=23),
              'split',
              Load(),
              lineno=37,
              col_offset=16,
              end_lineno=37,
              end_col_offset=29),
            [
              Constant(
                ':',
                lineno=37,
                col_offset=30,
                end_lineno=37,
                end_col_offset=33)],
            [],
            lineno=37,
            col_offset=16,
            end_lineno=37,
            end_col_offset=34),
          lineno=37,
          col_offset=4,
          end_lineno=37,
          end_col_offset=34),
        Assign(
          [
            Name(
              'lvl',
              Store(),
              lineno=38,
              col_offset=4,
              end_lineno=38,
              end_col_offset=7)],
          Subscript(
            Subscript(
              Name(
                'str_split',
                Load(),
                lineno=38,
                col_offset=10,
                end_lineno=38,
                end_col_offset=19),
              Constant(
                0,
                lineno=38,
                col_offset=20,
                end_lineno=38,
                end_col_offset=21),
              Load(),
              lineno=38,
              col_offset=10,
              end_lineno=38,
              end_col_offset=22),
            Slice(
              Constant(
                1,
                lineno=38,
                col_offset=23,
                end_lineno=38,
                end_col_offset=24),
              UnaryOp(
                USub(),
                Constant(
                  1,
                  lineno=38,
                  col_offset=26,
                  end_lineno=38,
                  end_col_offset=27),
                lineno=38,
                col_offset=25,
                end_lineno=38,
                end_col_offset=27),
              lineno=38,
              col_offset=23,
              end_lineno=38,
              end_col_offset=27),
            Load(),
            lineno=38,
            col_offset=10,
            end_lineno=38,
            end_col_offset=28),
          lineno=38,
          col_offset=4,
          end_lineno=38,
          end_col_offset=28),
        If(
          Compare(
            Name(
              'lvl',
              Load(),
              lineno=39,
              col_offset=7,
              end_lineno=39,
              end_col_offset=10),
            [
              In()],
            [
              ListComp(
                Attribute(
                  Name(
                    'level',
                    Load(),
                    lineno=39,
                    col_offset=15,
                    end_lineno=39,
                    end_col_offset=20),
                  'value',
                  Load(),
                  lineno=39,
                  col_offset=15,
                  end_lineno=39,
                  end_col_offset=26),
                [
                  comprehension(
                    Name(
                      'level',
                      Store(),
                      lineno=39,
                      col_offset=31,
                      end_lineno=39,
                      end_col_offset=36),
                    Name(
                      'LogLevel',
                      Load(),
                      lineno=39,
                      col_offset=40,
                      end_lineno=39,
                      end_col_offset=48),
                    [],
                    0)],
                lineno=39,
                col_offset=14,
                end_lineno=39,
                end_col_offset=49)],
            lineno=39,
            col_offset=7,
            end_lineno=39,
            end_col_offset=49),
          [
            Return(
              Call(
                Name(
                  'LogLevel',
                  Load(),
                  lineno=40,
                  col_offset=15,
                  end_lineno=40,
                  end_col_offset=23),
                [
                  Name(
                    'lvl',
                    Load(),
                    lineno=40,
                    col_offset=24,
                    end_lineno=40,
                    end_col_offset=27)],
                [],
                lineno=40,
                col_offset=15,
                end_lineno=40,
                end_col_offset=28),
              lineno=40,
              col_offset=8,
              end_lineno=40,
              end_col_offset=28)],
          [],
          lineno=39,
          col_offset=4,
          end_lineno=40,
          end_col_offset=28),
        Return(
          Call(
            Name(
              'LogLevel',
              Load(),
              lineno=41,
              col_offset=11,
              end_lineno=41,
              end_col_offset=19),
            [
              Constant(
                'UKN',
                lineno=41,
                col_offset=20,
                end_lineno=41,
                end_col_offset=25)],
            [],
            lineno=41,
            col_offset=11,
            end_lineno=41,
            end_col_offset=26),
          lineno=41,
          col_offset=4,
          end_lineno=41,
          end_col_offset=26)],
      [],
      lineno=30,
      col_offset=0,
      end_lineno=41,
      end_col_offset=26),
    FunctionDef(
      'convert_to_short_log',
      arguments(
        [],
        [
          arg(
            'log_level',
            lineno=44,
            col_offset=25,
            end_lineno=44,
            end_col_offset=34),
          arg(
            'message',
            lineno=44,
            col_offset=36,
            end_lineno=44,
            end_col_offset=43)],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      [
        Expr(
          Constant(
            "Convert a log message to its shorter format.\n\n    :param log_level: enum - 'LogLevel.<level>'  e.g.  'LogLevel.Error'\n    :param message: str - log message\n    :return: enum -  'LogLevelInt.<value>` e.g. 'LogLevelInt.5'\n    ",
            lineno=45,
            col_offset=4,
            end_lineno=50,
            end_col_offset=7),
          lineno=45,
          col_offset=4,
          end_lineno=50,
          end_col_offset=7),
        Return(
          JoinedStr(
            [
              FormattedValue(
                Attribute(
                  Subscript(
                    Name(
                      'LogLevelInt',
                      Load(),
                      lineno=52,
                      col_offset=14,
                      end_lineno=52,
                      end_col_offset=25),
                    Attribute(
                      Name(
                        'log_level',
                        Load(),
                        lineno=52,
                        col_offset=26,
                        end_lineno=52,
                        end_col_offset=35),
                      'name',
                      Load(),
                      lineno=52,
                      col_offset=26,
                      end_lineno=52,
                      end_col_offset=40),
                    Load(),
                    lineno=52,
                    col_offset=14,
                    end_lineno=52,
                    end_col_offset=41),
                  'value',
                  Load(),
                  lineno=52,
                  col_offset=14,
                  end_lineno=52,
                  end_col_offset=47),
                -1,
                lineno=52,
                col_offset=11,
                end_lineno=52,
                end_col_offset=59),
              Constant(
                ':',
                lineno=52,
                col_offset=11,
                end_lineno=52,
                end_col_offset=59),
              FormattedValue(
                Name(
                  'message',
                  Load(),
                  lineno=52,
                  col_offset=50,
                  end_lineno=52,
                  end_col_offset=57),
                -1,
                lineno=52,
                col_offset=11,
                end_lineno=52,
                end_col_offset=59)],
            lineno=52,
            col_offset=11,
            end_lineno=52,
            end_col_offset=59),
          lineno=52,
          col_offset=4,
          end_lineno=52,
          end_col_offset=59)],
      [],
      lineno=44,
      col_offset=0,
      end_lineno=52,
      end_col_offset=59),
    FunctionDef(
      'get_warn_alias',
      arguments(
        [],
        [],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      [
        Expr(
          Constant(
            "Returns the enum for LogLevel.Warning.\n\n    :return: enum - 'LogLevel'.<alias>'\n    ",
            lineno=56,
            col_offset=4,
            end_lineno=59,
            end_col_offset=7),
          lineno=56,
          col_offset=4,
          end_lineno=59,
          end_col_offset=7),
        Return(
          Call(
            Name(
              'LogLevel',
              Load(),
              lineno=61,
              col_offset=11,
              end_lineno=61,
              end_col_offset=19),
            [
              Constant(
                'WRN',
                lineno=61,
                col_offset=20,
                end_lineno=61,
                end_col_offset=25)],
            [],
            lineno=61,
            col_offset=11,
            end_lineno=61,
            end_col_offset=26),
          lineno=61,
          col_offset=4,
          end_lineno=61,
          end_col_offset=26)],
      [],
      lineno=55,
      col_offset=0,
      end_lineno=61,
      end_col_offset=26),
    FunctionDef(
      'get_members',
      arguments(
        [],
        [],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      [
        Expr(
          Constant(
            'Return all members of the enum.\n\n    :return: list of tuples -  [(name1, value1), (name2, value2)]\n    ',
            lineno=65,
            col_offset=4,
            end_lineno=68,
            end_col_offset=7),
          lineno=65,
          col_offset=4,
          end_lineno=68,
          end_col_offset=7),
        Assign(
          [
            Name(
              'out_list',
              Store(),
              lineno=70,
              col_offset=4,
              end_lineno=70,
              end_col_offset=12)],
          List(
            [],
            Load(),
            lineno=70,
            col_offset=15,
            end_lineno=70,
            end_col_offset=17),
          lineno=70,
          col_offset=4,
          end_lineno=70,
          end_col_offset=17),
        For(
          Name(
            'member',
            Store(),
            lineno=71,
            col_offset=8,
            end_lineno=71,
            end_col_offset=14),
          Name(
            'LogLevel',
            Load(),
            lineno=71,
            col_offset=18,
            end_lineno=71,
            end_col_offset=26),
          [
            Expr(
              Call(
                Attribute(
                  Name(
                    'out_list',
                    Load(),
                    lineno=72,
                    col_offset=8,
                    end_lineno=72,
                    end_col_offset=16),
                  'append',
                  Load(),
                  lineno=72,
                  col_offset=8,
                  end_lineno=72,
                  end_col_offset=23),
                [
                  Tuple(
                    [
                      Attribute(
                        Name(
                          'member',
                          Load(),
                          lineno=72,
                          col_offset=25,
                          end_lineno=72,
                          end_col_offset=31),
                        'name',
                        Load(),
                        lineno=72,
                        col_offset=25,
                        end_lineno=72,
                        end_col_offset=36),
                      Attribute(
                        Name(
                          'member',
                          Load(),
                          lineno=72,
                          col_offset=38,
                          end_lineno=72,
                          end_col_offset=44),
                        'value',
                        Load(),
                        lineno=72,
                        col_offset=38,
                        end_lineno=72,
                        end_col_offset=50)],
                    Load(),
                    lineno=72,
                    col_offset=24,
                    end_lineno=72,
                    end_col_offset=51)],
                [],
                lineno=72,
                col_offset=8,
                end_lineno=72,
                end_col_offset=52),
              lineno=72,
              col_offset=8,
              end_lineno=72,
              end_col_offset=52)],
          [],
          lineno=71,
          col_offset=4,
          end_lineno=72,
          end_col_offset=52),
        Return(
          Name(
            'out_list',
            Load(),
            lineno=73,
            col_offset=11,
            end_lineno=73,
            end_col_offset=19),
          lineno=73,
          col_offset=4,
          end_lineno=73,
          end_col_offset=19)],
      [],
      lineno=64,
      col_offset=0,
      end_lineno=73,
      end_col_offset=19)],
  [])
## END TREE BEFORE ##

## BEGIN NORMALIZED TREE ##
Module(
  [
    ImportFrom(
      'enum',
      [
        alias(
          'Enum',
          lineno=1,
          col_offset=17,
          end_lineno=1,
          end_col_offset=21)],
      0,
      lineno=1,
      col_offset=0,
      end_lineno=1,
      end_col_offset=21),
    ClassDef(
      'placeholder_0',
      [
        Name(
          'Enum',
          Load(),
          lineno=4,
          col_offset=15,
          end_lineno=4,
          end_col_offset=19)],
      [],
      [
        Assign(
          [
            Name(
              'placeholder_1',
              Store(),
              lineno=7,
              col_offset=4,
              end_lineno=7,
              end_col_offset=9)],
          Constant(
            'TRC',
            lineno=7,
            col_offset=12,
            end_lineno=7,
            end_col_offset=17),
          lineno=7,
          col_offset=4,
          end_lineno=7,
          end_col_offset=17),
        Assign(
          [
            Name(
              'placeholder_2',
              Store(),
              lineno=8,
              col_offset=4,
              end_lineno=8,
              end_col_offset=9)],
          Constant(
            'DBG',
            lineno=8,
            col_offset=12,
            end_lineno=8,
            end_col_offset=17),
          lineno=8,
          col_offset=4,
          end_lineno=8,
          end_col_offset=17),
        Assign(
          [
            Name(
              'placeholder_3',
              Store(),
              lineno=9,
              col_offset=4,
              end_lineno=9,
              end_col_offset=8)],
          Constant(
            'INF',
            lineno=9,
            col_offset=11,
            end_lineno=9,
            end_col_offset=16),
          lineno=9,
          col_offset=4,
          end_lineno=9,
          end_col_offset=16),
        Assign(
          [
            Name(
              'placeholder_4',
              Store(),
              lineno=10,
              col_offset=4,
              end_lineno=10,
              end_col_offset=11)],
          Constant(
            'WRN',
            lineno=10,
            col_offset=14,
            end_lineno=10,
            end_col_offset=19),
          lineno=10,
          col_offset=4,
          end_lineno=10,
          end_col_offset=19),
        Assign(
          [
            Name(
              'placeholder_5',
              Store(),
              lineno=11,
              col_offset=4,
              end_lineno=11,
              end_col_offset=8)],
          Constant(
            'WRN',
            lineno=11,
            col_offset=11,
            end_lineno=11,
            end_col_offset=16),
          lineno=11,
          col_offset=4,
          end_lineno=11,
          end_col_offset=16),
        Assign(
          [
            Name(
              'placeholder_6',
              Store(),
              lineno=12,
              col_offset=4,
              end_lineno=12,
              end_col_offset=9)],
          Constant(
            'ERR',
            lineno=12,
            col_offset=12,
            end_lineno=12,
            end_col_offset=17),
          lineno=12,
          col_offset=4,
          end_lineno=12,
          end_col_offset=17),
        Assign(
          [
            Name(
              'placeholder_7',
              Store(),
              lineno=13,
              col_offset=4,
              end_lineno=13,
              end_col_offset=9)],
          Constant(
            'FTL',
            lineno=13,
            col_offset=12,
            end_lineno=13,
            end_col_offset=17),
          lineno=13,
          col_offset=4,
          end_lineno=13,
          end_col_offset=17),
        Assign(
          [
            Name(
              'placeholder_8',
              Store(),
              lineno=14,
              col_offset=4,
              end_lineno=14,
              end_col_offset=11)],
          Constant(
            'UKN',
            lineno=14,
            col_offset=14,
            end_lineno=14,
            end_col_offset=19),
          lineno=14,
          col_offset=4,
          end_lineno=14,
          end_col_offset=19)],
      [],
      lineno=4,
      col_offset=0,
      end_lineno=14,
      end_col_offset=19),
    ClassDef(
      'placeholder_9',
      [
        Name(
          'Enum',
          Load(),
          lineno=17,
          col_offset=18,
          end_lineno=17,
          end_col_offset=22)],
      [],
      [
        Assign(
          [
            Name(
              'placeholder_1',
              Store(),
              lineno=20,
              col_offset=4,
              end_lineno=20,
              end_col_offset=9)],
          Constant(
            0,
            lineno=20,
            col_offset=12,
            end_lineno=20,
            end_col_offset=13),
          lineno=20,
          col_offset=4,
          end_lineno=20,
          end_col_offset=13),
        Assign(
          [
            Name(
              'placeholder_2',
              Store(),
              lineno=21,
              col_offset=4,
              end_lineno=21,
              end_col_offset=9)],
          Constant(
            1,
            lineno=21,
            col_offset=12,
            end_lineno=21,
            end_col_offset=13),
          lineno=21,
          col_offset=4,
          end_lineno=21,
          end_col_offset=13),
        Assign(
          [
            Name(
              'placeholder_3',
              Store(),
              lineno=22,
              col_offset=4,
              end_lineno=22,
              end_col_offset=8)],
          Constant(
            4,
            lineno=22,
            col_offset=11,
            end_lineno=22,
            end_col_offset=12),
          lineno=22,
          col_offset=4,
          end_lineno=22,
          end_col_offset=12),
        Assign(
          [
            Name(
              'placeholder_4',
              Store(),
              lineno=23,
              col_offset=4,
              end_lineno=23,
              end_col_offset=11)],
          Constant(
            5,
            lineno=23,
            col_offset=14,
            end_lineno=23,
            end_col_offset=15),
          lineno=23,
          col_offset=4,
          end_lineno=23,
          end_col_offset=15),
        Assign(
          [
            Name(
              'placeholder_5',
              Store(),
              lineno=24,
              col_offset=4,
              end_lineno=24,
              end_col_offset=8)],
          Constant(
            5,
            lineno=24,
            col_offset=11,
            end_lineno=24,
            end_col_offset=12),
          lineno=24,
          col_offset=4,
          end_lineno=24,
          end_col_offset=12),
        Assign(
          [
            Name(
              'placeholder_6',
              Store(),
              lineno=25,
              col_offset=4,
              end_lineno=25,
              end_col_offset=9)],
          Constant(
            6,
            lineno=25,
            col_offset=12,
            end_lineno=25,
            end_col_offset=13),
          lineno=25,
          col_offset=4,
          end_lineno=25,
          end_col_offset=13),
        Assign(
          [
            Name(
              'placeholder_7',
              Store(),
              lineno=26,
              col_offset=4,
              end_lineno=26,
              end_col_offset=9)],
          Constant(
            7,
            lineno=26,
            col_offset=12,
            end_lineno=26,
            end_col_offset=13),
          lineno=26,
          col_offset=4,
          end_lineno=26,
          end_col_offset=13),
        Assign(
          [
            Name(
              'placeholder_8',
              Store(),
              lineno=27,
              col_offset=4,
              end_lineno=27,
              end_col_offset=11)],
          Constant(
            42,
            lineno=27,
            col_offset=14,
            end_lineno=27,
            end_col_offset=16),
          lineno=27,
          col_offset=4,
          end_lineno=27,
          end_col_offset=16)],
      [],
      lineno=17,
      col_offset=0,
      end_lineno=27,
      end_col_offset=16),
    FunctionDef(
      'placeholder_10',
      arguments(
        [],
        [
          arg(
            'placeholder_11',
            lineno=30,
            col_offset=20,
            end_lineno=30,
            end_col_offset=27)],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      [
        Assign(
          [
            Name(
              'placeholder_12',
              Store(),
              lineno=37,
              col_offset=4,
              end_lineno=37,
              end_col_offset=13)],
          Call(
            Attribute(
              Name(
                'placeholder_11',
                Load(),
                lineno=37,
                col_offset=16,
                end_lineno=37,
                end_col_offset=23),
              'split',
              Load(),
              lineno=37,
              col_offset=16,
              end_lineno=37,
              end_col_offset=29),
            [
              Constant(
                ':',
                lineno=37,
                col_offset=30,
                end_lineno=37,
                end_col_offset=33)],
            [],
            lineno=37,
            col_offset=16,
            end_lineno=37,
            end_col_offset=34),
          lineno=37,
          col_offset=4,
          end_lineno=37,
          end_col_offset=34),
        Assign(
          [
            Name(
              'placeholder_13',
              Store(),
              lineno=38,
              col_offset=4,
              end_lineno=38,
              end_col_offset=7)],
          Subscript(
            Subscript(
              Name(
                'placeholder_12',
                Load(),
                lineno=38,
                col_offset=10,
                end_lineno=38,
                end_col_offset=19),
              Constant(
                0,
                lineno=38,
                col_offset=20,
                end_lineno=38,
                end_col_offset=21),
              Load(),
              lineno=38,
              col_offset=10,
              end_lineno=38,
              end_col_offset=22),
            Slice(
              Constant(
                1,
                lineno=38,
                col_offset=23,
                end_lineno=38,
                end_col_offset=24),
              UnaryOp(
                USub(),
                Constant(
                  1,
                  lineno=38,
                  col_offset=26,
                  end_lineno=38,
                  end_col_offset=27),
                lineno=38,
                col_offset=25,
                end_lineno=38,
                end_col_offset=27),
              lineno=38,
              col_offset=23,
              end_lineno=38,
              end_col_offset=27),
            Load(),
            lineno=38,
            col_offset=10,
            end_lineno=38,
            end_col_offset=28),
          lineno=38,
          col_offset=4,
          end_lineno=38,
          end_col_offset=28),
        If(
          Compare(
            Name(
              'placeholder_13',
              Load(),
              lineno=39,
              col_offset=7,
              end_lineno=39,
              end_col_offset=10),
            [
              In()],
            [
              ListComp(
                Attribute(
                  Name(
                    'placeholder_14',
                    Load(),
                    lineno=39,
                    col_offset=15,
                    end_lineno=39,
                    end_col_offset=20),
                  'value',
                  Load(),
                  lineno=39,
                  col_offset=15,
                  end_lineno=39,
                  end_col_offset=26),
                [
                  comprehension(
                    Name(
                      'placeholder_14',
                      Store(),
                      lineno=39,
                      col_offset=31,
                      end_lineno=39,
                      end_col_offset=36),
                    Name(
                      'placeholder_0',
                      Load(),
                      lineno=39,
                      col_offset=40,
                      end_lineno=39,
                      end_col_offset=48),
                    [],
                    0)],
                lineno=39,
                col_offset=14,
                end_lineno=39,
                end_col_offset=49)],
            lineno=39,
            col_offset=7,
            end_lineno=39,
            end_col_offset=49),
          [
            Return(
              Call(
                Name(
                  'placeholder_0',
                  Load(),
                  lineno=40,
                  col_offset=15,
                  end_lineno=40,
                  end_col_offset=23),
                [
                  Name(
                    'placeholder_13',
                    Load(),
                    lineno=40,
                    col_offset=24,
                    end_lineno=40,
                    end_col_offset=27)],
                [],
                lineno=40,
                col_offset=15,
                end_lineno=40,
                end_col_offset=28),
              lineno=40,
              col_offset=8,
              end_lineno=40,
              end_col_offset=28)],
          [],
          lineno=39,
          col_offset=4,
          end_lineno=40,
          end_col_offset=28),
        Return(
          Call(
            Name(
              'placeholder_0',
              Load(),
              lineno=41,
              col_offset=11,
              end_lineno=41,
              end_col_offset=19),
            [
              Constant(
                'UKN',
                lineno=41,
                col_offset=20,
                end_lineno=41,
                end_col_offset=25)],
            [],
            lineno=41,
            col_offset=11,
            end_lineno=41,
            end_col_offset=26),
          lineno=41,
          col_offset=4,
          end_lineno=41,
          end_col_offset=26)],
      [],
      lineno=30,
      col_offset=0,
      end_lineno=41,
      end_col_offset=26),
    FunctionDef(
      'placeholder_15',
      arguments(
        [],
        [
          arg(
            'placeholder_16',
            lineno=44,
            col_offset=25,
            end_lineno=44,
            end_col_offset=34),
          arg(
            'placeholder_11',
            lineno=44,
            col_offset=36,
            end_lineno=44,
            end_col_offset=43)],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      [
        Return(
          JoinedStr(
            [
              FormattedValue(
                Attribute(
                  Subscript(
                    Name(
                      'placeholder_9',
                      Load(),
                      lineno=52,
                      col_offset=14,
                      end_lineno=52,
                      end_col_offset=25),
                    Attribute(
                      Name(
                        'placeholder_16',
                        Load(),
                        lineno=52,
                        col_offset=26,
                        end_lineno=52,
                        end_col_offset=35),
                      'name',
                      Load(),
                      lineno=52,
                      col_offset=26,
                      end_lineno=52,
                      end_col_offset=40),
                    Load(),
                    lineno=52,
                    col_offset=14,
                    end_lineno=52,
                    end_col_offset=41),
                  'value',
                  Load(),
                  lineno=52,
                  col_offset=14,
                  end_lineno=52,
                  end_col_offset=47),
                -1,
                lineno=52,
                col_offset=11,
                end_lineno=52,
                end_col_offset=59),
              Constant(
                ':',
                lineno=52,
                col_offset=11,
                end_lineno=52,
                end_col_offset=59),
              FormattedValue(
                Name(
                  'placeholder_11',
                  Load(),
                  lineno=52,
                  col_offset=50,
                  end_lineno=52,
                  end_col_offset=57),
                -1,
                lineno=52,
                col_offset=11,
                end_lineno=52,
                end_col_offset=59)],
            lineno=52,
            col_offset=11,
            end_lineno=52,
            end_col_offset=59),
          lineno=52,
          col_offset=4,
          end_lineno=52,
          end_col_offset=59)],
      [],
      lineno=44,
      col_offset=0,
      end_lineno=52,
      end_col_offset=59),
    FunctionDef(
      'placeholder_17',
      arguments(
        [],
        [],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      [
        Return(
          Call(
            Name(
              'placeholder_0',
              Load(),
              lineno=61,
              col_offset=11,
              end_lineno=61,
              end_col_offset=19),
            [
              Constant(
                'WRN',
                lineno=61,
                col_offset=20,
                end_lineno=61,
                end_col_offset=25)],
            [],
            lineno=61,
            col_offset=11,
            end_lineno=61,
            end_col_offset=26),
          lineno=61,
          col_offset=4,
          end_lineno=61,
          end_col_offset=26)],
      [],
      lineno=55,
      col_offset=0,
      end_lineno=61,
      end_col_offset=26),
    FunctionDef(
      'placeholder_18',
      arguments(
        [],
        [],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      [
        Assign(
          [
            Name(
              'placeholder_19',
              Store(),
              lineno=70,
              col_offset=4,
              end_lineno=70,
              end_col_offset=12)],
          List(
            [],
            Load(),
            lineno=70,
            col_offset=15,
            end_lineno=70,
            end_col_offset=17),
          lineno=70,
          col_offset=4,
          end_lineno=70,
          end_col_offset=17),
        For(
          Name(
            'placeholder_20',
            Store(),
            lineno=71,
            col_offset=8,
            end_lineno=71,
            end_col_offset=14),
          Name(
            'placeholder_0',
            Load(),
            lineno=71,
            col_offset=18,
            end_lineno=71,
            end_col_offset=26),
          [
            Expr(
              Call(
                Attribute(
                  Name(
                    'placeholder_19',
                    Load(),
                    lineno=72,
                    col_offset=8,
                    end_lineno=72,
                    end_col_offset=16),
                  'append',
                  Load(),
                  lineno=72,
                  col_offset=8,
                  end_lineno=72,
                  end_col_offset=23),
                [
                  Tuple(
                    [
                      Attribute(
                        Name(
                          'placeholder_20',
                          Load(),
                          lineno=72,
                          col_offset=25,
                          end_lineno=72,
                          end_col_offset=31),
                        'name',
                        Load(),
                        lineno=72,
                        col_offset=25,
                        end_lineno=72,
                        end_col_offset=36),
                      Attribute(
                        Name(
                          'placeholder_20',
                          Load(),
                          lineno=72,
                          col_offset=38,
                          end_lineno=72,
                          end_col_offset=44),
                        'value',
                        Load(),
                        lineno=72,
                        col_offset=38,
                        end_lineno=72,
                        end_col_offset=50)],
                    Load(),
                    lineno=72,
                    col_offset=24,
                    end_lineno=72,
                    end_col_offset=51)],
                [],
                lineno=72,
                col_offset=8,
                end_lineno=72,
                end_col_offset=52),
              lineno=72,
              col_offset=8,
              end_lineno=72,
              end_col_offset=52)],
          [],
          lineno=71,
          col_offset=4,
          end_lineno=72,
          end_col_offset=52),
        Return(
          Name(
            'placeholder_19',
            Load(),
            lineno=73,
            col_offset=11,
            end_lineno=73,
            end_col_offset=19),
          lineno=73,
          col_offset=4,
          end_lineno=73,
          end_col_offset=19)],
      [],
      lineno=64,
      col_offset=0,
      end_lineno=73,
      end_col_offset=19)],
  [])
## END NORMALIZED TREE ##